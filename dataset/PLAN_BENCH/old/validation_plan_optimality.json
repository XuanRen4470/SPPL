[
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 287,
        "example_instance_ids": [
            286
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object c, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object d.\nMy goal is to have that object a craves object c, object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object c\novercome object d from object b\nattack object c\novercome object c from object d\nattack object a\novercome object a from object c\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, harmony, planet object a, planet object b, province object a and province object d.\nMy goal is to have that object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(overcome d a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n",
        "gold_label": "(feast d c)\n(overcome d a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 4,
        "example_instance_ids": [
            3
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_0, package_1 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_0, location_0_0 is in the city city_0 and location_1_0 is in the city city_1.\nMy goal is to have that package_0 is at location_1_0 and package_1 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfly airplane_0 from location_1_0 to location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_1 from airplane_0 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_0, package_1 is at location_1_0, truck_0 is at location_0_0, truck_1 is at location_1_0, location_0_0 is in the city city_0 and location_1_0 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0 and package_1 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n",
        "gold_label": "(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 248,
        "example_instance_ids": [
            247
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_2, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_1, package_5 is at location_2_2 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_3 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_2 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nload package_4 into airplane_0 at location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_1 into airplane_0 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_5 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\nload package_5 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_3 from airplane_0 at location_2_0\nunload package_2 from airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\nunload package_0 from airplane_0 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\nThe total time to execute the plan is 38 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_1, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_0_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_2 and package_6 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-airplane p2 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n",
        "gold_label": "(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-airplane p2 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 247,
        "example_instance_ids": [
            246
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_1_1, package_5 is at location_0_0 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_1 at location_1_1\nload package_2 into airplane_1 at location_1_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_3 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nunload package_3 from truck_1 at location_1_1\nunload package_0 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 32 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_2, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_1, package_5 is at location_2_2 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p4 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(load-airplane p5 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n",
        "gold_label": "(load-truck p4 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p4 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(load-airplane p5 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 98,
        "example_instance_ids": [
            97
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_2_1 and package_5 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_2 at location_2_1\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_0 from airplane_0 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_4 into truck_1 at location_1_1\nload package_2 into truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_4 into airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nload package_1 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_1 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_4 from airplane_0 at location_2_0\nunload package_2 from airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nunload package_4 from truck_2 at location_2_1\n[PLAN END]\nThe total time to execute the plan is 34 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_2_1, package_4 is at location_1_1 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t2 l2-1)\n(load-truck p3 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(load-airplane p1 a0 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(unload-airplane p4 a0 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(unload-truck p4 t1 l1-1)\n(unload-airplane p1 a0 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n",
        "gold_label": "(load-truck p4 t2 l2-1)\n(load-truck p3 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(load-airplane p1 a0 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(unload-airplane p4 a0 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(unload-truck p4 t1 l1-1)\n(unload-airplane p1 a0 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 312,
        "example_instance_ids": [
            311
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object b, harmony, planet object a, planet object c, province object a and province object d.\nMy goal is to have that object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object b\novercome object d from object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nfeast object d from object a\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack d)\n(overcome d b)\n",
        "gold_label": "(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 248,
        "example_instance_ids": [
            247
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, object d craves object b, harmony, planet object b and province object c.\nMy goal is to have that object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object d\nsuccumb object a\nfeast object d from object b\nsuccumb object d\nattack object c\novercome object c from object b\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object d, province object a, province object b, province object c and province object d.\nMy goal is to have that object a craves object b, object b craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack b)\n(overcome b d)\n(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(attack b)\n(overcome b d)\n(attack a)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 407,
        "example_instance_ids": [
            406
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object c craves object b, harmony, planet object d and province object c.\nMy goal is to have that object c craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nfeast object a from object d\nsuccumb object a\nattack object c\novercome object c from object a\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object a, harmony, planet object a, planet object b, planet object c, province object b, province object c and province object d.\nMy goal is to have that object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d a)\n(overcome d b)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast d a)\n(overcome d b)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 211,
        "example_instance_ids": [
            210
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\nsuccumb object a\nattack object b\novercome object b from object d\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, object c craves object b, harmony, planet object d and province object a.\nMy goal is to have that object c craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(succumb a)\n(feast c b)\n(overcome c a)\n(feast b d)\n(succumb b)\n(attack d)\n(overcome d b)\n",
        "gold_label": "(feast a c)\n(succumb a)\n(feast c b)\n(overcome c a)\n(feast b d)\n(succumb b)\n(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 65,
        "example_instance_ids": [
            64
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_2_1, package_1 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1 and package_1 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nfly airplane_0 from location_0_0 to location_2_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_0 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1 and package_1 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n",
        "gold_label": "(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 234,
        "example_instance_ids": [
            233
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_2_1, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_2, package_5 is at location_1_0 and package_6 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_1\nload package_6 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_2 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nload package_1 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_5 from truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\nload package_5 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\n[PLAN END]\nThe total time to execute the plan is 31 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_2_1, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_2_0, package_4 is at location_0_2, package_5 is at location_2_2 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p6 a1 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(unload-truck p4 t1 l1-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n",
        "gold_label": "(load-airplane p6 a1 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(unload-truck p4 t1 l1-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 223,
        "example_instance_ids": [
            222
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_1_2, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_1\nload package_1 into airplane_1 at location_1_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_3 into airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\nunload package_6 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\nload package_6 into airplane_1 at location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nunload package_0 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_6 into truck_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nload package_5 into truck_1 at location_1_2\nunload package_4 from truck_1 at location_1_2\nunload package_2 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 41 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(load-airplane p6 a0 l2-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p4 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(load-truck p4 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-airplane p1 a0 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p5 t1 l1-2)\n",
        "gold_label": "(load-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(load-airplane p6 a0 l2-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p4 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(load-truck p4 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-airplane p1 a0 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p5 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 267,
        "example_instance_ids": [
            266
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, planet object d, province object a, province object c and province object d.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object d\nattack object b\novercome object b from object c\nfeast object a from object d\novercome object a from object b\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, object d craves object a, harmony, planet object c and province object d.\nMy goal is to have that object a craves object d, object b craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d a)\n(succumb d)\n(feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack d)\n(overcome d c)\n(attack a)\n(overcome a d)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast d a)\n(succumb d)\n(feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack d)\n(overcome d c)\n(attack a)\n(overcome a d)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 367,
        "example_instance_ids": [
            366
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object b craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nattack object b\novercome object b from object c\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, object d craves object b, harmony, planet object b and province object c.\nMy goal is to have that object a craves object b and object b craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 262,
        "example_instance_ids": [
            261
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_2 into truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_6 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_1 from truck_2 at location_2_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_3 into truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_1 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 31 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p6 t0 l0-2)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(unload-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n",
        "gold_label": "(load-truck p6 t0 l0-2)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(unload-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 285,
        "example_instance_ids": [
            284
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_1, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_2_2, package_5 is at location_0_2 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nload package_5 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_5 from airplane_1 at location_0_0\nload package_5 into truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nunload package_5 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_6 into truck_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_3 from truck_1 at location_1_1\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\n[PLAN END]\nThe total time to execute the plan is 37 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_2 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(unload-truck p3 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n",
        "gold_label": "(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(unload-truck p3 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 336,
        "example_instance_ids": [
            335
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object c craves object a, harmony, planet object a, planet object d, province object b and province object c.\nMy goal is to have that object b craves object c, object c craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\novercome object b from object c\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(overcome a b)\n(attack c)\n(overcome c d)\n(feast a b)\n(overcome a c)\n",
        "gold_label": "(feast a d)\n(overcome a b)\n(attack c)\n(overcome c d)\n(feast a b)\n(overcome a c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 112,
        "example_instance_ids": [
            111
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object d, object c craves object a, harmony, planet object d and province object c.\nMy goal is to have that object a craves object c, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nfeast object b from object d\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(succumb a)\n(feast d c)\n(overcome d b)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast a d)\n(succumb a)\n(feast d c)\n(overcome d b)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 245,
        "example_instance_ids": [
            244
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object d, object d craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object b, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object d\nsuccumb object c\nfeast object d from object b\novercome object d from object c\nfeast object b from object a\nsuccumb object b\nattack object a\novercome object a from object b\nfeast object d from object c\novercome object d from object a\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object a, harmony, planet object a, planet object c, province object b and province object d.\nMy goal is to have that object b craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b c)\n(succumb b)\n(feast d a)\n(overcome d c)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast b c)\n(succumb b)\n(feast d a)\n(overcome d c)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 193,
        "example_instance_ids": [
            192
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_2_0, package_3 is at location_2_1, package_4 is at location_2_2, package_5 is at location_2_2, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_2, package_5 is at location_1_0 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_2\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_3 into truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nunload package_4 from truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nfly airplane_0 from location_1_0 to location_2_0\nload package_6 into airplane_0 at location_2_0\nload package_5 into airplane_0 at location_2_0\nload package_4 into airplane_0 at location_2_0\nload package_3 into airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nload package_1 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nload package_3 into truck_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_3 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_5 from airplane_0 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 39 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_2_0, package_3 is at location_2_1, package_4 is at location_2_2, package_5 is at location_2_2, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_2, package_5 is at location_1_0 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t2 l2-2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-airplane p5 a1 l1-0)\n",
        "gold_label": "(load-truck p5 t2 l2-2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-airplane p5 a1 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 121,
        "example_instance_ids": [
            120
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b, planet object d, province object c and province object d.\nMy goal is to have that object a craves object c, object b craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\nattack object b\novercome object b from object a\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object c, harmony, planet object a, planet object b, planet object c, province object a, province object b and province object d.\nMy goal is to have that object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(succumb d)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast d c)\n(succumb d)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 139,
        "example_instance_ids": [
            138
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, planet object d, province object a, province object c and province object d.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object d\novercome object d from object c\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object a craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack a)\n(overcome a d)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(attack a)\n(overcome a d)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 106,
        "example_instance_ids": [
            105
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_1, package_2 is at location_2_1, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_2_0 and package_5 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_1\nload package_1 into truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nload package_4 into airplane_0 at location_1_0\nload package_3 into airplane_0 at location_1_0\nunload package_1 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_4 from airplane_0 at location_2_0\nunload package_3 from airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 24 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_0, package_2 is at location_1_1, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_1_0 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p2 t1 l1-1)\n(load-truck p0 t0 l0-1)\n(load-airplane p4 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-airplane p2 a0 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p0 a0 l2-0)\n",
        "gold_label": "(load-truck p2 t1 l1-1)\n(load-truck p0 t0 l0-1)\n(load-airplane p4 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-airplane p2 a0 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p0 a0 l2-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 311,
        "example_instance_ids": [
            310
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, object d craves object b, harmony, planet object a, planet object b, province object c and province object d.\nMy goal is to have that object a craves object c, object b craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object c\nfeast object d from object b\novercome object d from object a\nattack object b\novercome object b from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object b, harmony, planet object a, planet object c, province object a and province object d.\nMy goal is to have that object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d b)\n(overcome d a)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c b)\n(feast d a)\n(overcome d c)\n",
        "gold_label": "(feast d b)\n(overcome d a)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c b)\n(feast d a)\n(overcome d c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 59,
        "example_instance_ids": [
            58
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, airplane_2 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_1_0 is in the city city_1 and location_2_0 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_0_0 and package_2 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into airplane_2 at location_2_0\nfly airplane_2 from location_2_0 to location_0_0\nunload package_2 from airplane_2 at location_0_0\nload package_1 into airplane_0 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_1 from airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p0 a0 l1-0)\n",
        "gold_label": "(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p0 a0 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 27,
        "example_instance_ids": [
            26
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_0 and package_2 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\nfly airplane_0 from location_1_0 to location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_1 from airplane_0 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 15 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_2, package_2 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_1 and package_2 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t0 l0-1 l0-2 c0)\n(load-truck p2 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p2 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(load-truck p2 t1 l1-0)\n(unload-airplane p1 a0 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n",
        "gold_label": "(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p2 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p2 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(load-truck p2 t1 l1-0)\n(unload-airplane p1 a0 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 61,
        "example_instance_ids": [
            60
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nfly airplane_1 from location_0_0 to location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_0 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n",
        "gold_label": "(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 173,
        "example_instance_ids": [
            172
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_2 and package_5 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nload package_2 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_0 at location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_1 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nload package_5 into airplane_0 at location_2_0\nunload package_3 from airplane_0 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_3 from truck_2 at location_2_2\nunload package_1 from airplane_0 at location_2_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_5 from airplane_0 at location_0_0\nload package_5 into truck_0 at location_0_0\nunload package_4 from airplane_0 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nunload package_4 from truck_0 at location_0_2\nunload package_0 from airplane_0 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 28 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_2 and package_5 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p3 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p5 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(unload-airplane p1 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(load-truck p5 t0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(unload-truck p4 t0 l0-2)\n(unload-airplane p0 a1 l0-0)\n",
        "gold_label": "(load-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p3 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p5 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(unload-airplane p1 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(load-truck p5 t0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(unload-truck p4 t0 l0-2)\n(unload-airplane p0 a1 l0-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 102,
        "example_instance_ids": [
            101
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_2_1, package_5 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_1, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_0 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_1 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nload package_3 into airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\nload package_1 into truck_2 at location_2_0\nload package_0 into airplane_0 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_4 into truck_2 at location_2_1\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_4 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_3 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\n[PLAN END]\nThe total time to execute the plan is 24 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_2_1, package_5 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_1, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_0 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n",
        "gold_label": "(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 123,
        "example_instance_ids": [
            122
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_0 from airplane_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t0 l0-1 l0-0 c0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n",
        "gold_label": "(drive-truck t0 l0-1 l0-0 c0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 115,
        "example_instance_ids": [
            114
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_0, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_2_1, package_3 is at location_0_1, package_4 is at location_2_1 and package_5 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_3 from truck_0 at location_0_1\nfly airplane_1 from location_2_0 to location_0_0\nload package_2 into airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nunload package_4 from truck_1 at location_1_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_4 into airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nunload package_2 from truck_2 at location_2_1\nunload package_0 from airplane_1 at location_2_0\n[PLAN END]\nThe total time to execute the plan is 25 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_1_0, package_3 is at location_2_0, package_4 is at location_1_0 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n",
        "gold_label": "(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 199,
        "example_instance_ids": [
            198
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c, planet object d, province object a and province object d.\nMy goal is to have that object b craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, object d craves object a, harmony, planet object c and province object b.\nMy goal is to have that object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b d)\n(succumb b)\n(feast d a)\n(overcome d b)\n(feast a c)\n(succumb a)\n(feast d b)\n(overcome d c)\n",
        "gold_label": "(feast b d)\n(succumb b)\n(feast d a)\n(overcome d b)\n(feast a c)\n(succumb a)\n(feast d b)\n(overcome d c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 305,
        "example_instance_ids": [
            304
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object c, object c craves object a, harmony, planet object d and province object b.\nMy goal is to have that object b craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object c\nfeast object a from object d\nsuccumb object a\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, harmony, planet object a, planet object b, province object a and province object d.\nMy goal is to have that object b craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(succumb d)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b a)\n(attack d)\n(overcome d b)\n",
        "gold_label": "(feast d c)\n(succumb d)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b a)\n(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 9,
        "example_instance_ids": [
            8
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1 and location_1_1 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_0 from airplane_0 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_1, package_1 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1 and location_1_1 is in the city city_1.\nMy goal is to have that package_0 is at location_1_0 and package_1 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n",
        "gold_label": "(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 189,
        "example_instance_ids": [
            188
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_2_1, package_1 is at location_0_1, package_2 is at location_1_0, package_3 is at location_1_0, package_4 is at location_0_1, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_3 into truck_1 at location_1_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\nload package_1 into truck_0 at location_0_1\nfly airplane_0 from location_1_0 to location_2_0\nload package_6 into airplane_0 at location_2_0\nload package_5 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nunload package_3 from truck_1 at location_1_2\nfly airplane_0 from location_1_0 to location_0_0\nunload package_5 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_5 into truck_0 at location_0_0\nunload package_4 from truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\nload package_4 into airplane_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_4 from airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\n[PLAN END]\nThe total time to execute the plan is 31 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, package_0 is at location_1_1, package_1 is at location_0_2, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_2_0, package_6 is at location_2_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_0_2 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t2 l2-0)\n(load-truck p3 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(load-truck p1 t0 l0-2)\n(load-airplane p5 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n",
        "gold_label": "(load-truck p4 t2 l2-0)\n(load-truck p3 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(load-truck p1 t0 l0-2)\n(load-airplane p5 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 201,
        "example_instance_ids": [
            200
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, object d craves object a, harmony, planet object c and province object d.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object a\nsuccumb object d\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nattack object d\novercome object d from object c\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, planet object d, province object b, province object c and province object d.\nMy goal is to have that object a craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b a)\n(succumb b)\n(attack a)\n(overcome a b)\n",
        "gold_label": "(feast b a)\n(succumb b)\n(attack a)\n(overcome a b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 489,
        "example_instance_ids": [
            488
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object e, object d craves object b, object e craves object d, harmony, planet object a, planet object b, province object a and province object c.\nMy goal is to have that object c craves object a, object d craves object c and object e craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object e\novercome object c from object a\nfeast object e from object d\nsuccumb object e\nfeast object d from object b\novercome object d from object c\nattack object e\novercome object e from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object b craves object d, object e craves object c, harmony, planet object c, planet object d, province object a and province object b.\nMy goal is to have that object b craves object e, object c craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a e)\n(succumb a)\n(feast e c)\n(succumb e)\n(feast b d)\n(overcome b e)\n(attack c)\n(overcome c a)\n(attack d)\n(overcome d b)\n",
        "gold_label": "(feast a e)\n(succumb a)\n(feast e c)\n(succumb e)\n(feast b d)\n(overcome b e)\n(attack c)\n(overcome c a)\n(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 114,
        "example_instance_ids": [
            113
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object d craves object c, harmony, planet object c and province object b.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object d\nsuccumb object a\nfeast object d from object c\novercome object d from object a\nattack object c\novercome object c from object b\nfeast object d from object a\novercome object d from object c\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object d, object d craves object b, harmony, planet object a and province object c.\nMy goal is to have that object b craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c d)\n(succumb c)\n(feast d b)\n(overcome d c)\n(feast b a)\n(succumb b)\n(feast d c)\n(overcome d a)\n(attack b)\n(overcome b d)\n",
        "gold_label": "(feast c d)\n(succumb c)\n(feast d b)\n(overcome d c)\n(feast b a)\n(succumb b)\n(feast d c)\n(overcome d a)\n(attack b)\n(overcome b d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 215,
        "example_instance_ids": [
            214
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object c.\nMy goal is to have that object b craves object c, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\nsuccumb object a\nattack object d\novercome object d from object a\nattack object c\novercome object c from object d\nattack object b\novercome object b from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object b, harmony, planet object a, planet object c, province object a and province object d.\nMy goal is to have that object b craves object c, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d b)\n(overcome d a)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c d)\n(attack b)\n(overcome b c)\n",
        "gold_label": "(feast d b)\n(overcome d a)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c d)\n(attack b)\n(overcome b c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 165,
        "example_instance_ids": [
            164
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, airplane_2 is at location_2_0, package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_2_1, package_3 is at location_2_1, package_4 is at location_1_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_1_2, package_3 is at location_1_0 and package_4 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_1 into airplane_2 at location_2_0\nfly airplane_2 from location_2_0 to location_0_0\nunload package_1 from airplane_2 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_1 from truck_0 at location_0_1\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_3 into truck_2 at location_2_1\nload package_2 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_3 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\nload package_3 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\n[PLAN END]\nThe total time to execute the plan is 27 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, airplane_2 is at location_1_0, package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_1_1 and package_4 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p1 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p0 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n",
        "gold_label": "(load-truck p1 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p0 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 101,
        "example_instance_ids": [
            100
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object d, object d craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b and object b craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object d\nsuccumb object c\nfeast object d from object b\nsuccumb object d\nattack object b\novercome object b from object d\nattack object a\novercome object a from object b\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object d, object c craves object a, harmony, planet object d and province object c.\nMy goal is to have that object b craves object d and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(feast b d)\n(overcome b a)\n(attack d)\n(overcome d c)\n(feast b a)\n(overcome b d)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(feast b d)\n(overcome b a)\n(attack d)\n(overcome d c)\n(feast b a)\n(overcome b d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 230,
        "example_instance_ids": [
            229
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object b, harmony, planet object a, planet object c, province object a and province object d.\nMy goal is to have that object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object b\novercome object d from object a\nfeast object b from object c\nsuccumb object b\nfeast object d from object a\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object d, object d craves object b, harmony, planet object a and province object c.\nMy goal is to have that object b craves object d, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c d)\n(succumb c)\n(feast d b)\n(overcome d c)\n(feast b a)\n(succumb b)\n(feast d c)\n(overcome d a)\n(attack b)\n(overcome b d)\n(attack c)\n(overcome c b)\n",
        "gold_label": "(feast c d)\n(succumb c)\n(feast d b)\n(overcome d c)\n(feast b a)\n(succumb b)\n(feast d c)\n(overcome d a)\n(attack b)\n(overcome b d)\n(attack c)\n(overcome c b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 12,
        "example_instance_ids": [
            11
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1 and location_1_1 is in the city city_1.\nMy goal is to have that package_0 is at location_0_1 and package_1 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 7 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1 and location_1_1 is in the city city_1.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_0 and package_2 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p0 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n",
        "gold_label": "(load-airplane p0 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 301,
        "example_instance_ids": [
            300
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object c craves object a, harmony, planet object a, planet object d, province object b and province object c.\nMy goal is to have that object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\nsuccumb object b\nattack object d\novercome object d from object b\nfeast object c from object a\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, harmony, planet object a, planet object b, planet object d, province object b, province object c and province object d.\nMy goal is to have that object b craves object c and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(overcome c d)\n(attack b)\n(overcome b c)\n",
        "gold_label": "(feast c a)\n(overcome c d)\n(attack b)\n(overcome b c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 222,
        "example_instance_ids": [
            221
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object d, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\nsuccumb object a\nfeast object d from object c\novercome object d from object a\nattack object b\novercome object b from object d\nattack object c\novercome object c from object b\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object d craves object b, harmony, planet object b, planet object c, province object a and province object d.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d b)\n(succumb d)\n(feast a c)\n(overcome a d)\n(attack b)\n(overcome b c)\n(feast a d)\n(overcome a b)\n(attack d)\n(overcome d a)\n",
        "gold_label": "(feast d b)\n(succumb d)\n(feast a c)\n(overcome a d)\n(attack b)\n(overcome b c)\n(feast a d)\n(overcome a b)\n(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 96,
        "example_instance_ids": [
            95
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, object d craves object a, harmony, planet object c and province object b.\nMy goal is to have that object b craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\nsuccumb object b\nfeast object d from object a\novercome object d from object b\nfeast object a from object c\nsuccumb object a\nfeast object d from object b\novercome object d from object c\nattack object b\novercome object b from object a\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object b, harmony, planet object b, planet object d, province object a and province object c.\nMy goal is to have that object b craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(succumb a)\n(attack d)\n(overcome d a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b d)\n",
        "gold_label": "(feast a d)\n(succumb a)\n(attack d)\n(overcome d a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 184,
        "example_instance_ids": [
            183
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object d, harmony, planet object a, planet object d, province object a and province object b.\nMy goal is to have that object a craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object d\nsuccumb object c\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object d craves object b, harmony, planet object b, planet object c, province object a and province object d.\nMy goal is to have that object a craves object b and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d b)\n(succumb d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast d b)\n(succumb d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 441,
        "example_instance_ids": [
            440
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, harmony, planet object b, planet object d, province object b and province object c.\nMy goal is to have that object a craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object d\novercome object a from object c\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object b, harmony, planet object b, planet object d, province object a and province object c.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n(feast a d)\n(overcome a b)\n(attack d)\n(overcome d a)\n",
        "gold_label": "(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n(feast a d)\n(overcome a b)\n(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 104,
        "example_instance_ids": [
            103
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object d, object d craves object b, harmony, planet object a and province object c.\nMy goal is to have that object b craves object c and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object d\nsuccumb object c\nfeast object d from object b\nsuccumb object d\nattack object c\novercome object c from object d\nfeast object b from object a\novercome object b from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object c, object d craves object b, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n(attack d)\n(overcome d a)\n",
        "gold_label": "(feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(feast b c)\n(succumb b)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 152,
        "example_instance_ids": [
            151
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, harmony, planet object a, planet object b, province object a and province object d.\nMy goal is to have that object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object c\novercome object d from object a\nfeast object c from object b\nsuccumb object c\nfeast object d from object a\novercome object d from object b\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, object d craves object b, harmony, planet object a and province object d.\nMy goal is to have that object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d b)\n(succumb d)\n(feast b c)\n(succumb b)\n(feast c a)\n(overcome c b)\n(attack d)\n(overcome d c)\n",
        "gold_label": "(feast d b)\n(succumb d)\n(feast b c)\n(succumb b)\n(feast c a)\n(overcome c b)\n(attack d)\n(overcome d c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 153,
        "example_instance_ids": [
            152
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_1_2, package_3 is at location_2_0, package_4 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_1_1, package_3 is at location_1_0 and package_4 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_1\nload package_3 into airplane_1 at location_2_0\nload package_1 into airplane_0 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\nload package_4 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\nfly airplane_1 from location_2_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_0 from airplane_1 at location_2_0\n[PLAN END]\nThe total time to execute the plan is 23 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_2_2, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_1_2 and package_4 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p4 t1 l1-2)\n(unload-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p1 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(unload-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n",
        "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p4 t1 l1-2)\n(unload-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p1 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(unload-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 168,
        "example_instance_ids": [
            167
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\nsuccumb object a\nfeast object d from object c\nsuccumb object d\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object d craves object a, harmony, planet object b, planet object c, province object c and province object d.\nMy goal is to have that object a craves object c, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d a)\n(succumb d)\n(feast a b)\n(overcome a d)\n(attack c)\n(overcome c b)\n(feast a d)\n(overcome a c)\n(attack d)\n(overcome d a)\n",
        "gold_label": "(feast d a)\n(succumb d)\n(feast a b)\n(overcome a d)\n(attack c)\n(overcome c b)\n(feast a d)\n(overcome a c)\n(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 242,
        "example_instance_ids": [
            241
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object b, harmony, planet object b, planet object d, province object a and province object c.\nMy goal is to have that object a craves object c and object b craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object a from object d\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object d craves object c, harmony, planet object c and province object b.\nMy goal is to have that object a craves object b and object b craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b a)\n(succumb b)\n(feast a d)\n(succumb a)\n(feast d c)\n(succumb d)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n",
        "gold_label": "(feast b a)\n(succumb b)\n(feast a d)\n(succumb a)\n(feast d c)\n(succumb d)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 344,
        "example_instance_ids": [
            343
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object d craves object c, harmony, planet object c and province object b.\nMy goal is to have that object c craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object a\nsuccumb object b\nfeast object a from object d\nsuccumb object a\nfeast object d from object c\novercome object d from object b\nattack object c\novercome object c from object a\nfeast object d from object b\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object c craves object a, harmony, planet object a, planet object d, province object b and province object c.\nMy goal is to have that object a craves object d and object b craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast b d)\n(overcome b c)\n(attack a)\n(overcome a d)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast b d)\n(overcome b c)\n(attack a)\n(overcome a d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 203,
        "example_instance_ids": [
            202
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_1, package_5 is at location_2_1, package_6 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_2_0, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_2_2 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_1 into airplane_1 at location_1_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_6 into truck_0 at location_0_1\nload package_4 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_4 from truck_0 at location_0_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_2 from airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_5 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nunload package_4 from truck_2 at location_2_2\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\nThe total time to execute the plan is 32 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_0_2, package_1 is at location_1_1, package_2 is at location_0_2, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_2_1, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_1, package_2 is at location_0_2, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_2_1 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n",
        "gold_label": "(load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 219,
        "example_instance_ids": [
            218
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, harmony, planet object c, planet object d, province object a and province object b.\nMy goal is to have that object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object b from object d\nsuccumb object b\nattack object c\novercome object c from object b\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, planet object d, province object b, province object c and province object d.\nMy goal is to have that object a craves object c and object b craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b a)\n(overcome b d)\n(attack a)\n(overcome a c)\n",
        "gold_label": "(feast b a)\n(overcome b d)\n(attack a)\n(overcome a c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 404,
        "example_instance_ids": [
            403
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object d, province object a, province object b, province object c and province object d.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object a craves object d and object b craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(overcome a d)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast a c)\n(overcome a d)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 104,
        "example_instance_ids": [
            103
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_1, package_3 is at location_0_0, package_4 is at location_1_0, package_5 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_1_0, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_0_1 and package_5 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_1\nload package_5 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_5 from airplane_1 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_4 into airplane_0 at location_1_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_3 into truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nunload package_3 from truck_2 at location_2_1\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\nunload package_1 from airplane_1 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_4 into truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\nunload package_0 from truck_0 at location_0_1\n[PLAN END]\nThe total time to execute the plan is 32 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_0, package_2 is at location_1_0, package_3 is at location_1_0, package_4 is at location_1_1 and package_5 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n",
        "gold_label": "(load-truck p5 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 294,
        "example_instance_ids": [
            293
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object c craves object a, object d craves object c, harmony, planet object a and province object b.\nMy goal is to have that object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\nsuccumb object b\nfeast object d from object c\novercome object d from object b\nfeast object c from object a\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object d, object d craves object a, harmony, planet object b and province object c.\nMy goal is to have that object b craves object c and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c d)\n(succumb c)\n(feast d a)\n(succumb d)\n(feast a b)\n(succumb a)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n",
        "gold_label": "(feast c d)\n(succumb c)\n(feast d a)\n(succumb d)\n(feast a b)\n(succumb a)\n(attack c)\n(overcome c a)\n(attack b)\n(overcome b c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 385,
        "example_instance_ids": [
            384
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object b, harmony, planet object a, planet object b, planet object c, province object a, province object c and province object d.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object b\novercome object d from object a\nattack object c\novercome object c from object b\nfeast object d from object a\novercome object d from object c\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, harmony, planet object a, planet object b, province object a and province object d.\nMy goal is to have that object a craves object c and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(succumb d)\n(feast c b)\n(overcome c d)\n(attack a)\n(overcome a c)\n",
        "gold_label": "(feast d c)\n(succumb d)\n(feast c b)\n(overcome c d)\n(attack a)\n(overcome a c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 203,
        "example_instance_ids": [
            202
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object c craves object b, harmony, planet object d and province object c.\nMy goal is to have that object a craves object d and object b craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\novercome object b from object c\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object d craves object c, harmony, planet object a, planet object c, province object b and province object d.\nMy goal is to have that object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(succumb d)\n(attack c)\n(overcome c b)\n",
        "gold_label": "(feast d c)\n(succumb d)\n(attack c)\n(overcome c b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 291,
        "example_instance_ids": [
            290
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object c.\nMy goal is to have that object a craves object c and object b craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\novercome object a from object c\nattack object b\novercome object b from object d\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, harmony, planet object c, planet object d, province object a and province object b.\nMy goal is to have that object a craves object c, object b craves object d and object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(succumb a)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n",
        "gold_label": "(feast a c)\n(succumb a)\n(attack c)\n(overcome c b)\n(attack a)\n(overcome a c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 105,
        "example_instance_ids": [
            104
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object c, object d craves object b, harmony, planet object c and province object a.\nMy goal is to have that object a craves object c, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\nsuccumb object a\nfeast object d from object b\nsuccumb object d\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nattack object a\novercome object a from object c\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, harmony, planet object c, planet object d, province object b and province object c.\nMy goal is to have that object b craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b a)\n(overcome b c)\n(feast a d)\n(succumb a)\n(feast b c)\n(overcome b d)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast b a)\n(overcome b c)\n(feast a d)\n(succumb a)\n(feast b c)\n(overcome b d)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 476,
        "example_instance_ids": [
            475
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object e craves object b, harmony, planet object a, planet object b, planet object c, planet object d, province object a, province object c, province object d and province object e.\nMy goal is to have that object b craves object e, object c craves object d, object d craves object a and object e craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nattack object d\novercome object d from object a\nattack object c\novercome object c from object d\nfeast object e from object b\novercome object e from object c\nattack object b\novercome object b from object e\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object e, object c craves object d, object d craves object a, harmony, planet object a, planet object e, province object b and province object c.\nMy goal is to have that object a craves object e, object c craves object a, object d craves object b and object e craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b e)\n(succumb b)\n(feast c d)\n(succumb c)\n(feast d a)\n(overcome d b)\n(attack e)\n(overcome e d)\n(attack a)\n(overcome a e)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast b e)\n(succumb b)\n(feast c d)\n(succumb c)\n(feast d a)\n(overcome d b)\n(attack e)\n(overcome e d)\n(attack a)\n(overcome a e)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 124,
        "example_instance_ids": [
            123
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\novercome object a from object c\n[PLAN END]\nThe total time to execute the plan is 2 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, planet object d, province object a, province object c and province object d.\nMy goal is to have that object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack c)\n(overcome c a)\n",
        "gold_label": "(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 56,
        "example_instance_ids": [
            55
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_1_0, package_2 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_1_0 is in the city city_1 and location_2_0 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_1_0 and package_2 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfly airplane_1 from location_1_0 to location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nload package_2 into airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 7 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_1_0 is in the city city_1 and location_2_0 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_0_0 and package_2 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n",
        "gold_label": "(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 380,
        "example_instance_ids": [
            379
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object c craves object a, harmony, planet object a, planet object d, province object b and province object c.\nMy goal is to have that object a craves object d, object c craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\nsuccumb object b\nattack object d\novercome object d from object b\nfeast object c from object a\nsuccumb object c\nattack object a\novercome object a from object d\nattack object c\novercome object c from object a\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object d, object d craves object b, harmony, planet object a and province object c.\nMy goal is to have that object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c d)\n(succumb c)\n(feast d b)\n(succumb d)\n(feast b a)\n(succumb b)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast c d)\n(succumb c)\n(feast d b)\n(succumb d)\n(feast b a)\n(succumb b)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 158,
        "example_instance_ids": [
            157
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object c, object b craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object d\novercome object a from object c\nfeast object d from object b\nsuccumb object d\nattack object b\novercome object b from object a\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object d, province object a, province object b, province object c and province object d.\nMy goal is to have that object b craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack b)\n(overcome b d)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(attack b)\n(overcome b d)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 233,
        "example_instance_ids": [
            232
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object a, harmony, planet object a, planet object b, planet object c, province object b, province object c and province object d.\nMy goal is to have that object b craves object c and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object a\nsuccumb object d\nattack object c\novercome object c from object a\nattack object b\novercome object b from object c\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object d craves object a, harmony, planet object b, planet object c, province object c and province object d.\nMy goal is to have that object a craves object b and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack c)\n(overcome c d)\n",
        "gold_label": "(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 452,
        "example_instance_ids": [
            451
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, planet object d, planet object e, province object b, province object c, province object d and province object e.\nMy goal is to have that object b craves object e, object d craves object a and object e craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nattack object e\novercome object e from object c\nfeast object b from object a\novercome object b from object e\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object c craves object b, object d craves object a, object e craves object c, harmony, planet object b and province object d.\nMy goal is to have that object a craves object e, object b craves object c and object e craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d a)\n(succumb d)\n(feast a e)\n(overcome a d)\n(feast e c)\n(overcome e a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n(feast e a)\n(overcome e b)\n(feast a d)\n(overcome a e)\n",
        "gold_label": "(feast d a)\n(succumb d)\n(feast a e)\n(overcome a d)\n(feast e c)\n(overcome e a)\n(feast c b)\n(succumb c)\n(attack b)\n(overcome b c)\n(feast e a)\n(overcome e b)\n(feast a d)\n(overcome a e)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 99,
        "example_instance_ids": [
            98
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object d, harmony, planet object a, planet object b, planet object d, province object a, province object b and province object c.\nMy goal is to have that object b craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object d\novercome object c from object a\nattack object b\novercome object b from object d\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object b, harmony, planet object b, planet object c, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(overcome a c)\n(feast d b)\n(succumb d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast a d)\n(overcome a c)\n(feast d b)\n(succumb d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 227,
        "example_instance_ids": [
            226
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object b, object d craves object a, harmony, planet object b and province object d.\nMy goal is to have that object a craves object b, object b craves object c and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object a\nsuccumb object d\nfeast object a from object c\nsuccumb object a\nfeast object c from object b\novercome object c from object d\nattack object b\novercome object b from object c\nattack object a\novercome object a from object b\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, harmony, planet object b, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object a craves object b, object b craves object d and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(succumb a)\n(attack d)\n(overcome d c)\n(attack b)\n(overcome b d)\n(attack a)\n(overcome a b)\n",
        "gold_label": "(feast a c)\n(succumb a)\n(attack d)\n(overcome d c)\n(attack b)\n(overcome b d)\n(attack a)\n(overcome a b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 447,
        "example_instance_ids": [
            446
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object b craves object d, object c craves object b, object e craves object c, harmony, planet object d and province object a.\nMy goal is to have that object c craves object d and object d craves object e. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object e\nsuccumb object a\nfeast object e from object c\nsuccumb object e\nfeast object c from object b\novercome object c from object a\nfeast object b from object d\nsuccumb object b\nattack object d\novercome object d from object e\nfeast object c from object a\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object e, object c craves object a, harmony, planet object d, planet object e, province object b and province object c.\nMy goal is to have that object a craves object b, object b craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast a d)\n(overcome a c)\n(feast b e)\n(overcome b d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast a d)\n(overcome a c)\n(feast b e)\n(overcome b d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 384,
        "example_instance_ids": [
            383
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c, planet object d, province object a and province object d.\nMy goal is to have that object a craves object c and object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\novercome object a from object d\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object b\nfeast object a from object d\novercome object a from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object b, harmony, planet object a, planet object b, planet object c, province object a, province object c and province object d.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d b)\n(overcome d a)\n(attack c)\n(overcome c b)\n(feast d a)\n(overcome d c)\n(attack a)\n(overcome a d)\n",
        "gold_label": "(feast d b)\n(overcome d a)\n(attack c)\n(overcome c b)\n(feast d a)\n(overcome d c)\n(attack a)\n(overcome a d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 139,
        "example_instance_ids": [
            138
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_1_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_2_2 and package_3 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nfly airplane_0 from location_2_0 to location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_2 from airplane_0 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_2 from truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_1 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nload package_1 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_1 from truck_0 at location_0_1\n[PLAN END]\nThe total time to execute the plan is 26 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_1_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_2_2 and package_3 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-airplane p2 a1 l1-0)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n",
        "gold_label": "(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-airplane p2 a1 l1-0)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 402,
        "example_instance_ids": [
            401
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object b, object d craves object c, harmony, planet object a and province object d.\nMy goal is to have that object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object c\nsuccumb object d\nfeast object c from object b\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object c craves object d, object d craves object b, harmony, planet object a and province object c.\nMy goal is to have that object a craves object d and object b craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c d)\n(succumb c)\n(feast d b)\n(succumb d)\n(feast b a)\n(overcome b c)\n(attack a)\n(overcome a d)\n(feast b c)\n(overcome b a)\n",
        "gold_label": "(feast c d)\n(succumb c)\n(feast d b)\n(succumb d)\n(feast b a)\n(overcome b c)\n(attack a)\n(overcome a d)\n(feast b c)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 40,
        "example_instance_ids": [
            39
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_0_1, package_5 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_1_0 and package_5 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nload package_4 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_4 from airplane_0 at location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nunload package_0 from airplane_0 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 23 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_0_1, package_5 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_1_0 and package_5 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n",
        "gold_label": "(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 464,
        "example_instance_ids": [
            463
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, object e craves object a, harmony, planet object a, planet object b, province object d and province object e.\nMy goal is to have that object a craves object e, object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object c\novercome object d from object e\nfeast object c from object b\nsuccumb object c\nfeast object d from object e\novercome object d from object b\nattack object c\novercome object c from object d\nfeast object e from object a\nsuccumb object e\nattack object a\novercome object a from object e\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object e, object c craves object a, object e craves object d, harmony, planet object d and province object c.\nMy goal is to have that object b craves object c, object c craves object d, object d craves object a and object e craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(feast b e)\n(succumb b)\n(feast e d)\n(succumb e)\n(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n(attack b)\n(overcome b c)\n(attack e)\n(overcome e b)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast a b)\n(succumb a)\n(feast b e)\n(succumb b)\n(feast e d)\n(succumb e)\n(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n(attack b)\n(overcome b c)\n(attack e)\n(overcome e b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 468,
        "example_instance_ids": [
            467
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object e, object e craves object b, harmony, planet object a, planet object c, province object a and province object d.\nMy goal is to have that object c craves object d and object e craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object e\nsuccumb object d\nfeast object e from object b\novercome object e from object a\nfeast object b from object c\nsuccumb object b\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object b craves object d, harmony, planet object c, planet object d, planet object e, province object a, province object b and province object c.\nMy goal is to have that object a craves object d, object c craves object e and object e craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b d)\n(succumb b)\n(feast a e)\n(overcome a d)\n(attack e)\n(overcome e b)\n(attack c)\n(overcome c e)\n",
        "gold_label": "(feast b d)\n(succumb b)\n(feast a e)\n(overcome a d)\n(attack e)\n(overcome e b)\n(attack c)\n(overcome c e)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 417,
        "example_instance_ids": [
            416
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, object c craves object d, harmony, planet object d and province object a.\nMy goal is to have that object a craves object c and object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\nsuccumb object b\nfeast object c from object d\novercome object c from object b\nattack object a\novercome object a from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object c, object c craves object a, harmony, planet object d and province object b.\nMy goal is to have that object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(feast a d)\n(succumb a)\n(attack d)\n(overcome d c)\n",
        "gold_label": "(feast b c)\n(succumb b)\n(feast c a)\n(succumb c)\n(feast a d)\n(succumb a)\n(attack d)\n(overcome d c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 33,
        "example_instance_ids": [
            32
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_2 and package_3 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_0 at location_0_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_2 into truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nload package_2 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_2 into truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\nThe total time to execute the plan is 25 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_0_1, package_3 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_2, package_2 is at location_1_1 and package_3 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t1 l1-0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n",
        "gold_label": "(load-truck p0 t1 l1-0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 225,
        "example_instance_ids": [
            224
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_1_2, package_6 is at location_1_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_1_2 and package_6 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_4 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\nload package_6 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nunload package_0 from airplane_1 at location_0_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nunload package_4 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nunload package_1 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 29 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_2_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n",
        "gold_label": "(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 475,
        "example_instance_ids": [
            474
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, object c craves object e, harmony, planet object d, planet object e, province object a and province object d.\nMy goal is to have that object b craves object a, object c craves object b, object d craves object e and object e craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object c\novercome object b from object a\nfeast object c from object e\novercome object c from object b\nattack object e\novercome object e from object c\nattack object d\novercome object d from object e\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object e craves object b, harmony, planet object a, planet object b, planet object c, planet object d, province object a, province object c, province object d and province object e.\nMy goal is to have that object b craves object e, object c craves object d, object d craves object a and object e craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n(feast e b)\n(overcome e c)\n(attack b)\n(overcome b e)\n",
        "gold_label": "(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n(feast e b)\n(overcome e c)\n(attack b)\n(overcome b e)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 179,
        "example_instance_ids": [
            178
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, airplane_2 is at location_0_0, package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_0_0, package_5 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_0, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_0_2 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_4 into truck_0 at location_0_0\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_5 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nunload package_3 from truck_0 at location_0_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nfly airplane_1 from location_0_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\nunload package_3 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 32 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, airplane_2 is at location_2_0, package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_1_2 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t2 l2-1)\n(load-airplane p4 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n",
        "gold_label": "(load-truck p5 t2 l2-1)\n(load-airplane p4 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 425,
        "example_instance_ids": [
            424
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, harmony, planet object a, planet object b, province object a and province object d.\nMy goal is to have that object a craves object c, object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object c\novercome object d from object a\nfeast object c from object b\nsuccumb object c\nfeast object d from object a\novercome object d from object b\nattack object c\novercome object c from object d\nattack object a\novercome object a from object c\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object d, harmony, planet object b, planet object d, province object a and province object b.\nMy goal is to have that object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(succumb a)\n(feast c d)\n(overcome c b)\n",
        "gold_label": "(feast a c)\n(succumb a)\n(feast c d)\n(overcome c b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 317,
        "example_instance_ids": [
            316
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, harmony, planet object a, planet object c, planet object d, province object a, province object b and province object c.\nMy goal is to have that object a craves object c, object b craves object a and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\nsuccumb object b\nattack object c\novercome object c from object d\nattack object a\novercome object a from object c\nattack object b\novercome object b from object a\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, object d craves object c, harmony, planet object a, planet object c, province object b and province object d.\nMy goal is to have that object a craves object d and object b craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b a)\n(succumb b)\n(attack a)\n(overcome a d)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast b a)\n(succumb b)\n(attack a)\n(overcome a d)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 375,
        "example_instance_ids": [
            374
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object d craves object a, harmony, planet object a, planet object c, province object b and province object d.\nMy goal is to have that object c craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object d from object a\novercome object d from object b\nattack object c\novercome object c from object a\nfeast object d from object b\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object d, object d craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object d, object b craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a b)\n(succumb a)\n(feast b d)\n(overcome b a)\n(feast d c)\n(succumb d)\n(feast b a)\n(overcome b c)\n(attack d)\n(overcome d b)\n(attack a)\n(overcome a d)\n",
        "gold_label": "(feast a b)\n(succumb a)\n(feast b d)\n(overcome b a)\n(feast d c)\n(succumb d)\n(feast b a)\n(overcome b c)\n(attack d)\n(overcome d b)\n(attack a)\n(overcome a d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 209,
        "example_instance_ids": [
            208
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_0 into truck_1 at location_1_2\nunload package_2 from truck_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_2 at location_2_0\nunload package_6 from truck_0 at location_0_0\nunload package_5 from truck_0 at location_0_0\nload package_2 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nunload package_3 from truck_0 at location_0_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_3 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nunload package_3 from truck_1 at location_1_2\nunload package_1 from truck_1 at location_1_2\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_0 from truck_2 at location_2_1\n[PLAN END]\nThe total time to execute the plan is 38 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_2_2, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_0_2 and package_6 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t1 l1-2)\n(load-truck p4 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(unload-truck p4 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n",
        "gold_label": "(load-truck p5 t1 l1-2)\n(load-truck p4 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(unload-truck p4 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 197,
        "example_instance_ids": [
            196
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_2_0, package_2 is at location_2_1, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_0_1, package_6 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_0_1, package_3 is at location_1_1, package_4 is at location_0_1, package_5 is at location_0_2 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_2 from truck_2 at location_2_0\nload package_4 into truck_0 at location_0_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_6 into airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\nunload package_4 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_1 from airplane_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\nunload package_1 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_3 from truck_1 at location_1_1\n[PLAN END]\nThe total time to execute the plan is 26 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_0, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_1_2 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n",
        "gold_label": "(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 88,
        "example_instance_ids": [
            87
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, airplane_2 is at location_2_0, package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_0_1, package_3 is at location_1_1 and package_4 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_2 at location_2_1\nload package_4 into truck_1 at location_1_1\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_3 from truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_0 from truck_2 at location_2_1\nload package_3 into airplane_2 at location_2_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nfly airplane_2 from location_2_0 to location_1_0\nunload package_3 from airplane_2 at location_1_0\nload package_3 into truck_1 at location_1_0\nunload package_4 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_3 from truck_1 at location_1_1\nload package_4 into airplane_2 at location_1_0\nfly airplane_2 from location_1_0 to location_2_0\nunload package_4 from airplane_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 27 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, airplane_2 is at location_1_0, package_0 is at location_0_1, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_0 and package_4 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t1 l1-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t2 l2-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n",
        "gold_label": "(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t1 l1-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t2 l2-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 455,
        "example_instance_ids": [
            454
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object d, object d craves object e, object e craves object a, harmony, planet object a and province object b.\nMy goal is to have that object a craves object b and object e craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object d\nsuccumb object c\nfeast object d from object e\nsuccumb object d\nfeast object e from object a\novercome object e from object d\nattack object a\novercome object a from object b\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object c craves object e, object e craves object b, harmony, planet object d and province object c.\nMy goal is to have that object d craves object a and object e craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c e)\n(succumb c)\n(feast e b)\n(overcome e c)\n(feast b a)\n(succumb b)\n(feast e c)\n(overcome e b)\n(feast a d)\n(succumb a)\n(attack d)\n(overcome d a)\n",
        "gold_label": "(feast c e)\n(succumb c)\n(feast e b)\n(overcome e c)\n(feast b a)\n(succumb b)\n(feast e c)\n(overcome e b)\n(feast a d)\n(succumb a)\n(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 99,
        "example_instance_ids": [
            98
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_2_1, package_4 is at location_1_1 and package_5 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_1\nload package_3 into truck_1 at location_1_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nfly airplane_0 from location_0_0 to location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_2 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nload package_5 into airplane_0 at location_2_0\nunload package_3 from airplane_0 at location_2_0\nload package_1 into airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_3 from truck_2 at location_2_1\nload package_4 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\nload package_5 into truck_1 at location_1_0\nunload package_4 from airplane_0 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\nunload package_4 from truck_1 at location_1_1\nunload package_1 from airplane_0 at location_1_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\n[PLAN END]\nThe total time to execute the plan is 34 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_0_0, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_1_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_2_0 is in the city city_2 and location_2_1 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_1, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_1_0 and package_5 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p4 a0 l2-0)\n(load-airplane p3 a0 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p5 a0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(unload-airplane p1 a0 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p2 a0 l2-0)\n",
        "gold_label": "(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p4 a0 l2-0)\n(load-airplane p3 a0 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p5 a0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(unload-airplane p1 a0 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p2 a0 l2-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 143,
        "example_instance_ids": [
            142
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, object d craves object c, harmony, planet object a, planet object b, province object a and province object d.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 2 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object d craves object b, harmony, planet object b, planet object c, province object a and province object d.\nMy goal is to have that object c craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(succumb a)\n(attack c)\n(overcome c a)\n(feast d b)\n(overcome d c)\n",
        "gold_label": "(feast a c)\n(succumb a)\n(attack c)\n(overcome c a)\n(feast d b)\n(overcome d c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 150,
        "example_instance_ids": [
            149
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_2_1 and package_4 is at location_2_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_1 into airplane_1 at location_2_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_4 into airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_3 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_3 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\n[PLAN END]\nThe total time to execute the plan is 19 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_2_2, package_3 is at location_0_1, package_4 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_2_1 and package_4 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(unload-airplane p1 a1 l2-0)\n",
        "gold_label": "(load-truck p4 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(unload-airplane p1 a1 l2-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 134,
        "example_instance_ids": [
            133
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_1_1, package_2 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_1 and package_2 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_2 into truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\nfly airplane_1 from location_0_0 to location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_0 from airplane_1 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 14 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, airplane_2 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_1, package_2 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_1 and package_2 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t1 l1-0 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-airplane p0 a2 l1-0)\n(fly-airplane a2 l1-0 l0-0)\n(unload-airplane p0 a2 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n",
        "gold_label": "(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-airplane p0 a2 l1-0)\n(fly-airplane a2 l1-0 l0-0)\n(unload-airplane p0 a2 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 209,
        "example_instance_ids": [
            208
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, object d craves object c, harmony, planet object b and province object d.\nMy goal is to have that object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object c\nsuccumb object d\nfeast object c from object a\nsuccumb object c\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object c craves object b, harmony, planet object d and province object c.\nMy goal is to have that object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c b)\n(succumb c)\n(feast b a)\n(succumb b)\n(feast a d)\n(succumb a)\n(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast c b)\n(succumb c)\n(feast b a)\n(succumb b)\n(feast a d)\n(succumb a)\n(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 141,
        "example_instance_ids": [
            140
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_1, package_2 is at location_1_2 and package_3 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_1 from truck_2 at location_2_0\nload package_3 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_3 from truck_0 at location_0_1\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_0 from truck_2 at location_2_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_2 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\n[PLAN END]\nThe total time to execute the plan is 27 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_2_2, package_3 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_0_2 and package_3 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n",
        "gold_label": "(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 197,
        "example_instance_ids": [
            196
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object d craves object c, harmony, planet object a, planet object c, province object a and province object b.\nMy goal is to have that object a craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\nsuccumb object b\nfeast object d from object c\nsuccumb object d\nattack object a\novercome object a from object d\nattack object c\novercome object c from object a\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object c craves object b, harmony, planet object a, planet object d, province object a and province object c.\nMy goal is to have that object a craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c b)\n(succumb c)\n(feast b d)\n(succumb b)\n(attack a)\n(overcome a d)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast c b)\n(succumb c)\n(feast b d)\n(succumb b)\n(attack a)\n(overcome a d)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 158,
        "example_instance_ids": [
            157
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_0_2 and package_4 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_3 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_4 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 20 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_0_2, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_2, package_3 is at location_0_0 and package_4 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p3 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p1 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(load-truck p1 t0 l0-0)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n",
        "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p3 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p1 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(load-truck p1 t0 l0-0)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 274,
        "example_instance_ids": [
            273
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_1_1, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_2_2 and package_6 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_1 at location_1_2\nload package_0 into truck_1 at location_1_2\nload package_2 into airplane_0 at location_1_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nload package_3 into airplane_0 at location_1_0\nunload package_5 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nload package_5 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nload package_5 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\n[PLAN END]\nThe total time to execute the plan is 36 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_2_2, package_5 is at location_0_1 and package_6 is at location_2_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n",
        "gold_label": "(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 260,
        "example_instance_ids": [
            259
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object a craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nattack object a\novercome object a from object b\nattack object d\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c, planet object d, province object a and province object d.\nMy goal is to have that object b craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a b)\n(succumb a)\n(feast b c)\n(overcome b a)\n(attack d)\n(overcome d b)\n",
        "gold_label": "(feast a b)\n(succumb a)\n(feast b c)\n(overcome b a)\n(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 247,
        "example_instance_ids": [
            246
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, harmony, planet object b, planet object d, province object c and province object d.\nMy goal is to have that object a craves object b, object b craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\novercome object a from object c\nattack object b\novercome object b from object d\nfeast object a from object c\novercome object a from object b\nattack object c\novercome object c from object a\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, object d craves object b, harmony, planet object b and province object c.\nMy goal is to have that object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(attack c)\n(overcome c b)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(attack c)\n(overcome c b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 356,
        "example_instance_ids": [
            355
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, harmony, planet object b, planet object d, province object b and province object c.\nMy goal is to have that object b craves object d and object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object d\nsuccumb object a\nattack object b\novercome object b from object d\nattack object c\novercome object c from object b\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object d craves object a, harmony, planet object b, planet object c, province object b and province object d.\nMy goal is to have that object a craves object d and object c craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d a)\n(succumb d)\n(feast a c)\n(overcome a d)\n(attack c)\n(overcome c b)\n",
        "gold_label": "(feast d a)\n(succumb d)\n(feast a c)\n(overcome a d)\n(attack c)\n(overcome c b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 22,
        "example_instance_ids": [
            21
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_1_0, truck_0 is at location_0_0, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t1 l1-0 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n",
        "gold_label": "(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 129,
        "example_instance_ids": [
            128
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0 and package_1 is at location_0_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_0 from airplane_1 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 11 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, airplane_2 is at location_2_0, package_0 is at location_0_2, package_1 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1 and package_1 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t1 l1-0 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n",
        "gold_label": "(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 457,
        "example_instance_ids": [
            456
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object c craves object b, object e craves object d, harmony, planet object b, planet object d, province object a and province object c.\nMy goal is to have that object b craves object c, object d craves object b and object e craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object e\nsuccumb object a\nfeast object e from object d\novercome object e from object a\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\nattack object d\novercome object d from object b\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object e, harmony, planet object a, planet object b, planet object c, planet object e, province object a, province object b, province object c and province object d.\nMy goal is to have that object b craves object e and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d e)\n(overcome d a)\n(attack b)\n(overcome b e)\n(feast d a)\n(overcome d b)\n",
        "gold_label": "(feast d e)\n(overcome d a)\n(attack b)\n(overcome b e)\n(feast d a)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 181,
        "example_instance_ids": [
            180
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, airplane_2 is at location_0_0, package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_2_2, package_5 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_2_0 and package_5 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nload package_5 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_5 from airplane_1 at location_0_0\nload package_5 into truck_0 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\nunload package_3 from truck_2 at location_2_0\nload package_3 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 28 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, airplane_2 is at location_0_0, package_0 is at location_1_2, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_1_2, package_4 is at location_2_2, package_5 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_0 and package_5 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(fly-airplane a2 l0-0 l1-0)\n(load-airplane p3 a2 l1-0)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a2 l1-0)\n(fly-airplane a2 l1-0 l2-0)\n(load-airplane p4 a2 l2-0)\n(unload-airplane p3 a2 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(load-airplane p2 a2 l2-0)\n(load-airplane p1 a2 l2-0)\n(fly-airplane a2 l2-0 l0-0)\n(unload-airplane p4 a2 l0-0)\n(unload-airplane p2 a2 l0-0)\n(unload-airplane p1 a2 l0-0)\n(unload-airplane p0 a2 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n",
        "gold_label": "(load-truck p4 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(fly-airplane a2 l0-0 l1-0)\n(load-airplane p3 a2 l1-0)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a2 l1-0)\n(fly-airplane a2 l1-0 l2-0)\n(load-airplane p4 a2 l2-0)\n(unload-airplane p3 a2 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(load-airplane p2 a2 l2-0)\n(load-airplane p1 a2 l2-0)\n(fly-airplane a2 l2-0 l0-0)\n(unload-airplane p4 a2 l0-0)\n(unload-airplane p2 a2 l0-0)\n(unload-airplane p1 a2 l0-0)\n(unload-airplane p0 a2 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 224,
        "example_instance_ids": [
            223
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, harmony, planet object a, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object a craves object d and object b craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 2 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c, planet object d, province object a and province object d.\nMy goal is to have that object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack d)\n(overcome d a)\n",
        "gold_label": "(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 272,
        "example_instance_ids": [
            271
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, harmony, planet object b, planet object c, planet object d, province object a, province object c and province object d.\nMy goal is to have that object b craves object d, object c craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object a\nattack object d\novercome object d from object c\nattack object b\novercome object b from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object c, harmony, planet object c, planet object d, province object a and province object d.\nMy goal is to have that object a craves object d, object c craves object a and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack d)\n(overcome d b)\n(attack a)\n(overcome a d)\n(attack c)\n(overcome c a)\n",
        "gold_label": "(feast a b)\n(succumb a)\n(feast b c)\n(succumb b)\n(attack d)\n(overcome d b)\n(attack a)\n(overcome a d)\n(attack c)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 169,
        "example_instance_ids": [
            168
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object d craves object a, harmony, planet object b, planet object c, province object c and province object d.\nMy goal is to have that object a craves object c, object c craves object b and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object a\nsuccumb object d\nfeast object a from object b\novercome object a from object d\nattack object c\novercome object c from object b\nfeast object a from object d\novercome object a from object c\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object a, object d craves object c, harmony, planet object a, planet object b, province object b and province object d.\nMy goal is to have that object a craves object b, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(succumb d)\n(feast c a)\n(succumb c)\n(attack a)\n(overcome a b)\n(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast d c)\n(succumb d)\n(feast c a)\n(succumb c)\n(attack a)\n(overcome a b)\n(attack d)\n(overcome d a)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 216,
        "example_instance_ids": [
            215
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_2_1, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_1_0 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_1\nload package_3 into truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_5 into truck_0 at location_0_1\nfly airplane_1 from location_1_0 to location_2_0\nload package_4 into airplane_1 at location_2_0\nload package_3 into airplane_1 at location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\nunload package_5 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 40 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_2_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-airplane p2 a0 l0-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p1 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n",
        "gold_label": "(load-airplane p2 a0 l0-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p1 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 270,
        "example_instance_ids": [
            269
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object d craves object a, harmony, planet object b, planet object c, province object c and province object d.\nMy goal is to have that object a craves object d, object c craves object b and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object a\nsuccumb object d\nfeast object a from object b\nsuccumb object a\nattack object c\novercome object c from object b\nattack object d\novercome object d from object c\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object d, object d craves object b, harmony, planet object b and province object a.\nMy goal is to have that object a craves object b, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a c)\n(succumb a)\n(feast c d)\n(succumb c)\n(feast d b)\n(overcome d c)\n(attack a)\n(overcome a b)\n(feast d c)\n(overcome d a)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(feast a c)\n(succumb a)\n(feast c d)\n(succumb c)\n(feast d b)\n(overcome d c)\n(attack a)\n(overcome a b)\n(feast d c)\n(overcome d a)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 192,
        "example_instance_ids": [
            191
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_2_0, package_5 is at location_0_2, package_6 is at location_1_2, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_2_1, package_5 is at location_1_1 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_2\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_5 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_1 from airplane_0 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nload package_2 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nunload package_0 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_2 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_6 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_5 from truck_1 at location_1_1\n[PLAN END]\nThe total time to execute the plan is 29 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_2_0, package_3 is at location_2_1, package_4 is at location_2_2, package_5 is at location_2_2, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_2, package_5 is at location_1_0 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t2 l2-2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p5 a0 l2-0)\n(load-airplane p4 a0 l2-0)\n(load-airplane p3 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-airplane p5 a0 l1-0)\n",
        "gold_label": "(load-truck p5 t2 l2-2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p5 a0 l2-0)\n(load-airplane p4 a0 l2-0)\n(load-airplane p3 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-airplane p5 a0 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 486,
        "example_instance_ids": [
            485
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object e, object e craves object c, harmony, planet object a, planet object c, planet object d, province object a, province object b and province object d.\nMy goal is to have that object a craves object e, object d craves object c and object e craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object e\nsuccumb object b\nfeast object e from object c\novercome object e from object b\nattack object a\novercome object a from object e\nattack object d\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object c craves object b, object d craves object a, harmony, planet object b, planet object e, province object c and province object d.\nMy goal is to have that object b craves object e, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d a)\n(overcome d c)\n(feast a e)\n(succumb a)\n(feast d c)\n(overcome d a)\n(feast c b)\n(overcome c d)\n(attack b)\n(overcome b e)\n",
        "gold_label": "(feast d a)\n(overcome d c)\n(feast a e)\n(succumb a)\n(feast d c)\n(overcome d a)\n(feast c b)\n(overcome c d)\n(attack b)\n(overcome b e)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 186,
        "example_instance_ids": [
            185
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, airplane_2 is at location_2_0, package_0 is at location_0_2, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_0_1 and package_5 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nfly airplane_2 from location_2_0 to location_0_0\nload package_3 into airplane_2 at location_0_0\nload package_1 into airplane_2 at location_0_0\nload package_0 into airplane_2 at location_0_0\nfly airplane_2 from location_0_0 to location_1_0\nunload package_3 from airplane_2 at location_1_0\nload package_3 into truck_1 at location_1_0\nunload package_1 from airplane_2 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_3 from truck_1 at location_1_1\nunload package_1 from truck_1 at location_1_1\nunload package_0 from airplane_2 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 23 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_0_2, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_2_2, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_0_1, package_4 is at location_2_0, package_5 is at location_1_2 and package_6 is at location_2_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(load-truck p4 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(load-airplane p4 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n",
        "gold_label": "(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(load-truck p4 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(load-airplane p4 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 408,
        "example_instance_ids": [
            407
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object a, harmony, planet object a, planet object b, planet object c, province object b, province object c and province object d.\nMy goal is to have that object c craves object d and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object a\novercome object d from object b\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, object d craves object a, harmony, planet object c and province object b.\nMy goal is to have that object a craves object c, object b craves object a and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b d)\n(succumb b)\n(feast d a)\n(succumb d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c d)\n(feast a b)\n(overcome a c)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast b d)\n(succumb b)\n(feast d a)\n(succumb d)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c d)\n(feast a b)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 280,
        "example_instance_ids": [
            279
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_6 into airplane_0 at location_2_0\nload package_5 into airplane_0 at location_2_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nunload package_0 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_5 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 24 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_1, package_6 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_1, package_3 is at location_2_2, package_4 is at location_1_1, package_5 is at location_2_1 and package_6 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p3 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n",
        "gold_label": "(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p3 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 167,
        "example_instance_ids": [
            166
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, airplane_2 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_0_2, package_3 is at location_2_2, package_4 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_1_1, package_3 is at location_0_0 and package_4 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_3 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\nload package_4 into airplane_2 at location_0_0\nload package_3 into airplane_1 at location_2_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nload package_2 into airplane_2 at location_0_0\nfly airplane_2 from location_0_0 to location_1_0\nunload package_4 from airplane_2 at location_1_0\nunload package_2 from airplane_2 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 24 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, airplane_2 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_1_2, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_2_1 and package_4 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t1 l1-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p2 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n",
        "gold_label": "(load-truck p0 t1 l1-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p2 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 440,
        "example_instance_ids": [
            439
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object d, harmony, planet object b, planet object d, province object a and province object b.\nMy goal is to have that object a craves object d, object b craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\nsuccumb object a\nfeast object c from object d\nsuccumb object c\nattack object b\novercome object b from object c\nattack object d\novercome object d from object b\nattack object a\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, harmony, planet object b, planet object d, province object b and province object c.\nMy goal is to have that object a craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c a)\n(succumb c)\n(feast a d)\n(overcome a c)\n(attack d)\n(overcome d b)\n",
        "gold_label": "(feast c a)\n(succumb c)\n(feast a d)\n(overcome a c)\n(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 234,
        "example_instance_ids": [
            233
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object d craves object a, harmony, planet object b, planet object c, province object c and province object d.\nMy goal is to have that object a craves object b and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 2 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object c, object d craves object b, harmony, planet object c and province object a.\nMy goal is to have that object a craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(attack a)\n(overcome a b)\n",
        "gold_label": "(feast a d)\n(succumb a)\n(feast d b)\n(succumb d)\n(attack a)\n(overcome a b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 161,
        "example_instance_ids": [
            160
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object d, object d craves object c, harmony, planet object c and province object a.\nMy goal is to have that object c craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object b from object d\nsuccumb object b\nfeast object d from object c\novercome object d from object b\nattack object c\novercome object c from object a\nfeast object d from object b\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object c, object c craves object a, harmony, planet object a, planet object d, province object b and province object d.\nMy goal is to have that object b craves object c and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack d)\n(overcome d b)\n",
        "gold_label": "(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 167,
        "example_instance_ids": [
            166
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object d, harmony, planet object a, planet object b, planet object d, province object a, province object b and province object c.\nMy goal is to have that object a craves object d and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object d\novercome object c from object b\nattack object a\novercome object a from object d\nfeast object c from object b\novercome object c from object a\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(succumb a)\n(feast d c)\n(succumb d)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n(attack d)\n(overcome d a)\n",
        "gold_label": "(feast a d)\n(succumb a)\n(feast d c)\n(succumb d)\n(attack b)\n(overcome b c)\n(attack a)\n(overcome a b)\n(attack d)\n(overcome d a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 320,
        "example_instance_ids": [
            319
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object d craves object c, harmony, planet object b, planet object c, province object a and province object d.\nMy goal is to have that object b craves object c, object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object b\nsuccumb object a\nfeast object d from object c\novercome object d from object a\nattack object c\novercome object c from object d\nattack object b\novercome object b from object c\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object b craves object d, harmony, planet object c, planet object d, province object a and province object b.\nMy goal is to have that object a craves object c, object b craves object a and object c craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b d)\n(succumb b)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c d)\n(feast a b)\n(overcome a c)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast b d)\n(succumb b)\n(feast a c)\n(overcome a b)\n(attack c)\n(overcome c d)\n(feast a b)\n(overcome a c)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 446,
        "example_instance_ids": [
            445
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object d craves object b, object e craves object a, harmony, planet object a, planet object b, planet object c, province object c, province object d and province object e.\nMy goal is to have that object b craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object d from object b\nsuccumb object d\nattack object b\novercome object b from object c\n[PLAN END]\nThe total time to execute the plan is 4 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object e, object b craves object d, object c craves object b, object e craves object c, harmony, planet object d and province object a.\nMy goal is to have that object c craves object d and object d craves object e. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a e)\n(succumb a)\n(feast e c)\n(succumb e)\n(feast c b)\n(overcome c a)\n(feast b d)\n(succumb b)\n(attack d)\n(overcome d e)\n(feast c a)\n(overcome c d)\n",
        "gold_label": "(feast a e)\n(succumb a)\n(feast e c)\n(succumb e)\n(feast c b)\n(overcome c a)\n(feast b d)\n(succumb b)\n(attack d)\n(overcome d e)\n(feast c a)\n(overcome c d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 465,
        "example_instance_ids": [
            464
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object e, object c craves object a, object e craves object d, harmony, planet object d and province object c.\nMy goal is to have that object b craves object c, object c craves object d, object d craves object a and object e craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object b\nsuccumb object a\nfeast object b from object e\nsuccumb object b\nfeast object e from object d\nsuccumb object e\nattack object d\novercome object d from object a\nattack object c\novercome object c from object d\nattack object b\novercome object b from object c\nattack object e\novercome object e from object b\n[PLAN END]\nThe total time to execute the plan is 16 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object a, harmony, planet object a, planet object c, planet object d, planet object e, province object b, province object c, province object d and province object e.\nMy goal is to have that object a craves object c, object c craves object e and object d craves object b. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack c)\n(overcome c e)\n(feast b a)\n(succumb b)\n(attack a)\n(overcome a c)\n(attack d)\n(overcome d b)\n",
        "gold_label": "(attack c)\n(overcome c e)\n(feast b a)\n(succumb b)\n(attack a)\n(overcome a c)\n(attack d)\n(overcome d b)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 388,
        "example_instance_ids": [
            387
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object c, object c craves object a, harmony, planet object d and province object b.\nMy goal is to have that object a craves object d and object b craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object c\nsuccumb object b\nfeast object c from object a\nsuccumb object c\nattack object b\novercome object b from object a\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object d craves object a, harmony, planet object a, planet object c, province object b and province object c.\nMy goal is to have that object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast b d)\n(succumb b)\n(feast d a)\n(overcome d c)\n",
        "gold_label": "(feast b d)\n(succumb b)\n(feast d a)\n(overcome d c)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 25,
        "example_instance_ids": [
            24
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_2, truck_0 is at location_0_2, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_0_2 and package_1 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 7 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_1 and package_1 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n",
        "gold_label": "(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 26,
        "example_instance_ids": [
            25
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_1 and package_1 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_1 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_1 from airplane_1 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 11 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_0 and package_2 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t1 l1-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p1 a0 l1-0)\n",
        "gold_label": "(load-truck p0 t1 l1-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p1 a0 l1-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 252,
        "example_instance_ids": [
            251
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object a, object d craves object b, harmony, planet object b and province object c.\nMy goal is to have that object a craves object b, object c craves object a and object d craves object c. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object a\nsuccumb object c\nfeast object a from object d\nsuccumb object a\nfeast object d from object b\nsuccumb object d\nattack object a\novercome object a from object b\nattack object c\novercome object c from object a\nattack object d\novercome object d from object c\n[PLAN END]\nThe total time to execute the plan is 12 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object d, harmony, planet object b, planet object d, province object a and province object c.\nMy goal is to have that object a craves object b and object c craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast c d)\n(overcome c a)\n",
        "gold_label": "(feast c d)\n(overcome c a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 245,
        "example_instance_ids": [
            244
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_2, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_1_1 and package_6 is at location_2_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_2\nload package_5 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_6 into truck_1 at location_1_1\nunload package_5 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_2 into airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\nunload package_6 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\nload package_6 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_4 into truck_0 at location_0_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\n[PLAN END]\nThe total time to execute the plan is 38 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_1_2, package_3 is at location_2_2, package_4 is at location_1_1, package_5 is at location_1_0, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_1_0 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p3 t2 l2-0)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n",
        "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p3 t2 l2-0)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 205,
        "example_instance_ids": [
            204
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_0_2, package_3 is at location_0_1, package_4 is at location_0_1, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_1_0, package_5 is at location_2_0 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_6 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_1 into airplane_1 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\nload package_3 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\n[PLAN END]\nThe total time to execute the plan is 30 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_2_1, package_5 is at location_0_0, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_2 and package_6 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p4 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n",
        "gold_label": "(load-truck p4 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 220,
        "example_instance_ids": [
            219
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_0, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_1_0 and package_6 is at location_1_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_0 from truck_2 at location_2_2\nload package_3 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nfly airplane_0 from location_0_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 37 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_1, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_0_0 and package_6 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n",
        "gold_label": "(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 173,
        "example_instance_ids": [
            172
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object c, object c craves object d, harmony, planet object b, planet object d, province object a and province object b.\nMy goal is to have that object a craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object a from object c\novercome object a from object b\nfeast object c from object d\nsuccumb object c\nfeast object a from object b\novercome object a from object d\n[PLAN END]\nThe total time to execute the plan is 6 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object b craves object d, object d craves object c, harmony, planet object c and province object a.\nMy goal is to have that object a craves object d and object b craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a b)\n(succumb a)\n(feast b d)\n(succumb b)\n(attack a)\n(overcome a d)\n(attack b)\n(overcome b a)\n",
        "gold_label": "(feast a b)\n(succumb a)\n(feast b d)\n(succumb b)\n(attack a)\n(overcome a d)\n(attack b)\n(overcome b a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 39,
        "example_instance_ids": [
            38
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_1_0, package_0 is at location_1_1, package_1 is at location_0_2, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_1_2 and package_5 is at location_1_0. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_2 into airplane_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_2 from airplane_0 at location_1_0\nunload package_1 from airplane_0 at location_1_0\n[PLAN END]\nThe total time to execute the plan is 19 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_0_1, package_5 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1 and location_1_2 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_1_0 and package_5 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(unload-airplane p0 a0 l0-0)\n",
        "gold_label": "(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(unload-airplane p0 a0 l0-0)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 174,
        "example_instance_ids": [
            173
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_2 and package_5 is at location_0_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nload package_2 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_5 into airplane_1 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_3 from truck_2 at location_2_2\nunload package_1 from airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_5 from airplane_1 at location_0_0\nload package_5 into truck_0 at location_0_0\nunload package_4 from airplane_1 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nunload package_4 from truck_0 at location_0_2\nunload package_0 from airplane_1 at location_0_0\n[PLAN END]\nThe total time to execute the plan is 28 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_0_2, package_5 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_0_1 and package_5 is at location_1_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (load-truck p0 t1 l1-1)\n(load-airplane p2 a1 l0-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p5 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(unload-truck p5 t2 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n",
        "gold_label": "(load-truck p0 t1 l1-1)\n(load-airplane p2 a1 l0-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p5 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(unload-truck p5 t2 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 210,
        "example_instance_ids": [
            209
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object b craves object a, object c craves object b, harmony, planet object d and province object c.\nMy goal is to have that object c craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nfeast object b from object a\nsuccumb object b\nfeast object a from object d\nsuccumb object a\nattack object d\novercome object d from object a\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 10 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object d craves object c, harmony, planet object b, planet object c, province object a and province object b.\nMy goal is to have that object b craves object d. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast a d)\n(succumb a)\n(attack b)\n(overcome b d)\n",
        "gold_label": "(feast a d)\n(succumb a)\n(attack b)\n(overcome b d)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 494,
        "example_instance_ids": [
            493
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object b craves object d, object e craves object c, harmony, planet object a, planet object c, planet object d, province object a, province object b and province object e.\nMy goal is to have that object b craves object a, object c craves object d and object d craves object e. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object b from object d\novercome object b from object a\nfeast object e from object c\nsuccumb object e\nattack object d\novercome object d from object e\nattack object c\novercome object c from object d\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object c craves object b, harmony, planet object a, planet object b, planet object d, planet object e, province object a, province object c, province object d and province object e.\nMy goal is to have that object d craves object c and object e craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (attack d)\n(overcome d c)\n(attack e)\n(overcome e a)\n",
        "gold_label": "(attack d)\n(overcome d c)\n(attack e)\n(overcome e a)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 255,
        "example_instance_ids": [
            254
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. It takes one minute to do this action.\nLoad a package into an airplane. It takes one minute to do this action.\nUnload a package from a truck. It takes one minute to do this action.\nUnload a package from an airplane. It takes one minute to do this action.\nDrive a truck from one location to another location. It takes two minutes to do this action.\nFly an airplane from one city to another city. It takes five minutes to do this action.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_0_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_0_1. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_1\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nload package_1 into truck_0 at location_0_2\nload package_2 into airplane_0 at location_0_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_3 into truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nload package_1 into airplane_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_2 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_1 from airplane_0 at location_2_0\nunload package_0 from airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_1 into truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\nThe total time to execute the plan is 30 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_2_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_1_0, package_4 is at location_2_1, package_5 is at location_1_1 and package_6 is at location_2_2. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-airplane p5 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n",
        "gold_label": "(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-airplane p5 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n"
    },
    {
        "task": "task_2_plan_optimality",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 442,
        "example_instance_ids": [
            441
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\nAttack object. It takes 1 minute to do the Attack action.\nFeast object from another object. It takes 1 minute to do the Feast action.\nSuccumb object. It takes 1 minute to do the Succumb action.\nOvercome object from another object. It takes 1 minute to do the Overcome action.\n\nI have the following restrictions on my actions:\n   To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object d, object c craves object b, harmony, planet object b, planet object d, province object a and province object c.\nMy goal is to have that object a craves object b, object b craves object c and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN]\nfeast object c from object b\nsuccumb object c\nattack object b\novercome object b from object c\nfeast object a from object d\novercome object a from object b\nattack object d\novercome object d from object a\n[PLAN END]\nThe total time to execute the plan is 8 minutes.\n\n[STATEMENT]\nAs initial conditions I have that, object a craves object b, object c craves object a, object d craves object c, harmony, planet object b and province object d.\nMy goal is to have that object a craves object c, object b craves object d and object d craves object a. I want to minimize the time taken to achieve my goal.\nMy plan is as follows:\n\n[PLAN] ",
        "input": "",
        "answer": "Final Answer: (feast d c)\n(succumb d)\n(feast c a)\n(succumb c)\n(feast a b)\n(overcome a c)\n(attack d)\n(overcome d a)\n(attack b)\n(overcome b d)\n",
        "gold_label": "(feast d c)\n(succumb d)\n(feast c a)\n(succumb c)\n(feast a b)\n(overcome a c)\n(attack d)\n(overcome d a)\n(attack b)\n(overcome b d)\n"
    }
]