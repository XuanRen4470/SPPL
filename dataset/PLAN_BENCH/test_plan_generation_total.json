[
    [
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 363,
            "example_instance_ids": [
                362
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up blue)\n(stack blue orange)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up blue)\n(stack blue orange)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 364,
            "example_instance_ids": [
                363
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 365,
            "example_instance_ids": [
                364
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 366,
            "example_instance_ids": [
                365
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 367,
            "example_instance_ids": [
                366
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(put-down yellow)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(put-down yellow)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 368,
            "example_instance_ids": [
                367
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up orange)\n(stack orange yellow)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(pick-up orange)\n(stack orange yellow)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 369,
            "example_instance_ids": [
                368
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue orange)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue orange)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 370,
            "example_instance_ids": [
                369
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(stack yellow orange)\n(unstack red blue)\n(put-down red)\n(unstack yellow orange)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(stack yellow orange)\n(unstack red blue)\n(put-down red)\n(unstack yellow orange)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 371,
            "example_instance_ids": [
                370
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(pick-up red)\n(stack red blue)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(pick-up red)\n(stack red blue)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 372,
            "example_instance_ids": [
                371
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(pick-up orange)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(pick-up orange)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 373,
            "example_instance_ids": [
                372
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(put-down blue)\n(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(put-down orange)\n(pick-up blue)\n(stack blue yellow)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack blue red)\n(put-down blue)\n(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(put-down orange)\n(pick-up blue)\n(stack blue yellow)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 374,
            "example_instance_ids": [
                373
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up orange)\n(stack orange red)\n(unstack yellow blue)\n(stack yellow orange)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up orange)\n(stack orange red)\n(unstack yellow blue)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 375,
            "example_instance_ids": [
                374
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(stack blue red)\n(unstack yellow orange)\n(put-down yellow)\n(unstack blue red)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(stack blue red)\n(unstack yellow orange)\n(put-down yellow)\n(unstack blue red)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 376,
            "example_instance_ids": [
                375
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 377,
            "example_instance_ids": [
                376
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange blue)\n(put-down orange)\n(unstack blue yellow)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange blue)\n(put-down orange)\n(unstack blue yellow)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 378,
            "example_instance_ids": [
                377
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(stack red yellow)\n",
            "gold_label": "(unstack red orange)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 379,
            "example_instance_ids": [
                378
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(pick-up yellow)\n(stack yellow blue)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red yellow)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(pick-up yellow)\n(stack yellow blue)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red yellow)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 380,
            "example_instance_ids": [
                379
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue red)\n(put-down blue)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue red)\n(put-down blue)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 381,
            "example_instance_ids": [
                380
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(put-down red)\n(pick-up orange)\n(stack orange yellow)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack red yellow)\n(put-down red)\n(pick-up orange)\n(stack orange yellow)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 382,
            "example_instance_ids": [
                381
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(stack orange blue)\n(unstack red yellow)\n(put-down red)\n(unstack orange blue)\n(stack orange yellow)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack orange red)\n(stack orange blue)\n(unstack red yellow)\n(put-down red)\n(unstack orange blue)\n(stack orange yellow)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 383,
            "example_instance_ids": [
                382
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(stack red yellow)\n(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange blue)\n(unstack red yellow)\n(stack red orange)\n",
            "gold_label": "(unstack red blue)\n(stack red yellow)\n(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange blue)\n(unstack red yellow)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 384,
            "example_instance_ids": [
                383
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow blue)\n(stack yellow red)\n(pick-up orange)\n(stack orange blue)\n(unstack yellow red)\n(stack yellow orange)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack yellow blue)\n(stack yellow red)\n(pick-up orange)\n(stack orange blue)\n(unstack yellow red)\n(stack yellow orange)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 385,
            "example_instance_ids": [
                384
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(stack orange yellow)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(stack orange yellow)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 386,
            "example_instance_ids": [
                385
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue red)\n(stack blue yellow)\n(pick-up red)\n(stack red orange)\n(unstack blue yellow)\n(stack blue red)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue red)\n(stack blue yellow)\n(pick-up red)\n(stack red orange)\n(unstack blue yellow)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 387,
            "example_instance_ids": [
                386
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 388,
            "example_instance_ids": [
                387
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(stack yellow orange)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 389,
            "example_instance_ids": [
                388
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue orange)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n(pick-up yellow)\n(stack yellow orange)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue orange)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n(pick-up yellow)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 390,
            "example_instance_ids": [
                389
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(stack blue yellow)\n(pick-up red)\n(stack red blue)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack blue orange)\n(stack blue yellow)\n(pick-up red)\n(stack red blue)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 391,
            "example_instance_ids": [
                390
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(put-down blue)\n(pick-up orange)\n(stack orange blue)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(unstack blue red)\n(put-down blue)\n(pick-up orange)\n(stack orange blue)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 392,
            "example_instance_ids": [
                391
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow blue)\n(stack yellow orange)\n(unstack blue red)\n(put-down blue)\n(unstack yellow orange)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack yellow blue)\n(stack yellow orange)\n(unstack blue red)\n(put-down blue)\n(unstack yellow orange)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 393,
            "example_instance_ids": [
                392
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(unstack yellow orange)\n(stack yellow red)\n(pick-up orange)\n(stack orange blue)\n(unstack yellow red)\n(stack yellow orange)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(unstack yellow orange)\n(stack yellow red)\n(pick-up orange)\n(stack orange blue)\n(unstack yellow red)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 394,
            "example_instance_ids": [
                393
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue red)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue red)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 395,
            "example_instance_ids": [
                394
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(stack red orange)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack red yellow)\n(stack red orange)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 396,
            "example_instance_ids": [
                395
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(stack orange blue)\n",
            "gold_label": "(unstack orange yellow)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 397,
            "example_instance_ids": [
                396
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 398,
            "example_instance_ids": [
                397
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 399,
            "example_instance_ids": [
                398
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack yellow orange)\n(put-down yellow)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack yellow orange)\n(put-down yellow)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 400,
            "example_instance_ids": [
                399
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow blue)\n(put-down yellow)\n(unstack blue orange)\n(stack blue yellow)\n(pick-up orange)\n(stack orange red)\n(unstack blue yellow)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack yellow blue)\n(put-down yellow)\n(unstack blue orange)\n(stack blue yellow)\n(pick-up orange)\n(stack orange red)\n(unstack blue yellow)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 401,
            "example_instance_ids": [
                400
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(stack orange yellow)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 402,
            "example_instance_ids": [
                401
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue red)\n(stack blue orange)\n(pick-up red)\n(stack red yellow)\n(unstack blue orange)\n(stack blue red)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(unstack yellow blue)\n(put-down yellow)\n(unstack blue red)\n(stack blue orange)\n(pick-up red)\n(stack red yellow)\n(unstack blue orange)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 403,
            "example_instance_ids": [
                402
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 404,
            "example_instance_ids": [
                403
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(stack red yellow)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack red orange)\n(stack red yellow)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 405,
            "example_instance_ids": [
                404
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(put-down yellow)\n(pick-up blue)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(put-down yellow)\n(pick-up blue)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 406,
            "example_instance_ids": [
                405
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(unstack red yellow)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(unstack red yellow)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 407,
            "example_instance_ids": [
                406
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow red)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack yellow red)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 408,
            "example_instance_ids": [
                407
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(put-down yellow)\n(unstack red orange)\n(stack red blue)\n(pick-up orange)\n(stack orange yellow)\n(unstack red blue)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(put-down yellow)\n(unstack red orange)\n(stack red blue)\n(pick-up orange)\n(stack orange yellow)\n(unstack red blue)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 409,
            "example_instance_ids": [
                408
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange yellow)\n(unstack blue red)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange yellow)\n(unstack blue red)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 410,
            "example_instance_ids": [
                409
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 411,
            "example_instance_ids": [
                410
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow blue)\n(put-down yellow)\n(unstack blue orange)\n(stack blue yellow)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack yellow blue)\n(put-down yellow)\n(unstack blue orange)\n(stack blue yellow)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 412,
            "example_instance_ids": [
                411
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue yellow)\n(put-down blue)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 413,
            "example_instance_ids": [
                412
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(stack red orange)\n(unstack yellow blue)\n(put-down yellow)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack red yellow)\n(stack red orange)\n(unstack yellow blue)\n(put-down yellow)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 414,
            "example_instance_ids": [
                413
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(stack orange red)\n(unstack yellow blue)\n(stack yellow orange)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(stack orange red)\n(unstack yellow blue)\n(stack yellow orange)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 415,
            "example_instance_ids": [
                414
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(stack orange yellow)\n(unstack red blue)\n(put-down red)\n(unstack orange yellow)\n(stack orange red)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack orange red)\n(stack orange yellow)\n(unstack red blue)\n(put-down red)\n(unstack orange yellow)\n(stack orange red)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 416,
            "example_instance_ids": [
                415
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 417,
            "example_instance_ids": [
                416
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(put-down red)\n(pick-up yellow)\n(stack yellow orange)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(put-down red)\n(pick-up yellow)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 418,
            "example_instance_ids": [
                417
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(stack yellow orange)\n(pick-up blue)\n(stack blue red)\n(unstack yellow orange)\n(stack yellow blue)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(stack yellow orange)\n(pick-up blue)\n(stack blue red)\n(unstack yellow orange)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 419,
            "example_instance_ids": [
                418
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 420,
            "example_instance_ids": [
                419
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red orange)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red orange)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 421,
            "example_instance_ids": [
                420
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 422,
            "example_instance_ids": [
                421
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(pick-up red)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(pick-up red)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 423,
            "example_instance_ids": [
                422
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(stack blue yellow)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack blue orange)\n(stack blue yellow)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 424,
            "example_instance_ids": [
                423
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(stack yellow red)\n(unstack orange blue)\n(put-down orange)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack yellow orange)\n(stack yellow red)\n(unstack orange blue)\n(put-down orange)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 425,
            "example_instance_ids": [
                424
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(stack orange blue)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 426,
            "example_instance_ids": [
                425
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(stack orange red)\n",
            "gold_label": "(unstack orange blue)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 427,
            "example_instance_ids": [
                426
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(unstack yellow red)\n(put-down yellow)\n(unstack orange blue)\n(stack orange red)\n(pick-up yellow)\n(stack yellow orange)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(unstack yellow red)\n(put-down yellow)\n(unstack orange blue)\n(stack orange red)\n(pick-up yellow)\n(stack yellow orange)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 428,
            "example_instance_ids": [
                427
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 429,
            "example_instance_ids": [
                428
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(stack orange yellow)\n(unstack blue red)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(unstack orange blue)\n(stack orange yellow)\n(unstack blue red)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 430,
            "example_instance_ids": [
                429
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(stack orange red)\n",
            "gold_label": "(unstack orange yellow)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 431,
            "example_instance_ids": [
                430
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 432,
            "example_instance_ids": [
                431
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack blue yellow)\n(stack blue red)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack blue yellow)\n(stack blue red)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 433,
            "example_instance_ids": [
                432
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(stack yellow blue)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack yellow red)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 434,
            "example_instance_ids": [
                433
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up yellow)\n(stack yellow orange)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up yellow)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 435,
            "example_instance_ids": [
                434
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up red)\n(stack red yellow)\n(unstack orange blue)\n(stack orange red)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up red)\n(stack red yellow)\n(unstack orange blue)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 436,
            "example_instance_ids": [
                435
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 437,
            "example_instance_ids": [
                436
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange yellow)\n(unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange yellow)\n(unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 438,
            "example_instance_ids": [
                437
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 439,
            "example_instance_ids": [
                438
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n(pick-up red)\n(stack red yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 440,
            "example_instance_ids": [
                439
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red orange)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red orange)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 441,
            "example_instance_ids": [
                440
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(unstack red yellow)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(unstack red yellow)\n(stack red blue)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 442,
            "example_instance_ids": [
                441
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(stack red orange)\n(pick-up yellow)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(stack red orange)\n(pick-up yellow)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 443,
            "example_instance_ids": [
                442
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(put-down blue)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up red)\n(stack red yellow)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack blue red)\n(put-down blue)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up red)\n(stack red yellow)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 444,
            "example_instance_ids": [
                443
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 445,
            "example_instance_ids": [
                444
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow blue)\n(put-down yellow)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack yellow blue)\n(put-down yellow)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 446,
            "example_instance_ids": [
                445
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red white)\n(put-down red)\n(unstack white orange)\n(put-down white)\n(unstack orange blue)\n(stack orange red)\n(unstack blue yellow)\n(put-down blue)\n(pick-up yellow)\n(stack yellow white)\n(unstack orange red)\n(stack orange yellow)\n",
            "gold_label": "(unstack red white)\n(put-down red)\n(unstack white orange)\n(put-down white)\n(unstack orange blue)\n(stack orange red)\n(unstack blue yellow)\n(put-down blue)\n(pick-up yellow)\n(stack yellow white)\n(unstack orange red)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 447,
            "example_instance_ids": [
                446
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the orange block\nput down the white block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the orange block is on top of the red block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red orange)\n(unstack blue white)\n(stack blue yellow)\n(unstack red orange)\n(stack red blue)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red orange)\n(unstack blue white)\n(stack blue yellow)\n(unstack red orange)\n(stack red blue)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 448,
            "example_instance_ids": [
                447
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the orange block is on top of the red block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the blue block from on top of the white block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the yellow block and the red block is on the table.\nMy goal is to have that the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white yellow)\n(put-down white)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up white)\n(stack white orange)\n(pick-up yellow)\n(stack yellow white)\n",
            "gold_label": "(unstack white yellow)\n(put-down white)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up white)\n(stack white orange)\n(pick-up yellow)\n(stack yellow white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 449,
            "example_instance_ids": [
                448
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the yellow block and the red block is on the table.\nMy goal is to have that the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the white block\nstack the white block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(pick-up white)\n(stack white red)\n(unstack orange yellow)\n(stack orange white)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(pick-up white)\n(stack white red)\n(unstack orange yellow)\n(stack orange white)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 450,
            "example_instance_ids": [
                449
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the white block\nstack the white block on top of the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the white block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(stack red white)\n(unstack orange yellow)\n(put-down orange)\n(unstack red white)\n(stack red orange)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up white)\n(stack white yellow)\n",
            "gold_label": "(unstack red orange)\n(stack red white)\n(unstack orange yellow)\n(put-down orange)\n(unstack red white)\n(stack red orange)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up white)\n(stack white yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 451,
            "example_instance_ids": [
                450
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the white block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the white block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up white)\n(stack white orange)\n(unstack blue red)\n(stack blue white)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(pick-up white)\n(stack white orange)\n(unstack blue red)\n(stack blue white)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 452,
            "example_instance_ids": [
                451
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the white block\nstack the white block on top of the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the white block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow red)\n(put-down yellow)\n(unstack red white)\n(stack red yellow)\n(unstack white orange)\n(stack white red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(unstack white red)\n(stack white blue)\n(unstack red yellow)\n(stack red white)\n",
            "gold_label": "(unstack yellow red)\n(put-down yellow)\n(unstack red white)\n(stack red yellow)\n(unstack white orange)\n(stack white red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(unstack white red)\n(stack white blue)\n(unstack red yellow)\n(stack red white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 453,
            "example_instance_ids": [
                452
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\nunstack the white block from on top of the orange block\nstack the white block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the white block from on top of the red block\nstack the white block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white red)\n(put-down white)\n(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow red)\n(unstack blue orange)\n(stack blue white)\n(unstack yellow red)\n(stack yellow blue)\n",
            "gold_label": "(unstack white red)\n(put-down white)\n(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow red)\n(unstack blue orange)\n(stack blue white)\n(unstack yellow red)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 454,
            "example_instance_ids": [
                453
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the red block\nput down the white block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the white block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(put-down orange)\n(unstack yellow white)\n(put-down yellow)\n(unstack white red)\n(stack white yellow)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange yellow)\n(put-down orange)\n(unstack yellow white)\n(put-down yellow)\n(unstack white red)\n(stack white yellow)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 455,
            "example_instance_ids": [
                454
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the white block from on top of the red block\nstack the white block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the white block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange white)\n(put-down orange)\n(unstack white blue)\n(stack white orange)\n(unstack blue red)\n(put-down blue)\n(unstack white orange)\n(stack white blue)\n(unstack red yellow)\n(put-down red)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(unstack orange white)\n(put-down orange)\n(unstack white blue)\n(stack white orange)\n(unstack blue red)\n(put-down blue)\n(unstack white orange)\n(stack white blue)\n(unstack red yellow)\n(put-down red)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 456,
            "example_instance_ids": [
                455
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the white block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the white block\nput down the orange block\nunstack the white block from on top of the blue block\nstack the white block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the white block from on top of the orange block\nstack the white block on top of the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red white)\n(put-down red)\n(unstack white yellow)\n(stack white red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack red white)\n(put-down red)\n(unstack white yellow)\n(stack white red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 457,
            "example_instance_ids": [
                456
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the yellow block\nstack the white block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the white block, the red block is on the table, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow white)\n(stack yellow red)\n(pick-up blue)\n(stack blue white)\n(unstack yellow red)\n(stack yellow blue)\n",
            "gold_label": "(unstack yellow white)\n(stack yellow red)\n(pick-up blue)\n(stack blue white)\n(unstack yellow red)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 458,
            "example_instance_ids": [
                457
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the white block, the red block is on the table, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the white block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the white block, the orange block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up white)\n(stack white yellow)\n(unstack blue orange)\n(stack blue white)\n(unstack orange red)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(pick-up white)\n(stack white yellow)\n(unstack blue orange)\n(stack blue white)\n(unstack orange red)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 459,
            "example_instance_ids": [
                458
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the white block, the orange block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the white block\nstack the white block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the white block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white blue)\n(put-down white)\n(unstack blue red)\n(stack blue white)\n(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(put-down orange)\n(unstack blue white)\n(stack blue yellow)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack white blue)\n(put-down white)\n(unstack blue red)\n(stack blue white)\n(unstack red orange)\n(put-down red)\n(unstack orange yellow)\n(put-down orange)\n(unstack blue white)\n(stack blue yellow)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 460,
            "example_instance_ids": [
                459
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the blue block\nput down the white block\nunstack the blue block from on top of the red block\nstack the blue block on top of the white block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the blue block from on top of the white block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow white)\n(put-down yellow)\n(unstack red orange)\n(stack red yellow)\n(unstack white blue)\n(put-down white)\n(pick-up blue)\n(stack blue white)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack yellow white)\n(put-down yellow)\n(unstack red orange)\n(stack red yellow)\n(unstack white blue)\n(put-down white)\n(pick-up blue)\n(stack blue white)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 461,
            "example_instance_ids": [
                460
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\nunstack the white block from on top of the blue block\nput down the white block\npick up the blue block\nstack the blue block on top of the white block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white yellow)\n(put-down white)\n(unstack yellow blue)\n(stack yellow white)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack white yellow)\n(put-down white)\n(unstack yellow blue)\n(stack yellow white)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 462,
            "example_instance_ids": [
                461
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the white block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white yellow)\n(put-down white)\n(unstack yellow red)\n(put-down yellow)\n(unstack red blue)\n(stack red white)\n",
            "gold_label": "(unstack white yellow)\n(put-down white)\n(unstack yellow red)\n(put-down yellow)\n(unstack red blue)\n(stack red white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 463,
            "example_instance_ids": [
                462
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(stack yellow white)\n(unstack orange blue)\n(put-down orange)\n(unstack yellow white)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n(unstack white red)\n(put-down white)\n(pick-up red)\n(stack red white)\n",
            "gold_label": "(unstack yellow orange)\n(stack yellow white)\n(unstack orange blue)\n(put-down orange)\n(unstack yellow white)\n(stack yellow blue)\n(pick-up orange)\n(stack orange yellow)\n(unstack white red)\n(put-down white)\n(pick-up red)\n(stack red white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 464,
            "example_instance_ids": [
                463
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the white block from on top of the red block\nput down the white block\npick up the red block\nstack the red block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the white block, the orange block is on top of the red block, the white block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(unstack blue white)\n(put-down blue)\n(unstack white yellow)\n(put-down white)\n(pick-up yellow)\n(stack yellow red)\n(pick-up orange)\n(stack orange yellow)\n(pick-up blue)\n(stack blue orange)\n(pick-up white)\n(stack white blue)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(unstack blue white)\n(put-down blue)\n(unstack white yellow)\n(put-down white)\n(pick-up yellow)\n(stack yellow red)\n(pick-up orange)\n(stack orange yellow)\n(pick-up blue)\n(stack blue orange)\n(pick-up white)\n(stack white blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 465,
            "example_instance_ids": [
                464
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the white block, the orange block is on top of the red block, the white block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the white block\nput down the blue block\nunstack the white block from on top of the yellow block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the white block\nstack the white block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up orange)\n(stack orange white)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red orange)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(pick-up orange)\n(stack orange white)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red orange)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 466,
            "example_instance_ids": [
                465
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the white block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up orange)\n(stack orange red)\n(unstack white blue)\n(put-down white)\n(unstack blue yellow)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow white)\n(unstack blue orange)\n(stack blue yellow)\n",
            "gold_label": "(pick-up orange)\n(stack orange red)\n(unstack white blue)\n(put-down white)\n(unstack blue yellow)\n(stack blue orange)\n(pick-up yellow)\n(stack yellow white)\n(unstack blue orange)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 467,
            "example_instance_ids": [
                466
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the red block\nunstack the white block from on top of the blue block\nput down the white block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow white)\n(put-down yellow)\n(unstack white blue)\n(stack white red)\n(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack yellow white)\n(put-down yellow)\n(unstack white blue)\n(stack white red)\n(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 468,
            "example_instance_ids": [
                467
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the white block from on top of the blue block\nstack the white block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack red white)\n(stack red yellow)\n(pick-up white)\n(stack white blue)\n(pick-up orange)\n(stack orange white)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack red white)\n(stack red yellow)\n(pick-up white)\n(stack white blue)\n(pick-up orange)\n(stack orange white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 469,
            "example_instance_ids": [
                468
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\npick up the white block\nstack the white block on top of the blue block\npick up the orange block\nstack the orange block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white orange)\n(put-down white)\n(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red orange)\n(pick-up yellow)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack white orange)\n(put-down white)\n(unstack orange red)\n(put-down orange)\n(unstack red yellow)\n(stack red orange)\n(pick-up yellow)\n(stack yellow red)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 470,
            "example_instance_ids": [
                469
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the orange block\nput down the white block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the white block, the red block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(put-down blue)\n(unstack yellow white)\n(stack yellow orange)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack blue yellow)\n(put-down blue)\n(unstack yellow white)\n(stack yellow orange)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 471,
            "example_instance_ids": [
                470
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the white block, the red block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(stack yellow red)\n(unstack orange blue)\n(stack orange white)\n",
            "gold_label": "(unstack yellow orange)\n(stack yellow red)\n(unstack orange blue)\n(stack orange white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 472,
            "example_instance_ids": [
                471
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the white block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(stack red blue)\n(unstack orange white)\n(stack orange red)\n(unstack white yellow)\n(put-down white)\n(unstack orange red)\n(stack orange white)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(unstack red orange)\n(stack red blue)\n(unstack orange white)\n(stack orange red)\n(unstack white yellow)\n(put-down white)\n(unstack orange red)\n(stack orange white)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 473,
            "example_instance_ids": [
                472
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the white block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\nunstack the orange block from on top of the white block\nstack the orange block on top of the red block\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the orange block from on top of the red block\nstack the orange block on top of the white block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white red)\n(put-down white)\n(unstack red yellow)\n(stack red white)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack white red)\n(put-down white)\n(unstack red yellow)\n(stack red white)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 474,
            "example_instance_ids": [
                473
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the red block\nput down the white block\nunstack the red block from on top of the yellow block\nstack the red block on top of the white block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(unstack blue orange)\n(stack blue red)\n(unstack orange white)\n(stack orange blue)\n(pick-up white)\n(stack white orange)\n(pick-up yellow)\n(stack yellow white)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(unstack blue orange)\n(stack blue red)\n(unstack orange white)\n(stack orange blue)\n(pick-up white)\n(stack white orange)\n(pick-up yellow)\n(stack yellow white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 475,
            "example_instance_ids": [
                474
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\nunstack the orange block from on top of the white block\nstack the orange block on top of the blue block\npick up the white block\nstack the white block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the blue block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up yellow)\n(stack yellow red)\n(pick-up orange)\n(stack orange yellow)\n(unstack white blue)\n(stack white orange)\n(pick-up blue)\n(stack blue white)\n",
            "gold_label": "(pick-up yellow)\n(stack yellow red)\n(pick-up orange)\n(stack orange yellow)\n(unstack white blue)\n(stack white orange)\n(pick-up blue)\n(stack blue white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 476,
            "example_instance_ids": [
                475
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the blue block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the white block from on top of the blue block\nstack the white block on top of the orange block\npick up the blue block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the red block, the yellow block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue white)\n(put-down blue)\n(unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up white)\n(stack white yellow)\n(pick-up red)\n(stack red white)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack blue white)\n(put-down blue)\n(unstack orange yellow)\n(put-down orange)\n(unstack yellow red)\n(stack yellow blue)\n(pick-up white)\n(stack white yellow)\n(pick-up red)\n(stack red white)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 477,
            "example_instance_ids": [
                476
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the red block, the yellow block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the white block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the white block\nstack the white block on top of the yellow block\npick up the red block\nstack the red block on top of the white block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white blue)\n(stack white red)\n(pick-up orange)\n(stack orange white)\n",
            "gold_label": "(unstack white blue)\n(stack white red)\n(pick-up orange)\n(stack orange white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 478,
            "example_instance_ids": [
                477
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the blue block\nstack the white block on top of the red block\npick up the orange block\nstack the orange block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange yellow)\n(put-down orange)\n(unstack yellow white)\n(put-down yellow)\n(unstack white red)\n(stack white orange)\n(unstack red blue)\n(stack red yellow)\n(unstack white orange)\n(stack white red)\n(pick-up blue)\n(stack blue white)\n",
            "gold_label": "(unstack orange yellow)\n(put-down orange)\n(unstack yellow white)\n(put-down yellow)\n(unstack white red)\n(stack white orange)\n(unstack red blue)\n(stack red yellow)\n(unstack white orange)\n(stack white red)\n(pick-up blue)\n(stack blue white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 479,
            "example_instance_ids": [
                478
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the white block from on top of the red block\nstack the white block on top of the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the white block from on top of the orange block\nstack the white block on top of the red block\npick up the blue block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(put-down yellow)\n(unstack red white)\n(stack red yellow)\n(pick-up white)\n(stack white orange)\n",
            "gold_label": "(unstack yellow orange)\n(put-down yellow)\n(unstack red white)\n(stack red yellow)\n(pick-up white)\n(stack white orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 480,
            "example_instance_ids": [
                479
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\npick up the white block\nstack the white block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the white block is on top of the blue block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red white)\n(put-down red)\n(unstack white blue)\n(stack white red)\n(unstack blue orange)\n(stack blue yellow)\n",
            "gold_label": "(unstack red white)\n(put-down red)\n(unstack white blue)\n(stack white red)\n(unstack blue orange)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 481,
            "example_instance_ids": [
                480
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the white block is on top of the blue block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the blue block\nstack the white block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow red)\n(stack yellow white)\n(unstack red blue)\n(stack red yellow)\n(unstack blue orange)\n(put-down blue)\n(unstack red yellow)\n(stack red orange)\n(unstack yellow white)\n(stack yellow red)\n(pick-up white)\n(stack white blue)\n",
            "gold_label": "(unstack yellow red)\n(stack yellow white)\n(unstack red blue)\n(stack red yellow)\n(unstack blue orange)\n(put-down blue)\n(unstack red yellow)\n(stack red orange)\n(unstack yellow white)\n(stack yellow red)\n(pick-up white)\n(stack white blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 482,
            "example_instance_ids": [
                481
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the white block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(put-down red)\n(unstack white orange)\n(put-down white)\n(pick-up yellow)\n(stack yellow white)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue yellow)\n",
            "gold_label": "(unstack red yellow)\n(put-down red)\n(unstack white orange)\n(put-down white)\n(pick-up yellow)\n(stack yellow white)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 483,
            "example_instance_ids": [
                482
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the white block from on top of the orange block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(put-down blue)\n(unstack red orange)\n(put-down red)\n(pick-up yellow)\n(stack yellow orange)\n",
            "gold_label": "(unstack blue red)\n(put-down blue)\n(unstack red orange)\n(put-down red)\n(pick-up yellow)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 484,
            "example_instance_ids": [
                483
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red white)\n(put-down red)\n(unstack yellow orange)\n(stack yellow red)\n(pick-up white)\n(stack white yellow)\n(unstack orange blue)\n(stack orange white)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack red white)\n(put-down red)\n(unstack yellow orange)\n(stack yellow red)\n(pick-up white)\n(stack white yellow)\n(unstack orange blue)\n(stack orange white)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 485,
            "example_instance_ids": [
                484
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the white block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the white block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the yellow block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue white)\n(put-down blue)\n(unstack white orange)\n(stack white blue)\n(pick-up red)\n(stack red white)\n(pick-up yellow)\n(stack yellow orange)\n",
            "gold_label": "(unstack blue white)\n(put-down blue)\n(unstack white orange)\n(stack white blue)\n(pick-up red)\n(stack red white)\n(pick-up yellow)\n(stack yellow orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 486,
            "example_instance_ids": [
                485
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the white block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the yellow block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the white block\nput down the blue block\nunstack the white block from on top of the orange block\nstack the white block on top of the blue block\npick up the red block\nstack the red block on top of the white block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow red)\n(stack yellow orange)\n(unstack red white)\n(put-down red)\n(unstack yellow orange)\n(stack yellow red)\n(unstack orange blue)\n(stack orange yellow)\n(pick-up blue)\n(stack blue white)\n",
            "gold_label": "(unstack yellow red)\n(stack yellow orange)\n(unstack red white)\n(put-down red)\n(unstack yellow orange)\n(stack yellow red)\n(unstack orange blue)\n(stack orange yellow)\n(pick-up blue)\n(stack blue white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 487,
            "example_instance_ids": [
                486
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the white block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the yellow block is on top of the blue block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow red)\n(unstack blue white)\n(stack blue yellow)\n",
            "gold_label": "(unstack red yellow)\n(put-down red)\n(unstack yellow blue)\n(stack yellow red)\n(unstack blue white)\n(stack blue yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 488,
            "example_instance_ids": [
                487
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the yellow block is on top of the blue block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the white block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the white block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block, the yellow block is on top of the orange block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange white)\n(stack orange red)\n(unstack white yellow)\n(put-down white)\n(unstack yellow blue)\n(stack yellow orange)\n(pick-up white)\n(stack white yellow)\n",
            "gold_label": "(unstack orange white)\n(stack orange red)\n(unstack white yellow)\n(put-down white)\n(unstack yellow blue)\n(stack yellow orange)\n(pick-up white)\n(stack white yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 489,
            "example_instance_ids": [
                488
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the white block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block, the yellow block is on top of the orange block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the white block\nstack the orange block on top of the red block\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the white block\nstack the white block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the white block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red white)\n(put-down red)\n(unstack white orange)\n(put-down white)\n(unstack blue yellow)\n(stack blue white)\n(pick-up orange)\n(stack orange red)\n(pick-up yellow)\n(stack yellow blue)\n",
            "gold_label": "(unstack red white)\n(put-down red)\n(unstack white orange)\n(put-down white)\n(unstack blue yellow)\n(stack blue white)\n(pick-up orange)\n(stack orange red)\n(pick-up yellow)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 490,
            "example_instance_ids": [
                489
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the white block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the orange block\nput down the white block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the white block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the orange block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white orange)\n(put-down white)\n(pick-up yellow)\n(stack yellow orange)\n(pick-up red)\n(stack red yellow)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack white orange)\n(put-down white)\n(pick-up yellow)\n(stack yellow orange)\n(pick-up red)\n(stack red yellow)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 491,
            "example_instance_ids": [
                490
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the orange block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the orange block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red white)\n(stack red blue)\n(unstack white yellow)\n(put-down white)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange red)\n(pick-up white)\n(stack white orange)\n(pick-up yellow)\n(stack yellow white)\n",
            "gold_label": "(unstack red white)\n(stack red blue)\n(unstack white yellow)\n(put-down white)\n(unstack yellow orange)\n(put-down yellow)\n(pick-up orange)\n(stack orange red)\n(pick-up white)\n(stack white orange)\n(pick-up yellow)\n(stack yellow white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 492,
            "example_instance_ids": [
                491
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nstack the red block on top of the blue block\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the white block\nstack the white block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(unstack yellow red)\n(put-down yellow)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n(pick-up white)\n(stack white blue)\n(pick-up yellow)\n(stack yellow white)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(unstack yellow red)\n(put-down yellow)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n(pick-up white)\n(stack white blue)\n(pick-up yellow)\n(stack yellow white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 493,
            "example_instance_ids": [
                492
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the white block\nstack the white block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue yellow)\n(stack blue red)\n(unstack white orange)\n(put-down white)\n(pick-up yellow)\n(stack yellow white)\n(pick-up orange)\n(stack orange yellow)\n",
            "gold_label": "(unstack blue yellow)\n(stack blue red)\n(unstack white orange)\n(put-down white)\n(pick-up yellow)\n(stack yellow white)\n(pick-up orange)\n(stack orange yellow)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 494,
            "example_instance_ids": [
                493
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\nunstack the white block from on top of the orange block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the white block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up yellow)\n(stack yellow orange)\n(pick-up white)\n(stack white red)\n",
            "gold_label": "(pick-up yellow)\n(stack yellow orange)\n(pick-up white)\n(stack white red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 495,
            "example_instance_ids": [
                494
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the white block\nstack the white block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up red)\n(stack red blue)\n",
            "gold_label": "(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 496,
            "example_instance_ids": [
                495
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white yellow)\n(put-down white)\n(pick-up orange)\n(stack orange white)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up blue)\n(stack blue orange)\n(unstack yellow red)\n(stack yellow blue)\n",
            "gold_label": "(unstack white yellow)\n(put-down white)\n(pick-up orange)\n(stack orange white)\n(unstack yellow blue)\n(stack yellow red)\n(pick-up blue)\n(stack blue orange)\n(unstack yellow red)\n(stack yellow blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 497,
            "example_instance_ids": [
                496
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\npick up the orange block\nstack the orange block on top of the white block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(stack blue orange)\n(unstack red white)\n(put-down red)\n(pick-up yellow)\n(stack yellow red)\n(pick-up white)\n(stack white yellow)\n(unstack blue orange)\n(stack blue white)\n",
            "gold_label": "(unstack blue red)\n(stack blue orange)\n(unstack red white)\n(put-down red)\n(pick-up yellow)\n(stack yellow red)\n(pick-up white)\n(stack white yellow)\n(unstack blue orange)\n(stack blue white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 498,
            "example_instance_ids": [
                497
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nunstack the red block from on top of the white block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the orange block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack white blue)\n(put-down white)\n(pick-up red)\n(stack red white)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up yellow)\n(stack yellow red)\n",
            "gold_label": "(unstack white blue)\n(put-down white)\n(pick-up red)\n(stack red white)\n(unstack orange yellow)\n(stack orange blue)\n(pick-up yellow)\n(stack yellow red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 499,
            "example_instance_ids": [
                498
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the orange block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the blue block\nput down the white block\npick up the red block\nstack the red block on top of the white block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the yellow block is on top of the red block, the white block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow red)\n(put-down yellow)\n(unstack red white)\n(put-down red)\n(pick-up yellow)\n(stack yellow white)\n",
            "gold_label": "(unstack yellow red)\n(put-down yellow)\n(unstack red white)\n(put-down red)\n(pick-up yellow)\n(stack yellow white)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 500,
            "example_instance_ids": [
                499
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the yellow block is on top of the red block, the white block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the white block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow blue)\n(stack yellow red)\n(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack yellow blue)\n(stack yellow red)\n(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld",
            "instance_id": 501,
            "example_instance_ids": [
                500
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack yellow orange)\n(stack yellow blue)\n(unstack orange red)\n(stack orange yellow)\n",
            "gold_label": "(unstack yellow orange)\n(stack yellow blue)\n(unstack orange red)\n(stack orange yellow)\n"
        }
    ],
    [
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 74,
            "example_instance_ids": [
                73
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange blue)\n(stack orange red)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange blue)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 75,
            "example_instance_ids": [
                74
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 76,
            "example_instance_ids": [
                75
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(put-down blue)\n(unstack red orange)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack blue red)\n(put-down blue)\n(unstack red orange)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 77,
            "example_instance_ids": [
                76
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 78,
            "example_instance_ids": [
                77
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 79,
            "example_instance_ids": [
                78
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 80,
            "example_instance_ids": [
                79
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 81,
            "example_instance_ids": [
                80
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(pick-up red)\n(stack red orange)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 82,
            "example_instance_ids": [
                81
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 83,
            "example_instance_ids": [
                82
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up blue)\n(stack blue red)\n",
            "gold_label": "(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 84,
            "example_instance_ids": [
                83
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 85,
            "example_instance_ids": [
                84
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red blue)\n(stack red orange)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 86,
            "example_instance_ids": [
                85
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 87,
            "example_instance_ids": [
                86
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up blue)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n",
            "gold_label": "(pick-up blue)\n(stack blue red)\n(pick-up orange)\n(stack orange blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 88,
            "example_instance_ids": [
                87
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(pick-up red)\n(stack red blue)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(pick-up red)\n(stack red blue)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 89,
            "example_instance_ids": [
                88
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up blue)\n(stack blue red)\n",
            "gold_label": "(pick-up blue)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 90,
            "example_instance_ids": [
                89
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up orange)\n(stack orange red)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(pick-up orange)\n(stack orange red)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 91,
            "example_instance_ids": [
                90
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 92,
            "example_instance_ids": [
                91
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(stack blue red)\n",
            "gold_label": "(unstack blue orange)\n(stack blue red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 93,
            "example_instance_ids": [
                92
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up orange)\n(stack orange red)\n",
            "gold_label": "(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 94,
            "example_instance_ids": [
                93
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red blue)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(unstack red blue)\n(put-down red)\n(pick-up orange)\n(stack orange red)\n(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 95,
            "example_instance_ids": [
                94
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack red orange)\n(put-down red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack red orange)\n(put-down red)\n(unstack orange blue)\n(put-down orange)\n(pick-up blue)\n(stack blue orange)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 96,
            "example_instance_ids": [
                95
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue red)\n(stack blue orange)\n",
            "gold_label": "(unstack blue red)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 97,
            "example_instance_ids": [
                96
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up orange)\n(stack orange red)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up orange)\n(stack orange red)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 98,
            "example_instance_ids": [
                97
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red blue)\n",
            "gold_label": "(unstack orange blue)\n(put-down orange)\n(unstack blue red)\n(put-down blue)\n(pick-up red)\n(stack red blue)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 99,
            "example_instance_ids": [
                98
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(pick-up orange)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n",
            "gold_label": "(unstack orange red)\n(put-down orange)\n(unstack red blue)\n(put-down red)\n(pick-up orange)\n(stack orange blue)\n(pick-up red)\n(stack red orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 100,
            "example_instance_ids": [
                99
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (pick-up blue)\n(stack blue orange)\n",
            "gold_label": "(pick-up blue)\n(stack blue orange)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "blocksworld_3",
            "instance_id": 101,
            "example_instance_ids": [
                100
            ],
            "question": "I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(pick-up blue)\n(stack blue red)\n",
            "gold_label": "(unstack blue orange)\n(put-down blue)\n(unstack orange red)\n(put-down orange)\n(pick-up blue)\n(stack blue red)\n"
        }
    ],
    [
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 208,
            "example_instance_ids": [
                207
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_2_0, package_4 is at location_0_1, package_5 is at location_1_2, package_6 is at location_2_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_0_2, package_5 is at location_2_2 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nload package_3 into airplane_1 at location_2_0\nunload package_1 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_5 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\nunload package_5 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nload package_5 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p0 t1 l1-2)\n(unload-truck p2 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t2 l2-0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(unload-truck p3 t0 l0-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(unload-truck p3 t1 l1-2)\n(unload-truck p1 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n",
            "gold_label": "(load-truck p2 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p0 t1 l1-2)\n(unload-truck p2 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t2 l2-0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(unload-truck p3 t0 l0-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(unload-truck p3 t1 l1-2)\n(unload-truck p1 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 209,
            "example_instance_ids": [
                208
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_0 into truck_1 at location_1_2\nunload package_2 from truck_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_2 at location_2_0\nunload package_6 from truck_0 at location_0_0\nunload package_5 from truck_0 at location_0_0\nload package_2 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nunload package_3 from truck_0 at location_0_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_3 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nunload package_3 from truck_1 at location_1_2\nunload package_1 from truck_1 at location_1_2\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_0 from truck_2 at location_2_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_2_2, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_0_2 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t1 l1-2)\n(load-truck p4 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(unload-truck p4 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n",
            "gold_label": "(load-truck p5 t1 l1-2)\n(load-truck p4 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(unload-truck p4 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 210,
            "example_instance_ids": [
                209
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_2_2, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_0_2 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_1 at location_1_2\nload package_4 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nunload package_4 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_5 into airplane_1 at location_1_0\nload package_4 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_6 into airplane_1 at location_0_0\nunload package_5 from airplane_1 at location_0_0\nunload package_4 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nunload package_2 from airplane_1 at location_2_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_5 into truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_2 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_2_0, package_5 is at location_1_1, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_1, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_0_2, package_5 is at location_1_1 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p3 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(load-airplane p4 a1 l2-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p3 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n",
            "gold_label": "(load-truck p3 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(load-airplane p4 a1 l2-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p3 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 211,
            "example_instance_ids": [
                210
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_2_0, package_5 is at location_1_1, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_1, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_0_2, package_5 is at location_1_1 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_0 at location_0_2\nload package_2 into truck_0 at location_0_2\nload package_4 into airplane_1 at location_2_0\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nload package_6 into airplane_1 at location_2_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nload package_6 into truck_0 at location_0_0\nunload package_4 from airplane_1 at location_0_0\nload package_4 into truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nload package_3 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_3 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_0 from truck_2 at location_2_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_0_2, package_3 is at location_2_2, package_4 is at location_0_2, package_5 is at location_1_0, package_6 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-0 l2-1 c2)\n(load-truck p1 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n",
            "gold_label": "(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p1 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 212,
            "example_instance_ids": [
                211
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_0_2, package_3 is at location_2_2, package_4 is at location_0_2, package_5 is at location_1_0, package_6 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_1 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_3 into truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_4 into truck_0 at location_0_2\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nunload package_3 from truck_2 at location_2_0\nload package_3 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_5 into airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_5 from airplane_1 at location_0_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_1_1, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_0_1, package_4 is at location_0_0, package_5 is at location_2_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t0 l0-1)\n(load-airplane p2 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p3 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n",
            "gold_label": "(load-truck p5 t0 l0-1)\n(load-airplane p2 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p3 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 213,
            "example_instance_ids": [
                212
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_1_1, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_0_1, package_4 is at location_0_0, package_5 is at location_2_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_0 at location_0_1\nload package_2 into airplane_1 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nunload package_5 from truck_0 at location_0_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nunload package_3 from truck_0 at location_0_1\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_5 from airplane_1 at location_2_0\nload package_5 into truck_2 at location_2_0\nunload package_2 from airplane_1 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_4 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_4 from airplane_1 at location_0_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_0_1, package_2 is at location_2_1, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_2, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_2_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(load-airplane p3 a0 l0-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p0 a0 l2-0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-airplane p6 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n",
            "gold_label": "(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(load-airplane p3 a0 l0-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p0 a0 l2-0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-airplane p6 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 214,
            "example_instance_ids": [
                213
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_0_1, package_2 is at location_2_1, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_2, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_2_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\nload package_3 into airplane_0 at location_0_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_2 from truck_2 at location_2_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_3 from airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nload package_5 into truck_2 at location_2_0\nunload package_0 from airplane_0 at location_2_0\nunload package_6 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nload package_6 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_1_1 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-truck p5 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n",
            "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-truck p5 t0 l0-2)\n(load-airplane p3 a1 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 215,
            "example_instance_ids": [
                214
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_1_1 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_5 into truck_0 at location_0_2\nload package_3 into airplane_1 at location_0_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_1 from truck_0 at location_0_2\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_3 from airplane_1 at location_2_0\nunload package_2 from airplane_1 at location_2_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_2_1, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_1_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-truck p5 t0 l0-1)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n",
            "gold_label": "(load-truck p6 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-truck p5 t0 l0-1)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 216,
            "example_instance_ids": [
                215
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_2_1, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_1_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_1\nload package_3 into truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_5 into truck_0 at location_0_1\nfly airplane_1 from location_1_0 to location_2_0\nload package_4 into airplane_1 at location_2_0\nload package_3 into airplane_1 at location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\nunload package_5 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-airplane p2 a0 l0-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p1 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n",
            "gold_label": "(load-airplane p2 a0 l0-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p1 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 217,
            "example_instance_ids": [
                216
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_1_0, package_5 is at location_0_1, package_6 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into airplane_0 at location_0_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_2 from airplane_0 at location_1_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_1 from truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nunload package_0 from truck_2 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_0 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_0_1, package_4 is at location_1_1, package_5 is at location_0_1, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(unload-truck p6 t1 l1-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n",
            "gold_label": "(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(unload-truck p6 t1 l1-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 218,
            "example_instance_ids": [
                217
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_0_1, package_4 is at location_1_1, package_5 is at location_0_1, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\nload package_3 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_5 from truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_6 into truck_1 at location_1_1\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nunload package_6 from truck_1 at location_1_0\nunload package_3 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nload package_6 into airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_0 from airplane_1 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_0 from truck_0 at location_0_2\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nunload package_2 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nload package_4 into truck_2 at location_2_0\nload package_2 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\nunload package_4 from truck_2 at location_2_2\nunload package_2 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_2_2, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_1_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_0_1, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_1_2 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t0 l0-2 l0-0 c0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p6 a1 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(unload-truck p3 t2 l2-1)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n",
            "gold_label": "(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p6 a1 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(unload-truck p3 t2 l2-1)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 219,
            "example_instance_ids": [
                218
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_2_2, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_1_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_0_1, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_1_2 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\nload package_3 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_4 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_6 into airplane_1 at location_1_0\nunload package_5 from airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\nunload package_3 from truck_2 at location_2_1\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_5 into truck_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_5 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_0, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_1_0 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(load-airplane p1 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n(load-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n",
            "gold_label": "(load-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(load-airplane p1 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n(load-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 220,
            "example_instance_ids": [
                219
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_0, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_1_0 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_0 from truck_2 at location_2_2\nload package_3 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nfly airplane_0 from location_0_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_1, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_0_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n",
            "gold_label": "(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 221,
            "example_instance_ids": [
                220
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_1, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_0_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_6 into truck_2 at location_2_1\nload package_4 into truck_2 at location_2_1\nload package_3 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_1 from truck_1 at location_1_2\nunload package_6 from truck_2 at location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_5 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nload package_6 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nunload package_5 from airplane_1 at location_0_0\nunload package_4 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_2 from truck_2 at location_2_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_2_1, package_1 is at location_0_2, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_2, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_2 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t2 l2-2)\n(load-truck p4 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p4 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(unload-truck p5 t2 l2-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n",
            "gold_label": "(load-truck p5 t2 l2-2)\n(load-truck p4 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p4 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(unload-truck p5 t2 l2-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 222,
            "example_instance_ids": [
                221
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_2_1, package_1 is at location_0_2, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_2, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_2 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_2\nload package_4 into truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_0 from truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_3 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nfly airplane_0 from location_0_0 to location_1_0\nload package_4 into airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nunload package_5 from truck_2 at location_2_0\nfly airplane_0 from location_1_0 to location_2_0\nload package_5 into airplane_0 at location_2_0\nunload package_4 from airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_5 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_5 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_1_2, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t1 l1-1)\n(load-airplane p1 a1 l1-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(load-truck p5 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n",
            "gold_label": "(load-truck p0 t1 l1-1)\n(load-airplane p1 a1 l1-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(load-truck p5 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 223,
            "example_instance_ids": [
                222
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_1_0, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_1_2, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_1\nload package_1 into airplane_1 at location_1_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_3 into airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\nunload package_6 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\nload package_6 into airplane_1 at location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nunload package_0 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_6 into truck_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nload package_5 into truck_1 at location_1_2\nunload package_4 from truck_1 at location_1_2\nunload package_2 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(load-airplane p6 a0 l2-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p4 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(load-truck p4 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-airplane p1 a0 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p5 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(load-airplane p6 a0 l2-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p4 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p4 a0 l2-0)\n(load-truck p4 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-airplane p1 a0 l2-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p5 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 224,
            "example_instance_ids": [
                223
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_1, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\nload package_6 into airplane_0 at location_2_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\nload package_3 into truck_0 at location_0_1\nload package_2 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nunload package_4 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_2 from truck_0 at location_0_2\nfly airplane_0 from location_2_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_4 into airplane_0 at location_0_0\nload package_3 into airplane_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nunload package_5 from airplane_0 at location_1_0\nunload package_3 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_4 from airplane_0 at location_2_0\nload package_4 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\nunload package_1 from airplane_0 at location_2_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nunload package_5 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_1_2, package_6 is at location_1_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_1_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-truck p4 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(load-airplane p6 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-airplane p1 a1 l1-0)\n",
            "gold_label": "(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-truck p4 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(load-airplane p6 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-airplane p1 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 225,
            "example_instance_ids": [
                224
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_1_2, package_6 is at location_1_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_1_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_4 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\nload package_6 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nunload package_0 from airplane_1 at location_0_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nunload package_4 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nunload package_1 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_2_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n",
            "gold_label": "(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p5 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 226,
            "example_instance_ids": [
                225
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_2_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_5 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nunload package_3 from truck_0 at location_0_0\nload package_3 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_5 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_5 into truck_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_0 from airplane_1 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_2_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_1, package_5 is at location_1_0 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t1 l1-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n",
            "gold_label": "(load-truck p1 t1 l1-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p0 t0 l0-1)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 227,
            "example_instance_ids": [
                226
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_2_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_1, package_5 is at location_1_0 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_1 at location_1_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_3 into truck_1 at location_1_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_0 from truck_0 at location_0_1\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_5 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nload package_5 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_0, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t1 l1-1)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p6 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p5 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n(unload-truck p3 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n",
            "gold_label": "(load-truck p0 t1 l1-1)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p6 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p3 a1 l0-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p5 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n(unload-truck p3 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 228,
            "example_instance_ids": [
                227
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_0_0, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_0, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_1_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_1\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_6 into truck_0 at location_0_1\nload package_2 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_3 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_3 into airplane_1 at location_0_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_5 from airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\nload package_5 into truck_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nunload package_4 from truck_1 at location_1_2\nunload package_3 from truck_1 at location_1_2\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_0, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_0_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t1 l1-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p5 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p1 a0 l1-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(load-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p6 a0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t1 l1-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p5 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p1 a0 l1-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(load-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p6 a0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 229,
            "example_instance_ids": [
                228
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_0, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_0_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_0 from truck_0 at location_0_0\nload package_5 into airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_1 from truck_2 at location_2_0\nload package_1 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_2 from airplane_0 at location_1_0\nunload package_1 from airplane_0 at location_1_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nload package_3 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nload package_2 into truck_1 at location_1_0\nload package_3 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_6 into airplane_0 at location_0_0\nunload package_5 from airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nunload package_0 from airplane_0 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_2_2, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_1_2, package_5 is at location_2_0 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p5 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n",
            "gold_label": "(load-truck p6 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p5 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 230,
            "example_instance_ids": [
                229
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_2_2, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_1_2, package_5 is at location_2_0 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_5 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_5 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_6 into airplane_1 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nload package_6 into truck_0 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\nload package_2 into truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nfly airplane_1 from location_1_0 to location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_3 from truck_2 at location_2_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_1, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_0_2, package_6 is at location_1_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_1, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t1 l1-2 l1-0 c1)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(load-truck p4 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n",
            "gold_label": "(drive-truck t1 l1-2 l1-0 c1)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(load-truck p4 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 231,
            "example_instance_ids": [
                230
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_1, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_0_2, package_6 is at location_1_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_1, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_2 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_5 into truck_0 at location_0_2\nunload package_2 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\nload package_4 into truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_6 into airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_1_2, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t2 l2-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-truck p4 t2 l2-0)\n(load-airplane p6 a0 l0-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p3 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-airplane p0 a0 l0-0)\n(unload-truck p3 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n",
            "gold_label": "(load-truck p1 t2 l2-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-truck p4 t2 l2-0)\n(load-airplane p6 a0 l0-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p3 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-airplane p0 a0 l0-0)\n(unload-truck p3 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 232,
            "example_instance_ids": [
                231
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_1_2, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_1_2 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_2 at location_2_0\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_4 into truck_2 at location_2_0\nload package_6 into airplane_0 at location_0_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_3 into truck_2 at location_2_1\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_0 into airplane_0 at location_0_0\nunload package_3 from truck_2 at location_2_0\nload package_3 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nunload package_0 from airplane_0 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_1_0, package_5 is at location_2_0, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_2_2 and package_6 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p3 a0 l0-0)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n",
            "gold_label": "(load-truck p2 t0 l0-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p3 a0 l0-0)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 233,
            "example_instance_ids": [
                232
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_0_0, package_3 is at location_0_0, package_4 is at location_1_0, package_5 is at location_2_0, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_2_2 and package_6 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_0 at location_0_0\nload package_4 into airplane_1 at location_1_0\nload package_3 into airplane_0 at location_0_0\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_3 from airplane_0 at location_2_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_0 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_2_1, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_2, package_5 is at location_1_0 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t2 l2-1)\n(load-truck p6 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-truck p5 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(load-airplane p5 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n",
            "gold_label": "(load-truck p5 t2 l2-1)\n(load-truck p6 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-truck p5 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(load-airplane p5 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 234,
            "example_instance_ids": [
                233
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_2_1, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_2, package_5 is at location_1_0 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_1\nload package_6 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_2 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nload package_1 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_5 from truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\nload package_5 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_2_1, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_2_0, package_4 is at location_0_2, package_5 is at location_2_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-airplane p6 a1 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(unload-truck p4 t1 l1-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n",
            "gold_label": "(load-airplane p6 a1 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(unload-truck p4 t1 l1-0)\n(load-airplane p4 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 235,
            "example_instance_ids": [
                234
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_0_1, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_2_1, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_2_0, package_4 is at location_0_2, package_5 is at location_2_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into airplane_1 at location_0_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_2 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_6 into truck_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nload package_3 into truck_1 at location_1_2\nunload package_2 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nunload package_4 from truck_1 at location_1_0\nload package_4 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_4 from airplane_1 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nunload package_1 from airplane_1 at location_0_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_5 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_1_1, package_2 is at location_2_1, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_0_2, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_2_0 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(load-airplane p6 a0 l2-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(unload-truck p5 t0 l0-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n",
            "gold_label": "(load-truck p6 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(load-airplane p6 a0 l2-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p1 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(unload-truck p5 t0 l0-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 236,
            "example_instance_ids": [
                235
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_1_1, package_2 is at location_2_1, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_0_2, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_1_2, package_5 is at location_2_0 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_5 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_2 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_2 from truck_2 at location_2_2\nload package_6 into airplane_0 at location_2_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_1 into truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_3 into truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nload package_1 into airplane_0 at location_1_0\nload package_0 into airplane_0 at location_1_0\nunload package_5 from truck_0 at location_0_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_0 from airplane_0 at location_2_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_0, package_5 is at location_0_0, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_0_2, package_5 is at location_0_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t2 l2-0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p3 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n",
            "gold_label": "(load-truck p0 t2 l2-0)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p3 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 237,
            "example_instance_ids": [
                236
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_0, package_5 is at location_0_0, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_0_2, package_5 is at location_0_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_0\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_5 into truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\nload package_3 into truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\nfly airplane_0 from location_0_0 to location_2_0\nload package_6 into airplane_0 at location_2_0\nload package_3 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_2_1, package_5 is at location_0_2 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p4 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(unload-truck p3 t2 l2-2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(unload-airplane p1 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n",
            "gold_label": "(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p4 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(unload-truck p3 t2 l2-2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(unload-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(unload-airplane p1 a1 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 238,
            "example_instance_ids": [
                237
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_2_1, package_5 is at location_0_2 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nload package_4 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\nunload package_3 from truck_2 at location_2_2\nload package_2 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_2 from truck_2 at location_2_0\nunload package_6 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nunload package_1 from airplane_1 at location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_0_2, package_6 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_2_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t2 l2-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(unload-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n",
            "gold_label": "(load-truck p0 t2 l2-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(unload-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 239,
            "example_instance_ids": [
                238
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_1_0, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_0_2, package_6 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_2_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_1 from truck_1 at location_1_2\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_5 into truck_0 at location_0_2\nunload package_3 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_5 from airplane_1 at location_2_0\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nunload package_0 from truck_2 at location_2_1\nload package_4 into airplane_1 at location_2_0\nunload package_2 from airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_4 from airplane_1 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_1_2, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_1, package_2 is at location_2_1, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_0_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t1 l1-2)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t1 l1-2)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 240,
            "example_instance_ids": [
                239
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_1_2, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_1, package_2 is at location_2_1, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_0_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_2\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_2 from truck_2 at location_2_1\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_1 from airplane_1 at location_1_0\nload package_1 into truck_1 at location_1_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_0_2, package_2 is at location_2_1, package_3 is at location_1_1, package_4 is at location_0_2, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_2_2, package_4 is at location_2_0, package_5 is at location_2_1 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p5 t0 l0-2)\n(load-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p4 a1 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(unload-truck p5 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n",
            "gold_label": "(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p5 t0 l0-2)\n(load-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p4 a1 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(unload-truck p5 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 241,
            "example_instance_ids": [
                240
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_0_2, package_2 is at location_2_1, package_3 is at location_1_1, package_4 is at location_0_2, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_2_2, package_4 is at location_2_0, package_5 is at location_2_1 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_5 into truck_0 at location_0_2\nload package_4 into truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_4 from truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_3 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_4 into airplane_1 at location_0_0\nunload package_5 from truck_0 at location_0_0\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_5 from airplane_1 at location_2_0\nload package_5 into truck_2 at location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\nunload package_5 from truck_2 at location_2_1\nload package_2 into truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_2 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_3 from truck_2 at location_2_2\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_0 from airplane_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_2, package_2 is at location_1_1, package_3 is at location_0_1, package_4 is at location_0_0, package_5 is at location_1_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p3 a0 l1-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(unload-airplane p2 a0 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p5 t1 l1-1)\n(unload-truck p2 t1 l1-1)\n",
            "gold_label": "(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p3 a0 l1-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(unload-airplane p2 a0 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p5 t1 l1-1)\n(unload-truck p2 t1 l1-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 242,
            "example_instance_ids": [
                241
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0, package_6 is at location_2_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_2_2, package_2 is at location_1_1, package_3 is at location_0_1, package_4 is at location_0_0, package_5 is at location_1_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nload package_3 into airplane_0 at location_1_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\nfly airplane_0 from location_1_0 to location_2_0\nload package_6 into airplane_0 at location_2_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nload package_3 into truck_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_3 from truck_0 at location_0_1\nload package_2 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nload package_2 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\nunload package_5 from airplane_0 at location_1_0\nload package_5 into truck_1 at location_1_0\nunload package_2 from airplane_0 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_5 from truck_1 at location_1_1\nunload package_2 from truck_1 at location_1_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_1, package_1 is at location_1_2, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_2_0, package_6 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_0_0, package_3 is at location_1_1, package_4 is at location_0_1, package_5 is at location_1_2 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(load-truck p3 t1 l1-0)\n(load-airplane p5 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p2 a0 l1-0)\n(load-airplane p1 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p6 t0 l0-1)\n(unload-truck p4 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n",
            "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(load-truck p3 t1 l1-0)\n(load-airplane p5 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p2 a0 l1-0)\n(load-airplane p1 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p6 t0 l0-1)\n(unload-truck p4 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 243,
            "example_instance_ids": [
                242
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_1, package_1 is at location_1_2, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_2_0, package_6 is at location_0_1, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_0_0, package_3 is at location_1_1, package_4 is at location_0_1, package_5 is at location_1_2 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\nload package_3 into truck_1 at location_1_0\nload package_5 into airplane_0 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_4 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_3 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_5 from truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_2 into airplane_0 at location_1_0\nload package_1 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_6 into truck_0 at location_0_1\nunload package_4 from truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_1_1, package_5 is at location_2_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(load-truck p5 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p5 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n",
            "gold_label": "(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(load-truck p5 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p5 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-truck p5 t2 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(unload-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 244,
            "example_instance_ids": [
                243
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_1_1, package_5 is at location_2_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_6 into truck_1 at location_1_1\nload package_5 into truck_1 at location_1_1\nload package_2 into truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\nunload package_5 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_6 into airplane_1 at location_1_0\nload package_5 into airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_5 from airplane_1 at location_2_0\nload package_5 into truck_2 at location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_2 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nload package_4 into truck_2 at location_2_1\nload package_3 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nunload package_3 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\nunload package_2 from truck_2 at location_2_2\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_2, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_1_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t2 l2-2)\n(load-truck p5 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(unload-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n(load-airplane p6 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p4 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n",
            "gold_label": "(load-truck p0 t2 l2-2)\n(load-truck p5 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(unload-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(unload-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n(load-airplane p6 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p4 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 245,
            "example_instance_ids": [
                244
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_2, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_1, package_2 is at location_0_0, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_1_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_2\nload package_5 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_6 into truck_1 at location_1_1\nunload package_5 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_2 into airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\nunload package_6 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\nload package_6 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_4 into truck_0 at location_0_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_1_2, package_3 is at location_2_2, package_4 is at location_1_1, package_5 is at location_1_0, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_1_0 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p3 t2 l2-0)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n",
            "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p3 t2 l2-0)\n(load-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 246,
            "example_instance_ids": [
                245
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_1_2, package_3 is at location_2_2, package_4 is at location_1_1, package_5 is at location_1_0, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_1_0 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_3 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_3 from truck_2 at location_2_0\nload package_2 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nunload package_1 from truck_2 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_2 into airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_1 from truck_1 at location_1_2\nfly airplane_1 from location_1_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_1_1, package_5 is at location_0_0 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t1 l1-1)\n(load-airplane p2 a1 l1-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-truck p3 t1 l1-1)\n(unload-airplane p0 a1 l1-0)\n",
            "gold_label": "(load-truck p1 t1 l1-1)\n(load-airplane p2 a1 l1-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(load-truck p4 t1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(unload-truck p3 t1 l1-1)\n(unload-airplane p0 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 247,
            "example_instance_ids": [
                246
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_1, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_1_1, package_5 is at location_0_0 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_1 at location_1_1\nload package_2 into airplane_1 at location_1_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_3 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\nunload package_3 from truck_1 at location_1_1\nunload package_0 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_2, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_1, package_5 is at location_2_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p4 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(load-airplane p5 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n",
            "gold_label": "(load-truck p4 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p4 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(load-airplane p1 a0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(load-airplane p5 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 248,
            "example_instance_ids": [
                247
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_1, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_0_2, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_1, package_5 is at location_2_2 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_3 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_2 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nload package_4 into airplane_0 at location_1_0\nload package_3 into airplane_0 at location_1_0\nload package_1 into airplane_0 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_4 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_5 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\nload package_5 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_3 from airplane_0 at location_2_0\nunload package_2 from airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\nunload package_0 from airplane_0 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_1, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_0_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-airplane p2 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n",
            "gold_label": "(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-airplane p2 a1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p2 a1 l0-0)\n(load-truck p2 t0 l0-0)\n(unload-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(load-airplane p5 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 249,
            "example_instance_ids": [
                248
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_1, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_0_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_2 into airplane_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_3 into truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_2 from airplane_1 at location_0_0\nload package_2 into truck_0 at location_0_0\nunload package_5 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\nload package_5 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_5 from airplane_1 at location_2_0\nload package_4 into airplane_1 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_1_2, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_0, package_5 is at location_2_0, package_6 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_2_1, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_1_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t0 l0-0)\n(load-airplane p2 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p3 t2 l2-0)\n(load-airplane p3 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(load-truck p3 t1 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n",
            "gold_label": "(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t0 l0-0)\n(load-airplane p2 a0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(load-airplane p5 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p3 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p3 t2 l2-0)\n(load-airplane p3 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(load-truck p3 t1 l1-0)\n(unload-airplane p0 a0 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(unload-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 250,
            "example_instance_ids": [
                249
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_1_2, package_2 is at location_0_0, package_3 is at location_2_2, package_4 is at location_0_0, package_5 is at location_2_0, package_6 is at location_0_0, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_2_1, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_1_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_6 into truck_0 at location_0_0\nload package_2 into airplane_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_0 from truck_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nload package_5 into airplane_0 at location_2_0\nunload package_2 from airplane_0 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_2 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_3 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_3 from truck_2 at location_2_0\nload package_3 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\nunload package_3 from airplane_0 at location_1_0\nload package_3 into truck_1 at location_1_0\nunload package_0 from airplane_0 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\nunload package_0 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_0_0, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_0_0 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(unload-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t2 l2-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(unload-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p0 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 251,
            "example_instance_ids": [
                250
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_0, package_4 is at location_2_0, package_5 is at location_0_0, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_2, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_2_1, package_4 is at location_2_1, package_5 is at location_0_0 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nunload package_3 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_2 into truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_0 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_2, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_1_0, package_4 is at location_0_1, package_5 is at location_1_0, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_2_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t1 l1-1)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p2 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n",
            "gold_label": "(load-truck p6 t1 l1-1)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p2 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p5 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(load-truck p4 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p1 t2 l2-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 252,
            "example_instance_ids": [
                251
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_2, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_1_0, package_4 is at location_0_1, package_5 is at location_1_0, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_1_2, package_5 is at location_2_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_1 at location_1_1\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_2 into truck_0 at location_0_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nunload package_0 from truck_0 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_5 into airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_5 from airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\nload package_4 into truck_1 at location_1_0\nload package_2 into truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nunload package_2 from truck_1 at location_1_2\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nunload package_1 from truck_2 at location_2_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_1_2, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_1, package_4 is at location_2_1, package_5 is at location_2_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-0)\n(load-truck p6 t1 l1-1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p5 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p5 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(load-airplane p5 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p6 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n",
            "gold_label": "(load-truck p4 t2 l2-0)\n(load-truck p6 t1 l1-1)\n(load-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p5 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p5 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(load-airplane p5 a0 l1-0)\n(load-airplane p3 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p6 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p3 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 253,
            "example_instance_ids": [
                252
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_1_2, package_6 is at location_1_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_0_1, package_4 is at location_2_1, package_5 is at location_2_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_0\nload package_6 into truck_1 at location_1_1\nload package_3 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_5 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\nunload package_5 from truck_1 at location_1_0\nunload package_3 from truck_1 at location_1_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nload package_6 into airplane_0 at location_1_0\nload package_5 into airplane_0 at location_1_0\nload package_3 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_6 from airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_3 into truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_3 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_1_1, package_5 is at location_2_1, package_6 is at location_2_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_0 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p5 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n",
            "gold_label": "(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p5 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 254,
            "example_instance_ids": [
                253
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_1_1, package_5 is at location_2_1, package_6 is at location_2_1, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_1_1, package_4 is at location_1_2, package_5 is at location_2_0 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_6 into truck_2 at location_2_1\nload package_5 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nunload package_6 from truck_2 at location_2_0\nload package_6 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nload package_2 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_0_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-1)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-truck p1 t0 l0-2)\n(load-airplane p2 a0 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p3 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(load-airplane p1 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n",
            "gold_label": "(load-truck p4 t2 l2-1)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-truck p1 t0 l0-2)\n(load-airplane p2 a0 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p3 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(load-airplane p1 a0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 255,
            "example_instance_ids": [
                254
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_2_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_0_1, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_1_0, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_1\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nload package_1 into truck_0 at location_0_2\nload package_2 into airplane_0 at location_0_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_3 into truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nload package_1 into airplane_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_2 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_1 from airplane_0 at location_2_0\nunload package_0 from airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_1 into truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_2_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_1_0, package_4 is at location_2_1, package_5 is at location_1_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-airplane p5 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n",
            "gold_label": "(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-airplane p5 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(load-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(unload-airplane p0 a0 l2-0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 256,
            "example_instance_ids": [
                255
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_2_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_2, package_2 is at location_2_2, package_3 is at location_1_0, package_4 is at location_2_1, package_5 is at location_1_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_4 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_5 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nload package_6 into airplane_0 at location_1_0\nunload package_5 from airplane_0 at location_1_0\nload package_5 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_6 from airplane_0 at location_2_0\nunload package_0 from airplane_0 at location_2_0\nunload package_4 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nload package_4 into truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nload package_2 into truck_2 at location_2_1\nunload package_0 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\nunload package_2 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_0_0, package_2 is at location_2_2, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_1_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(load-truck p3 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p5 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p6 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n",
            "gold_label": "(load-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p4 t2 l2-1)\n(load-truck p3 t1 l1-0)\n(load-airplane p0 a0 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p5 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(unload-truck p3 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(load-airplane p1 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(load-airplane p6 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(unload-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p0 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 257,
            "example_instance_ids": [
                256
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_0_0, package_2 is at location_2_2, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_1_1 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nunload package_4 from truck_2 at location_2_1\nload package_3 into truck_1 at location_1_0\nload package_0 into airplane_0 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_5 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\nunload package_3 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\nload package_1 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nload package_6 into airplane_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\nunload package_0 from airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_2, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_0_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t0 l0-1)\n(load-airplane p4 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-truck p5 t2 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p5 t0 l0-2)\n(unload-truck p3 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n",
            "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p5 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t0 l0-1)\n(load-airplane p4 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-truck p5 t2 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p5 t0 l0-2)\n(unload-truck p3 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 258,
            "example_instance_ids": [
                257
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_2, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_0_1, package_5 is at location_0_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_5 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_0 at location_0_1\nload package_4 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_3 into airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_5 from truck_2 at location_2_0\nload package_5 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_5 from airplane_1 at location_0_0\nunload package_4 from airplane_1 at location_0_0\nunload package_3 from airplane_1 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_5 into truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nload package_3 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_5 from truck_0 at location_0_2\nunload package_3 from truck_0 at location_0_2\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_2 from truck_0 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_0_0, package_2 is at location_1_1, package_3 is at location_0_1, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t1 l1-2)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(unload-airplane p0 a0 l1-0)\n",
            "gold_label": "(load-truck p6 t1 l1-2)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p3 a0 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(unload-airplane p0 a0 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 259,
            "example_instance_ids": [
                258
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_2, package_1 is at location_0_0, package_2 is at location_1_1, package_3 is at location_0_1, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_1 at location_1_2\nload package_3 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_3 from truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_3 into airplane_0 at location_0_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nload package_6 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_1 from truck_0 at location_0_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_0 from truck_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\nunload package_3 from airplane_0 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nunload package_0 from airplane_0 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_1_2, package_5 is at location_0_0, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p3 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p6 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p1 a0 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p2 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n",
            "gold_label": "(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p3 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p6 a0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(load-truck p3 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(unload-airplane p1 a0 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p2 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p2 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 260,
            "example_instance_ids": [
                259
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_1_2, package_5 is at location_0_0, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_1_2, package_5 is at location_0_0 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nfly airplane_0 from location_1_0 to location_2_0\nload package_3 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nload package_6 into airplane_0 at location_0_0\nunload package_3 from airplane_0 at location_0_0\nload package_3 into truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_6 from airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_2 from airplane_0 at location_1_0\nunload package_1 from airplane_0 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_2 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_2 from truck_1 at location_1_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_0_2, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_0_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t2 l2-1)\n(load-truck p1 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p3 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p5 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p4 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n",
            "gold_label": "(load-truck p0 t2 l2-1)\n(load-truck p1 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p3 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p5 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p4 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 261,
            "example_instance_ids": [
                260
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_2, package_2 is at location_0_2, package_3 is at location_2_1, package_4 is at location_1_0, package_5 is at location_0_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_1\nload package_1 into truck_1 at location_1_0\nload package_6 into airplane_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_3 into truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_3 from truck_2 at location_2_1\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_5 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nload package_4 into truck_0 at location_0_2\nunload package_2 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_1 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-1 l2-2 c2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p2 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-truck p1 t2 l2-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n",
            "gold_label": "(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p2 t1 l1-1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(load-truck p6 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-truck p1 t2 l2-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p3 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 262,
            "example_instance_ids": [
                261
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_2 into truck_1 at location_1_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nload package_6 into truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_1 from truck_2 at location_2_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_3 into truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_3 from truck_1 at location_1_2\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_1 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t0 l0-2)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(unload-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n",
            "gold_label": "(load-truck p6 t0 l0-2)\n(load-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(load-truck p2 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p3 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(unload-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 263,
            "example_instance_ids": [
                262
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_0_2, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_1_1, package_5 is at location_0_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_0 at location_0_2\nload package_5 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\nload package_2 into truck_0 at location_0_1\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_1 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nload package_3 into airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\nunload package_0 from airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_4 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(load-truck p6 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n",
            "gold_label": "(load-truck p1 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(load-truck p6 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p2 a1 l0-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p2 a1 l1-0)\n(load-truck p2 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p2 t1 l1-2)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p5 a1 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 264,
            "example_instance_ids": [
                263
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_0_2, package_5 is at location_0_1, package_6 is at location_1_1, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\nload package_6 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_4 into truck_0 at location_0_2\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_2 into airplane_1 at location_0_0\nunload package_5 from truck_0 at location_0_0\nload package_5 into airplane_1 at location_0_0\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_2 from airplane_1 at location_1_0\nload package_2 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_2 from truck_1 at location_1_2\nfly airplane_1 from location_1_0 to location_2_0\nunload package_5 from airplane_1 at location_2_0\nunload package_4 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nunload package_0 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_0_1, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_2_2, package_4 is at location_1_2, package_5 is at location_1_0 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(load-truck p3 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(load-airplane p4 a0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(load-truck p2 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(unload-truck p2 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(load-airplane p3 a0 l0-0)\n(load-airplane p2 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p2 a0 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(load-truck p3 t2 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(load-airplane p4 a0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p5 a0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 265,
            "example_instance_ids": [
                264
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_1_0, package_2 is at location_0_2, package_3 is at location_0_1, package_4 is at location_2_2, package_5 is at location_0_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_0, package_2 is at location_2_0, package_3 is at location_2_2, package_4 is at location_1_2, package_5 is at location_1_0 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\nload package_2 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_3 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_3 from truck_0 at location_0_0\nunload package_2 from truck_0 at location_0_0\nload package_5 into airplane_0 at location_0_0\nload package_3 into airplane_0 at location_0_0\nload package_2 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_3 from airplane_0 at location_2_0\nunload package_2 from airplane_0 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nunload package_4 from truck_2 at location_2_0\nload package_3 into truck_2 at location_2_0\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_3 from truck_2 at location_2_2\nload package_4 into airplane_0 at location_2_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_5 from airplane_0 at location_1_0\nunload package_4 from airplane_0 at location_1_0\nunload package_0 from airplane_0 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_0, package_5 is at location_0_0, package_6 is at location_1_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_0 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t2 l2-2)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p6 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p3 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p5 a1 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n",
            "gold_label": "(load-truck p1 t2 l2-2)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p6 t1 l1-2)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p3 t1 l1-0)\n(load-airplane p6 a1 l1-0)\n(load-airplane p4 a1 l1-0)\n(load-airplane p3 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p5 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p5 a1 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(unload-truck p2 t0 l0-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 266,
            "example_instance_ids": [
                265
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_0, package_3 is at location_1_2, package_4 is at location_1_0, package_5 is at location_0_0, package_6 is at location_1_2, truck_0 is at location_0_2, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_0_2, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_0 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_2 at location_2_2\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_6 into truck_1 at location_1_2\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\nunload package_3 from truck_1 at location_1_0\nload package_6 into airplane_1 at location_1_0\nload package_4 into airplane_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_5 into airplane_1 at location_0_0\nunload package_3 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nunload package_5 from airplane_1 at location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nunload package_2 from truck_0 at location_0_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_2_1, package_2 is at location_2_1, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_1_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_0, package_5 is at location_0_1 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t2 l2-2 l2-1 c2)\n(load-truck p2 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(load-airplane p4 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(load-airplane p5 a0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p6 a0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p5 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(unload-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n",
            "gold_label": "(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p2 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p2 t2 l2-0)\n(load-airplane p4 a0 l2-0)\n(load-airplane p2 a0 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(load-airplane p6 a0 l1-0)\n(load-airplane p5 a0 l1-0)\n(unload-airplane p4 a0 l1-0)\n(unload-airplane p2 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p6 a0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p1 a0 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p5 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n(unload-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 267,
            "example_instance_ids": [
                266
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_0_0, package_1 is at location_2_1, package_2 is at location_2_1, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_1_0, package_6 is at location_1_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_0, package_5 is at location_0_1 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_2 into truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_2 from truck_2 at location_2_0\nload package_4 into airplane_0 at location_2_0\nload package_2 into airplane_0 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_1 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nload package_6 into airplane_0 at location_1_0\nload package_5 into airplane_0 at location_1_0\nunload package_4 from airplane_0 at location_1_0\nunload package_2 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_6 from airplane_0 at location_0_0\nunload package_5 from airplane_0 at location_0_0\nunload package_1 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_5 into truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\nunload package_0 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_0_1, package_1 is at location_1_2, package_2 is at location_1_2, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_2_2, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_2_2, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_1_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p5 t2 l2-2)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p2 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n",
            "gold_label": "(load-truck p5 t2 l2-2)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p2 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p1 t1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p5 t2 l2-0)\n(fly-airplane a1 l0-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p5 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(load-truck p2 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(load-truck p1 t2 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 268,
            "example_instance_ids": [
                267
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_0_1, package_1 is at location_1_2, package_2 is at location_1_2, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_2_2, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_2_1, package_2 is at location_2_2, package_3 is at location_2_1, package_4 is at location_1_1, package_5 is at location_1_0 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_5 into truck_2 at location_2_2\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_2 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_1 from truck_1 at location_1_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_5 from truck_2 at location_2_0\nfly airplane_1 from location_0_0 to location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_5 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nload package_6 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_0 from truck_0 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\nload package_2 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nload package_1 into truck_2 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\nunload package_0 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_2 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_1, package_3 is at location_1_1, package_4 is at location_0_2, package_5 is at location_2_0, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_2_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t2 l2-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p4 t2 l2-1)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n",
            "gold_label": "(load-truck p2 t2 l2-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p4 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(unload-truck p4 t2 l2-1)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p6 t1 l1-0)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 269,
            "example_instance_ids": [
                268
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_1_0, package_1 is at location_0_0, package_2 is at location_2_1, package_3 is at location_1_1, package_4 is at location_0_2, package_5 is at location_2_0, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_0_2, package_2 is at location_1_0, package_3 is at location_1_1, package_4 is at location_2_1, package_5 is at location_2_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_1 into truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_4 into truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_4 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nunload package_4 from truck_2 at location_2_1\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_6 into truck_1 at location_1_0\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_0 from truck_1 at location_1_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_1, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_2_1 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p1 t1 l1-0)\n(load-truck p6 t0 l0-1)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p4 t0 l0-2)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n",
            "gold_label": "(load-truck p1 t1 l1-0)\n(load-truck p6 t0 l0-1)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(unload-truck p4 t0 l0-2)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p3 t1 l1-1)\n(unload-truck p1 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 270,
            "example_instance_ids": [
                269
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_2, package_1 is at location_1_0, package_2 is at location_0_1, package_3 is at location_1_1, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_1_1, package_2 is at location_0_1, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_2_1 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_1 at location_1_0\nload package_6 into truck_0 at location_0_1\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_4 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nload package_5 into airplane_0 at location_0_0\nunload package_4 from airplane_0 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\nunload package_4 from truck_0 at location_0_2\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_3 into truck_1 at location_1_1\nunload package_1 from truck_1 at location_1_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_0_2, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_1, package_2 is at location_2_0, package_3 is at location_2_1, package_4 is at location_0_2, package_5 is at location_0_2 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-airplane p1 a1 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p6 t0 l0-1)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(unload-airplane p2 a1 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n",
            "gold_label": "(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-airplane p1 a1 l0-0)\n(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p6 t0 l0-1)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p2 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(unload-airplane p3 a1 l2-0)\n(load-truck p3 t2 l2-0)\n(unload-airplane p2 a1 l2-0)\n(unload-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p3 t2 l2-1)\n(load-airplane p0 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p0 a1 l0-0)\n(load-truck p0 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(unload-truck p0 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 271,
            "example_instance_ids": [
                270
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_2, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_0_2, package_6 is at location_0_1, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_1_1, package_2 is at location_2_0, package_3 is at location_2_1, package_4 is at location_0_2, package_5 is at location_0_2 and package_6 is at location_2_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_1 into airplane_1 at location_0_0\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_6 into truck_0 at location_0_1\nload package_4 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_2 into airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_1 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nunload package_3 from airplane_1 at location_2_0\nload package_3 into truck_2 at location_2_0\nunload package_2 from airplane_1 at location_2_0\nunload package_0 from truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_3 from truck_2 at location_2_1\nload package_0 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_0 from airplane_1 at location_0_0\nload package_0 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_0, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_2_1, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_0, package_2 is at location_2_1, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_0_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p6 t2 l2-2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a0 l0-0)\n(unload-truck p6 t2 l2-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p1 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p6 a0 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n",
            "gold_label": "(load-truck p6 t2 l2-2)\n(load-truck p2 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p5 t0 l0-2)\n(load-truck p3 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p3 t0 l0-0)\n(load-airplane p3 a0 l0-0)\n(unload-truck p6 t2 l2-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a0 l0-0)\n(fly-airplane a0 l0-0 l1-0)\n(load-airplane p1 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(load-airplane p6 a0 l2-0)\n(unload-airplane p3 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p6 a0 l0-0)\n(load-truck p6 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p6 t0 l0-2)\n(drive-truck t1 l1-1 l1-0 c1)\n(load-truck p0 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p0 t1 l1-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 272,
            "example_instance_ids": [
                271
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_1_0, package_2 is at location_2_2, package_3 is at location_0_2, package_4 is at location_2_1, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_0, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_0, package_2 is at location_2_1, package_3 is at location_2_0, package_4 is at location_2_0, package_5 is at location_0_2 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_6 into truck_2 at location_2_2\nload package_2 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_4 into truck_2 at location_2_1\nunload package_2 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_5 from truck_0 at location_0_2\nload package_3 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_3 from truck_0 at location_0_0\nload package_3 into airplane_0 at location_0_0\nunload package_6 from truck_2 at location_2_0\nunload package_0 from truck_0 at location_0_0\nload package_0 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_1_0\nload package_1 into airplane_0 at location_1_0\nunload package_0 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nload package_6 into airplane_0 at location_2_0\nunload package_3 from airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_6 from airplane_0 at location_0_0\nload package_6 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_6 from truck_0 at location_0_2\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nload package_0 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_0 from truck_1 at location_1_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_1_0, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_1_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p3 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n",
            "gold_label": "(load-truck p3 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-airplane p0 a1 l1-0)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p4 t0 l0-1)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p2 t1 l1-0)\n(load-airplane p3 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(unload-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p1 a1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p0 a1 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p0 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 273,
            "example_instance_ids": [
                272
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_0, package_5 is at location_1_0, package_6 is at location_0_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_1_2, package_2 is at location_1_0, package_3 is at location_0_0, package_4 is at location_0_1, package_5 is at location_1_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\nload package_0 into airplane_1 at location_1_0\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_4 from truck_0 at location_0_1\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_2 from truck_1 at location_1_0\nload package_3 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_6 into airplane_1 at location_0_0\nunload package_3 from airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_1 from airplane_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_1 from truck_1 at location_1_2\nfly airplane_1 from location_1_0 to location_2_0\nunload package_0 from airplane_1 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_0 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_1_1, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_2_2 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p3 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(load-airplane p2 a0 l1-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(load-airplane p3 a0 l1-0)\n(unload-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(load-airplane p5 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n",
            "gold_label": "(load-truck p3 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(load-airplane p2 a0 l1-0)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(load-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(unload-truck p0 t1 l1-0)\n(load-airplane p3 a0 l1-0)\n(unload-truck p5 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p4 t1 l1-2)\n(load-airplane p5 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p3 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(load-truck p2 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(load-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(load-airplane p1 a0 l0-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(unload-airplane p1 a0 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(load-truck p5 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p6 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 274,
            "example_instance_ids": [
                273
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_1_2, package_1 is at location_0_1, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_1_1, package_5 is at location_1_1, package_6 is at location_2_0, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_2_2, package_2 is at location_0_1, package_3 is at location_0_0, package_4 is at location_1_2, package_5 is at location_2_2 and package_6 is at location_2_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_1 at location_1_2\nload package_0 into truck_1 at location_1_2\nload package_2 into airplane_0 at location_1_0\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\nload package_4 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\nunload package_0 from truck_1 at location_1_0\nload package_3 into airplane_0 at location_1_0\nunload package_5 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_4 from truck_1 at location_1_2\nload package_5 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_3 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\nload package_2 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nload package_1 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nload package_1 into airplane_0 at location_0_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nunload package_1 from airplane_0 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nload package_5 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_6 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_2_2, package_5 is at location_0_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n",
            "gold_label": "(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(drive-truck t2 l2-1 l2-2 c2)\n(load-truck p2 t2 l2-2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p6 a1 l2-0)\n(load-truck p6 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 275,
            "example_instance_ids": [
                274
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_2_2, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_1_2, package_4 is at location_2_0, package_5 is at location_0_1, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_2_0, package_3 is at location_1_2, package_4 is at location_2_2, package_5 is at location_0_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nload package_2 into truck_2 at location_2_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nunload package_0 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_6 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_6 from airplane_1 at location_2_0\nload package_6 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\nunload package_4 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_2_1, package_3 is at location_0_0, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_0_0, package_5 is at location_1_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t1 l1-0 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n",
            "gold_label": "(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p0 t2 l2-2)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(load-truck p4 t2 l2-1)\n(load-truck p2 t2 l2-1)\n(load-truck p1 t2 l2-1)\n(unload-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p6 a1 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p2 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n(unload-truck p1 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 276,
            "example_instance_ids": [
                275
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_2_0, package_0 is at location_2_2, package_1 is at location_2_1, package_2 is at location_2_1, package_3 is at location_0_0, package_4 is at location_2_1, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_1, package_1 is at location_0_2, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_0_0, package_5 is at location_1_2 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_5 from truck_1 at location_1_2\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_0 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_6 into truck_2 at location_2_1\nload package_4 into truck_2 at location_2_1\nload package_2 into truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\nunload package_0 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_4 from truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_6 into airplane_1 at location_2_0\nload package_4 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_6 from airplane_1 at location_0_0\nunload package_4 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_3 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nunload package_2 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\nunload package_1 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_0_1, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t2 l2-0)\n(load-truck p6 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p4 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n",
            "gold_label": "(load-truck p2 t2 l2-0)\n(load-truck p6 t1 l1-2)\n(load-truck p1 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a0 l0-0)\n(unload-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a0 l0-0 l2-0)\n(unload-airplane p5 a0 l2-0)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p5 t2 l2-1)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p2 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p4 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p1 t0 l0-2)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p4 a1 l1-0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 277,
            "example_instance_ids": [
                276
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_2_1, package_1 is at location_1_2, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_0, package_5 is at location_0_1, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_0_2, package_2 is at location_2_2, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_1 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_0\nload package_6 into truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nload package_5 into airplane_0 at location_0_0\nunload package_1 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nload package_1 into airplane_1 at location_1_0\nfly airplane_0 from location_0_0 to location_2_0\nunload package_5 from airplane_0 at location_2_0\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_5 from truck_2 at location_2_1\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_2 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\nfly airplane_1 from location_1_0 to location_0_0\nload package_4 into airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_1 from truck_0 at location_0_2\nfly airplane_1 from location_0_0 to location_1_0\nunload package_4 from airplane_1 at location_1_0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_2, package_1 is at location_1_1, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_1, package_2 is at location_2_2, package_3 is at location_1_1, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n",
            "gold_label": "(drive-truck t0 l0-2 l0-1 c0)\n(load-truck p5 t0 l0-1)\n(load-truck p4 t0 l0-1)\n(drive-truck t0 l0-1 l0-0 c0)\n(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p3 t1 l1-2)\n(load-truck p2 t1 l1-2)\n(load-truck p0 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p3 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(unload-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p2 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(unload-truck p5 t0 l0-0)\n(load-airplane p5 a1 l0-0)\n(unload-truck p4 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p5 a1 l1-0)\n(load-airplane p2 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p2 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n(unload-truck p2 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 278,
            "example_instance_ids": [
                277
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_1_2, package_1 is at location_1_1, package_2 is at location_1_2, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_0_1, package_6 is at location_0_2, truck_0 is at location_0_2, truck_1 is at location_1_0, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_1, package_1 is at location_2_1, package_2 is at location_2_2, package_3 is at location_1_1, package_4 is at location_2_2, package_5 is at location_1_0 and package_6 is at location_0_2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nload package_5 into truck_0 at location_0_1\nload package_4 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_0 in city_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_3 into truck_1 at location_1_2\nload package_2 into truck_1 at location_1_2\nload package_0 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_3 from truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\nunload package_0 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_2 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nunload package_5 from truck_0 at location_0_0\nload package_5 into airplane_1 at location_0_0\nunload package_4 from truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_5 from airplane_1 at location_1_0\nload package_2 into airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_2 from airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nload package_2 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\nunload package_2 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_2_1, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_2, package_5 is at location_1_1 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t1 l1-0 l1-2 c1)\n(load-truck p5 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-airplane p3 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n",
            "gold_label": "(drive-truck t1 l1-0 l1-2 c1)\n(load-truck p5 t1 l1-2)\n(drive-truck t1 l1-2 l1-1 c1)\n(unload-truck p5 t1 l1-1)\n(load-airplane p3 a1 l1-0)\n(load-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p3 a1 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p4 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p4 t2 l2-0)\n(load-airplane p4 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p4 a1 l0-0)\n(unload-airplane p0 a1 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p6 t0 l0-0)\n(load-truck p4 t0 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 279,
            "example_instance_ids": [
                278
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_1_0, package_1 is at location_0_2, package_2 is at location_2_0, package_3 is at location_1_0, package_4 is at location_2_1, package_5 is at location_1_2, package_6 is at location_0_0, truck_0 is at location_0_1, truck_1 is at location_1_0, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_0_0, package_1 is at location_0_1, package_2 is at location_2_0, package_3 is at location_2_0, package_4 is at location_0_2, package_5 is at location_1_1 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nload package_5 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nunload package_5 from truck_1 at location_1_1\nload package_3 into airplane_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_3 from airplane_1 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_4 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_4 from truck_2 at location_2_0\nload package_4 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_4 from airplane_1 at location_0_0\nunload package_0 from airplane_1 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_6 into truck_0 at location_0_0\nload package_4 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p5 a0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n",
            "gold_label": "(load-truck p3 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p3 t1 l1-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(load-truck p0 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p0 t2 l2-0)\n(load-airplane p6 a0 l2-0)\n(load-airplane p5 a0 l2-0)\n(load-airplane p0 a0 l2-0)\n(fly-airplane a0 l2-0 l1-0)\n(unload-airplane p6 a0 l1-0)\n(load-airplane p2 a0 l1-0)\n(unload-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p2 a0 l0-0)\n(drive-truck t0 l0-2 l0-0 c0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(load-truck p4 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p4 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 280,
            "example_instance_ids": [
                279
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_0_0, package_0 is at location_2_1, package_1 is at location_0_0, package_2 is at location_1_0, package_3 is at location_1_2, package_4 is at location_0_1, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_2, truck_1 is at location_1_2, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_0_1, package_2 is at location_0_0, package_3 is at location_1_0, package_4 is at location_0_2, package_5 is at location_0_0 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_3 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_3 from truck_1 at location_1_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nload package_0 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_0 from truck_2 at location_2_0\nload package_6 into airplane_0 at location_2_0\nload package_5 into airplane_0 at location_2_0\nload package_0 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_1_0\nunload package_6 from airplane_0 at location_1_0\nload package_2 into airplane_0 at location_1_0\nunload package_0 from airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_0_0\nunload package_5 from airplane_0 at location_0_0\nunload package_2 from airplane_0 at location_0_0\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nload package_4 into truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_4 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_1, package_6 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_1, package_3 is at location_2_2, package_4 is at location_1_1, package_5 is at location_2_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p3 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n",
            "gold_label": "(load-truck p0 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p1 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p1 t0 l0-0)\n(unload-truck p0 t0 l0-0)\n(fly-airplane a1 l1-0 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p2 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p1 a1 l1-0)\n(unload-airplane p0 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p2 a1 l2-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p3 t2 l2-0)\n(load-truck p2 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p3 t2 l2-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(load-truck p1 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p6 t1 l1-1)\n(unload-truck p4 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p1 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 281,
            "example_instance_ids": [
                280
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_1, package_1 is at location_0_2, package_2 is at location_0_0, package_3 is at location_2_0, package_4 is at location_1_0, package_5 is at location_2_1, package_6 is at location_1_1, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_1_0, package_1 is at location_1_2, package_2 is at location_2_1, package_3 is at location_2_2, package_4 is at location_1_1, package_5 is at location_2_1 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_0 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_1 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_1 from truck_0 at location_0_0\nunload package_0 from truck_0 at location_0_0\nfly airplane_1 from location_1_0 to location_0_0\nload package_1 into airplane_1 at location_0_0\nload package_2 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_1 from airplane_1 at location_1_0\nunload package_0 from airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_2 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_3 into truck_2 at location_2_0\nload package_2 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_2 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_3 from truck_2 at location_2_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\nload package_1 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_6 into truck_1 at location_1_1\nunload package_4 from truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_1 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_2_2, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_1_2, package_5 is at location_1_2 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p2 t2 l2-2)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(unload-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p1 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p2 t2 l2-2)\n(load-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l2-0)\n(unload-airplane p1 a1 l2-0)\n(drive-truck t2 l2-2 l2-1 c2)\n(load-truck p6 t2 l2-1)\n(unload-truck p3 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(unload-truck p2 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(load-truck p0 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p1 t2 l2-2)\n(unload-truck p0 t2 l2-2)\n(load-airplane p6 a1 l2-0)\n(load-airplane p4 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(unload-airplane p4 a1 l1-0)\n(unload-airplane p2 a1 l1-0)\n(drive-truck t1 l1-2 l1-0 c1)\n(load-truck p4 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(unload-truck p5 t1 l1-2)\n(unload-truck p4 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 282,
            "example_instance_ids": [
                281
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_0_0, package_2 is at location_2_2, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_1_1, package_6 is at location_2_1, truck_0 is at location_0_0, truck_1 is at location_1_2, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_2, package_1 is at location_2_2, package_2 is at location_1_0, package_3 is at location_2_1, package_4 is at location_1_2, package_5 is at location_1_2 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_2\nload package_3 into truck_2 at location_2_2\nload package_2 into truck_2 at location_2_2\nload package_1 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_2_0\nunload package_1 from airplane_1 at location_2_0\ndrive truck_2 from location_2_2 to location_2_1 in city_2\nload package_6 into truck_2 at location_2_1\nunload package_3 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nunload package_4 from truck_2 at location_2_0\nunload package_2 from truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\nload package_0 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_1 from truck_2 at location_2_2\nunload package_0 from truck_2 at location_2_2\nload package_6 into airplane_1 at location_2_0\nload package_4 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nunload package_4 from airplane_1 at location_1_0\nunload package_2 from airplane_1 at location_1_0\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nload package_4 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nunload package_5 from truck_1 at location_1_2\nunload package_4 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_1_2, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_2, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_0_0, package_5 is at location_0_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t2 l2-2)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p6 t1 l1-2)\n(load-truck p5 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p5 t1 l1-0)\n(load-airplane p6 a0 l1-0)\n(load-airplane p5 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n",
            "gold_label": "(load-truck p4 t2 l2-2)\n(load-truck p2 t1 l1-1)\n(drive-truck t1 l1-1 l1-2 c1)\n(load-truck p6 t1 l1-2)\n(load-truck p5 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n(drive-truck t1 l1-2 l1-0 c1)\n(unload-truck p6 t1 l1-0)\n(unload-truck p5 t1 l1-0)\n(load-airplane p6 a0 l1-0)\n(load-airplane p5 a0 l1-0)\n(fly-airplane a0 l1-0 l2-0)\n(unload-airplane p6 a0 l2-0)\n(load-airplane p3 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p3 a1 l1-0)\n(drive-truck t2 l2-2 l2-0 c2)\n(load-truck p6 t2 l2-0)\n(unload-truck p4 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p6 t2 l2-2)\n(unload-truck p1 t2 l2-2)\n(load-airplane p4 a0 l2-0)\n(fly-airplane a0 l2-0 l0-0)\n(unload-airplane p5 a0 l0-0)\n(unload-airplane p4 a0 l0-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p5 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p5 t0 l0-1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 283,
            "example_instance_ids": [
                282
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_1_0, airplane_1 is at location_0_0, package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_1_1, package_3 is at location_0_0, package_4 is at location_2_2, package_5 is at location_1_2, package_6 is at location_1_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_2, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_2, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_0_0, package_5 is at location_0_1 and package_6 is at location_2_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_2 at location_2_2\nload package_2 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_2 in city_1\nload package_6 into truck_1 at location_1_2\nload package_5 into truck_1 at location_1_2\nunload package_2 from truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_0 in city_1\nunload package_6 from truck_1 at location_1_0\nunload package_5 from truck_1 at location_1_0\nload package_6 into airplane_0 at location_1_0\nload package_5 into airplane_0 at location_1_0\nfly airplane_0 from location_1_0 to location_2_0\nunload package_6 from airplane_0 at location_2_0\nload package_3 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_3 from airplane_1 at location_1_0\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nload package_6 into truck_2 at location_2_0\nunload package_4 from truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_6 from truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\nload package_4 into airplane_0 at location_2_0\nfly airplane_0 from location_2_0 to location_0_0\nunload package_5 from airplane_0 at location_0_0\nunload package_4 from airplane_0 at location_0_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_5 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_5 from truck_0 at location_0_1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_0_2, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_1_1, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_0_0 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p4 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p3 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n",
            "gold_label": "(load-truck p4 t1 l1-1)\n(load-truck p2 t1 l1-1)\n(load-truck p1 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p4 t1 l1-0)\n(unload-truck p1 t1 l1-0)\n(load-truck p5 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(load-truck p3 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p5 t0 l0-0)\n(unload-truck p3 t0 l0-0)\n(fly-airplane a1 l2-0 l0-0)\n(load-airplane p3 a1 l0-0)\n(unload-truck p0 t0 l0-0)\n(load-airplane p0 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(load-airplane p4 a1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-airplane p1 a1 l1-0)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(load-truck p4 t2 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(load-truck p6 t2 l2-2)\n(unload-truck p4 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(unload-truck p6 t2 l2-0)\n(load-airplane p6 a1 l2-0)\n(fly-airplane a1 l2-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(drive-truck t1 l1-0 l1-2 c1)\n(unload-truck p6 t1 l1-2)\n(unload-truck p2 t1 l1-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 284,
            "example_instance_ids": [
                283
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_2_0, package_0 is at location_0_2, package_1 is at location_1_1, package_2 is at location_1_1, package_3 is at location_0_2, package_4 is at location_1_1, package_5 is at location_0_1, package_6 is at location_2_2, truck_0 is at location_0_1, truck_1 is at location_1_1, truck_2 is at location_2_0, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_0, package_2 is at location_1_2, package_3 is at location_1_0, package_4 is at location_2_2, package_5 is at location_0_0 and package_6 is at location_1_2.\n\nMy plan is as follows:\n\n[PLAN]\nload package_4 into truck_1 at location_1_1\nload package_2 into truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_4 from truck_1 at location_1_0\nunload package_1 from truck_1 at location_1_0\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nload package_3 into truck_0 at location_0_2\nload package_0 into truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_5 from truck_0 at location_0_0\nunload package_3 from truck_0 at location_0_0\nfly airplane_1 from location_2_0 to location_0_0\nload package_3 into airplane_1 at location_0_0\nunload package_0 from truck_0 at location_0_0\nload package_0 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nload package_4 into airplane_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_1 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nload package_4 into truck_2 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nload package_6 into truck_2 at location_2_2\nunload package_4 from truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\nunload package_6 from truck_2 at location_2_0\nload package_6 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_6 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_2 in city_1\nunload package_6 from truck_1 at location_1_2\nunload package_2 from truck_1 at location_1_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_1, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_2_2, package_5 is at location_0_2 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive-truck t1 l1-0 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-airplane p5 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(load-truck p5 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(unload-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p3 t1 l1-1)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n",
            "gold_label": "(drive-truck t1 l1-0 l1-1 c1)\n(load-truck p5 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p5 t1 l1-0)\n(load-airplane p5 a1 l1-0)\n(fly-airplane a1 l1-0 l0-0)\n(unload-airplane p5 a1 l0-0)\n(load-truck p5 t0 l0-0)\n(load-airplane p4 a1 l0-0)\n(load-airplane p3 a1 l0-0)\n(load-airplane p1 a1 l0-0)\n(load-airplane p0 a1 l0-0)\n(drive-truck t0 l0-0 l0-2 c0)\n(load-truck p6 t0 l0-2)\n(unload-truck p5 t0 l0-2)\n(drive-truck t0 l0-2 l0-0 c0)\n(unload-truck p6 t0 l0-0)\n(load-airplane p6 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(load-truck p6 t1 l1-0)\n(unload-airplane p3 a1 l1-0)\n(load-truck p3 t1 l1-0)\n(drive-truck t1 l1-0 l1-1 c1)\n(unload-truck p6 t1 l1-1)\n(unload-truck p3 t1 l1-1)\n(fly-airplane a1 l1-0 l2-0)\n(unload-airplane p4 a1 l2-0)\n(unload-airplane p1 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p4 t2 l2-0)\n(load-truck p1 t2 l2-0)\n(drive-truck t2 l2-0 l2-1 c2)\n(unload-truck p1 t2 l2-1)\n(drive-truck t2 l2-1 l2-2 c2)\n(unload-truck p4 t2 l2-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 285,
            "example_instance_ids": [
                284
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_2_0, airplane_1 is at location_1_0, package_0 is at location_0_0, package_1 is at location_0_0, package_2 is at location_1_2, package_3 is at location_0_0, package_4 is at location_0_0, package_5 is at location_1_1, package_6 is at location_0_2, truck_0 is at location_0_0, truck_1 is at location_1_0, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_2_1, package_2 is at location_1_2, package_3 is at location_1_1, package_4 is at location_2_2, package_5 is at location_0_2 and package_6 is at location_1_1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nload package_5 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_5 from truck_1 at location_1_0\nload package_5 into airplane_1 at location_1_0\nfly airplane_1 from location_1_0 to location_0_0\nunload package_5 from airplane_1 at location_0_0\nload package_5 into truck_0 at location_0_0\nload package_4 into airplane_1 at location_0_0\nload package_3 into airplane_1 at location_0_0\nload package_1 into airplane_1 at location_0_0\nload package_0 into airplane_1 at location_0_0\ndrive truck_0 from location_0_0 to location_0_2 in city_0\nload package_6 into truck_0 at location_0_2\nunload package_5 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_0 in city_0\nunload package_6 from truck_0 at location_0_0\nload package_6 into airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\nload package_6 into truck_1 at location_1_0\nunload package_3 from airplane_1 at location_1_0\nload package_3 into truck_1 at location_1_0\ndrive truck_1 from location_1_0 to location_1_1 in city_1\nunload package_6 from truck_1 at location_1_1\nunload package_3 from truck_1 at location_1_1\nfly airplane_1 from location_1_0 to location_2_0\nunload package_4 from airplane_1 at location_2_0\nunload package_1 from airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_4 into truck_2 at location_2_0\nload package_1 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_1 in city_2\nunload package_1 from truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_2 in city_2\nunload package_4 from truck_2 at location_2_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_2 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(unload-truck p3 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n",
            "gold_label": "(load-truck p2 t2 l2-1)\n(drive-truck t2 l2-1 l2-0 c2)\n(load-truck p5 t2 l2-0)\n(drive-truck t2 l2-0 l2-2 c2)\n(unload-truck p5 t2 l2-2)\n(load-truck p3 t2 l2-2)\n(load-truck p1 t2 l2-2)\n(drive-truck t2 l2-2 l2-0 c2)\n(drive-truck t1 l1-2 l1-1 c1)\n(load-truck p0 t1 l1-1)\n(drive-truck t1 l1-1 l1-0 c1)\n(unload-truck p0 t1 l1-0)\n(load-airplane p0 a1 l1-0)\n(unload-truck p3 t2 l2-0)\n(fly-airplane a1 l1-0 l2-0)\n(load-airplane p6 a1 l2-0)\n(unload-airplane p0 a1 l2-0)\n(unload-truck p2 t2 l2-0)\n(unload-truck p1 t2 l2-0)\n(load-airplane p3 a1 l2-0)\n(load-airplane p2 a1 l2-0)\n(load-airplane p1 a1 l2-0)\n(fly-airplane a1 l2-0 l0-0)\n(unload-airplane p3 a1 l0-0)\n(unload-airplane p2 a1 l0-0)\n(unload-airplane p1 a1 l0-0)\n(fly-airplane a1 l0-0 l1-0)\n(unload-airplane p6 a1 l1-0)\n(drive-truck t0 l0-1 l0-0 c0)\n(load-truck p3 t0 l0-0)\n(load-truck p2 t0 l0-0)\n(load-truck p1 t0 l0-0)\n(drive-truck t0 l0-0 l0-1 c0)\n(unload-truck p2 t0 l0-1)\n(unload-truck p1 t0 l0-1)\n(drive-truck t0 l0-1 l0-2 c0)\n(unload-truck p3 t0 l0-2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "logistics",
            "instance_id": 286,
            "example_instance_ids": [
                285
            ],
            "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, location_2_0 is an airport, airplane_0 is at location_0_0, airplane_1 is at location_1_0, package_0 is at location_1_1, package_1 is at location_2_2, package_2 is at location_2_1, package_3 is at location_2_2, package_4 is at location_2_2, package_5 is at location_2_0, package_6 is at location_2_0, truck_0 is at location_0_1, truck_1 is at location_1_2, truck_2 is at location_2_1, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2 and location_2_2 is in the city city_2.\nMy goal is to have that package_0 is at location_2_0, package_1 is at location_0_1, package_2 is at location_0_1, package_3 is at location_0_2, package_4 is at location_2_2, package_5 is at location_2_2 and package_6 is at location_1_0.\n\nMy plan is as follows:\n\n[PLAN]\nload package_2 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_0 in city_2\nload package_5 into truck_2 at location_2_0\ndrive truck_2 from location_2_0 to location_2_2 in city_2\nunload package_5 from truck_2 at location_2_2\nload package_3 into truck_2 at location_2_2\nload package_1 into truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_0 in city_2\ndrive truck_1 from location_1_2 to location_1_1 in city_1\nload package_0 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_0 in city_1\nunload package_0 from truck_1 at location_1_0\nload package_0 into airplane_1 at location_1_0\nunload package_3 from truck_2 at location_2_0\nfly airplane_1 from location_1_0 to location_2_0\nload package_6 into airplane_1 at location_2_0\nunload package_0 from airplane_1 at location_2_0\nunload package_2 from truck_2 at location_2_0\nunload package_1 from truck_2 at location_2_0\nload package_3 into airplane_1 at location_2_0\nload package_2 into airplane_1 at location_2_0\nload package_1 into airplane_1 at location_2_0\nfly airplane_1 from location_2_0 to location_0_0\nunload package_3 from airplane_1 at location_0_0\nunload package_2 from airplane_1 at location_0_0\nunload package_1 from airplane_1 at location_0_0\nfly airplane_1 from location_0_0 to location_1_0\nunload package_6 from airplane_1 at location_1_0\ndrive truck_0 from location_0_1 to location_0_0 in city_0\nload package_3 into truck_0 at location_0_0\nload package_2 into truck_0 at location_0_0\nload package_1 into truck_0 at location_0_0\ndrive truck_0 from location_0_0 to location_0_1 in city_0\nunload package_2 from truck_0 at location_0_1\nunload package_1 from truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_2 in city_0\nunload package_3 from truck_0 at location_0_2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, location_1_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_1_0, truck_0 is at location_0_0, truck_1 is at location_1_0, location_0_0 is in the city city_0 and location_1_0 is in the city city_1.\nMy goal is to have that package_0 is at location_0_0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (fly-airplane a0 l0-0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p0 a0 l0-0)\n",
            "gold_label": "(fly-airplane a0 l0-0 l1-0)\n(load-airplane p0 a0 l1-0)\n(fly-airplane a0 l1-0 l0-0)\n(unload-airplane p0 a0 l0-0)\n"
        }
    ],
    [
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 363,
            "example_instance_ids": [
                362
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist2 to load crate2 into truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\ndrive truck1 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck1 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n",
            "gold_label": "(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 364,
            "example_instance_ids": [
                363
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck1 at depot2\ndrive truck1 from depot2 to depot0\nUse hoist0 to unload crate2 from truck1 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(lift hoist0 crate1 pallet0 depot0)\n(drive truck1 depot1 depot0)\n(drop hoist1 crate2 pallet1 depot1)\n(load hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 crate0 depot2)\n",
            "gold_label": "(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(lift hoist0 crate1 pallet0 depot0)\n(drive truck1 depot1 depot0)\n(drop hoist1 crate2 pallet1 depot1)\n(load hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 crate0 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 365,
            "example_instance_ids": [
                364
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist0 to lift crate1 from pallet0 at depot0\ndrive truck1 from depot1 to depot0\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist0 to load crate1 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist2 to drop crate1 to crate0 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate1 distributor0)\n(drive truck2 depot1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 crate1 depot1)\n",
            "gold_label": "(lift hoist3 crate2 crate1 distributor0)\n(drive truck2 depot1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 366,
            "example_instance_ids": [
                365
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate1 at distributor0\ndrive truck2 from depot1 to distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet0, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot2 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 crate2 depot2)\n",
            "gold_label": "(lift hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot2 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 367,
            "example_instance_ids": [
                366
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet0, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from pallet3 at distributor0\ndrive truck2 from depot2 to depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot2)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 crate0 depot2)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot2)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 crate0 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 368,
            "example_instance_ids": [
                367
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to depot2\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to unload crate0 from truck2 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to crate0 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 369,
            "example_instance_ids": [
                368
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 pallet3 distributor0)\n(lift hoist2 crate0 pallet2 depot2)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(load hoist1 crate1 truck0 depot1)\n(drive truck0 depot1 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist3 crate2 pallet3 distributor0)\n(lift hoist2 crate0 pallet2 depot2)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(load hoist1 crate1 truck0 depot1)\n(drive truck0 depot1 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 370,
            "example_instance_ids": [
                369
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist1 to load crate1 into truck0 at depot1\ndrive truck0 from depot1 to depot2\nUse hoist2 to unload crate1 from truck0 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate1 is on crate2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 crate2 depot0)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 crate2 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 371,
            "example_instance_ids": [
                370
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate1 is on crate2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to crate2 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n",
            "gold_label": "(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 372,
            "example_instance_ids": [
                371
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n",
            "gold_label": "(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 373,
            "example_instance_ids": [
                372
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate2, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate0 pallet1 depot1)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck0 depot0)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck0 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 crate2 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 crate0 depot0)\n",
            "gold_label": "(lift hoist1 crate0 pallet1 depot1)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck0 depot0)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck0 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 crate2 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 374,
            "example_instance_ids": [
                373
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate2, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck0 at depot0\nUse hoist1 to load crate0 into truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to unload crate2 from truck0 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to crate2 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\nUse hoist0 to drop crate1 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate0 depot1)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(load hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 crate2 depot2)\n",
            "gold_label": "(lift hoist1 crate2 crate0 depot1)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(load hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 375,
            "example_instance_ids": [
                374
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist1 to load crate2 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist3 to load crate1 into truck1 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist2 to drop crate1 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck0 depot0)\n(lift hoist1 crate0 pallet1 depot1)\n(drive truck0 depot0 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck0 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck0 distributor0 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck0 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist2 crate2 crate0 depot2)\n",
            "gold_label": "(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck0 depot0)\n(lift hoist1 crate0 pallet1 depot1)\n(drive truck0 depot0 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck0 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck0 distributor0 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck0 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist2 crate2 crate0 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 376,
            "example_instance_ids": [
                375
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck0 at depot0\nUse hoist1 to lift crate0 from pallet1 at depot1\ndrive truck0 from depot0 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck0 at distributor0\nUse hoist3 to unload crate1 from truck0 at distributor0\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate0 from truck2 at depot2\ndrive truck0 from distributor0 to depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck0 at depot2\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist2 to drop crate2 to crate0 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 pallet2 depot2)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck1 distributor0 depot2)\n(load hoist2 crate2 truck1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n",
            "gold_label": "(lift hoist2 crate2 pallet2 depot2)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck1 distributor0 depot2)\n(load hoist2 crate2 truck1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 377,
            "example_instance_ids": [
                376
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck1 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\ndrive truck1 from depot1 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to load crate2 into truck1 at depot2\nUse hoist2 to unload crate1 from truck1 at depot2\ndrive truck1 from depot2 to depot0\nUse hoist0 to unload crate2 from truck1 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist2 to drop crate1 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot1 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n",
            "gold_label": "(drive truck2 depot1 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 378,
            "example_instance_ids": [
                377
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot1 to depot2\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate1 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n",
            "gold_label": "(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 379,
            "example_instance_ids": [
                378
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate1 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet2 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n",
            "gold_label": "(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 380,
            "example_instance_ids": [
                379
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet2 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist2 to drop crate0 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate1 is on pallet3 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 pallet0 depot0)\n(drive truck2 depot2 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate1 distributor0)\n",
            "gold_label": "(lift hoist0 crate1 pallet0 depot0)\n(drive truck2 depot2 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate1 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 381,
            "example_instance_ids": [
                380
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate1 is on pallet3 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from pallet0 at depot0\ndrive truck2 from depot2 to depot0\nUse hoist0 to load crate1 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to crate1 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate0 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate0 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 crate2 distributor0)\n",
            "gold_label": "(lift hoist2 crate2 crate0 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate0 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 crate2 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 382,
            "example_instance_ids": [
                381
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate0 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to crate0 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to crate2 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate0 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(drive truck2 depot1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 crate2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 crate0 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(drive truck2 depot1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 crate2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 383,
            "example_instance_ids": [
                382
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate0 at depot0\nUse hoist2 to lift crate1 from pallet2 at depot2\ndrive truck2 from depot1 to depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to crate2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate0 pallet3 distributor0)\n(drive truck1 distributor0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist3 crate0 pallet3 distributor0)\n(drive truck1 distributor0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 384,
            "example_instance_ids": [
                383
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate0 from pallet3 at distributor0\ndrive truck1 from distributor0 to depot1\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to unload crate2 from truck1 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3 and crate1 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck1 depot2 depot1)\n(lift hoist0 crate1 pallet0 depot0)\n(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n",
            "gold_label": "(drive truck1 depot2 depot1)\n(lift hoist0 crate1 pallet0 depot0)\n(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 385,
            "example_instance_ids": [
                384
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3 and crate1 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck1 from depot2 to depot1\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\ndrive truck1 from depot1 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to load crate1 into truck2 at depot0\ndrive truck2 from depot0 to depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist2 crate1 pallet2 depot2)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist2 crate1 pallet2 depot2)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 386,
            "example_instance_ids": [
                385
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot0 to depot1\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist2 to lift crate1 from pallet2 at depot2\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on crate2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 crate1 depot1)\n",
            "gold_label": "(lift hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 387,
            "example_instance_ids": [
                386
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on crate2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to load crate2 into truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to crate2 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate0 pallet1 depot1)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drive truck1 depot0 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 crate1 depot1)\n",
            "gold_label": "(lift hoist1 crate0 pallet1 depot1)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drive truck1 depot0 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 388,
            "example_instance_ids": [
                387
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\ndrive truck1 from depot0 to depot1\nUse hoist1 to unload crate1 from truck1 at depot1\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist1 to drop crate2 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate2 pallet1 depot1)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(load hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 depot0)\n(unload hoist0 crate2 truck0 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate0 depot1)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate2 pallet1 depot1)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(load hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 depot0)\n(unload hoist0 crate2 truck0 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 389,
            "example_instance_ids": [
                388
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist1 to load crate2 into truck0 at depot1\ndrive truck0 from depot1 to depot0\nUse hoist0 to unload crate2 from truck0 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to load crate1 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate0 pallet3 distributor0)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck0 depot2)\n(drive truck0 depot2 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(lift hoist1 crate2 pallet1 depot1)\n(drive truck0 distributor0 depot0)\n(load hoist1 crate2 truck2 depot1)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n",
            "gold_label": "(lift hoist3 crate0 pallet3 distributor0)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck0 depot2)\n(drive truck0 depot2 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(lift hoist1 crate2 pallet1 depot1)\n(drive truck0 distributor0 depot0)\n(load hoist1 crate2 truck2 depot1)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 390,
            "example_instance_ids": [
                389
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck0 at depot2\ndrive truck0 from depot2 to distributor0\nUse hoist3 to load crate0 into truck0 at distributor0\nUse hoist3 to unload crate1 from truck0 at distributor0\nUse hoist1 to lift crate2 from pallet1 at depot1\ndrive truck0 from distributor0 to depot0\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist3 to drop crate1 to pallet3 at distributor0\ndrive truck2 from depot1 to depot0\nUse hoist0 to unload crate0 from truck0 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate0 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n",
            "gold_label": "(lift hoist2 crate2 crate0 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 391,
            "example_instance_ids": [
                390
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate0 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist2 crate2 crate1 depot2)\n",
            "gold_label": "(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist2 crate2 crate1 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 392,
            "example_instance_ids": [
                391
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist2 to drop crate2 to crate1 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate1 pallet1 depot1)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate1 pallet1 depot1)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 393,
            "example_instance_ids": [
                392
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist1 to drop crate0 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(lift hoist2 crate0 pallet2 depot2)\n(drive truck2 depot0 depot2)\n(lift hoist1 crate2 pallet1 depot1)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n",
            "gold_label": "(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(lift hoist2 crate0 pallet2 depot2)\n(drive truck2 depot0 depot2)\n(lift hoist1 crate2 pallet1 depot1)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 394,
            "example_instance_ids": [
                393
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist2 to lift crate0 from pallet2 at depot2\ndrive truck2 from depot0 to depot2\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist2 to load crate0 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to crate1 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to load crate2 into truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n",
            "gold_label": "(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 395,
            "example_instance_ids": [
                394
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate1 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 crate2 depot0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate1 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 crate2 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 396,
            "example_instance_ids": [
                395
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate1 at depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to crate2 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate0 pallet1 depot1)\n(drive truck2 depot1 depot0)\n(load hoist1 crate0 truck0 depot1)\n(drive truck0 depot1 depot2)\n(unload hoist2 crate0 truck0 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate0 pallet1 depot1)\n(drive truck2 depot1 depot0)\n(load hoist1 crate0 truck0 depot1)\n(drive truck0 depot1 depot2)\n(unload hoist2 crate0 truck0 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 397,
            "example_instance_ids": [
                396
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate0 from pallet1 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist1 to load crate0 into truck0 at depot1\ndrive truck0 from depot1 to depot2\nUse hoist2 to unload crate0 from truck0 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 crate1 depot2)\n",
            "gold_label": "(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 crate1 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 398,
            "example_instance_ids": [
                397
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate1 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to crate1 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet2 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n",
            "gold_label": "(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 399,
            "example_instance_ids": [
                398
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet2 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist2 to drop crate0 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n",
            "gold_label": "(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 400,
            "example_instance_ids": [
                399
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to unload crate1 from truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist2 to drop crate1 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck0 depot2)\n(unload hoist2 crate2 truck0 depot2)\n(drive truck0 depot2 depot1)\n(unload hoist1 crate1 truck0 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck0 depot2)\n(unload hoist2 crate2 truck0 depot2)\n(drive truck0 depot2 depot1)\n(unload hoist1 crate1 truck0 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 401,
            "example_instance_ids": [
                400
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck0 at depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck0 at depot2\nUse hoist2 to unload crate2 from truck0 at depot2\ndrive truck0 from depot2 to depot1\nUse hoist1 to unload crate1 from truck0 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist2 to drop crate2 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate0 depot0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 crate0 depot0)\n(drive truck2 distributor0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 402,
            "example_instance_ids": [
                401
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate0 at depot0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to load crate2 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate0 pallet1 depot1)\n(drive truck0 depot0 depot1)\n(load hoist1 crate0 truck0 depot1)\n(lift hoist0 crate2 pallet0 depot0)\n(drive truck0 depot1 depot0)\n(load hoist0 crate2 truck0 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drive truck0 depot0 distributor0)\n(drop hoist0 crate0 pallet0 depot0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate0 pallet1 depot1)\n(drive truck0 depot0 depot1)\n(load hoist1 crate0 truck0 depot1)\n(lift hoist0 crate2 pallet0 depot0)\n(drive truck0 depot1 depot0)\n(load hoist0 crate2 truck0 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drive truck0 depot0 distributor0)\n(drop hoist0 crate0 pallet0 depot0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 403,
            "example_instance_ids": [
                402
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate0 from pallet1 at depot1\ndrive truck0 from depot0 to depot1\nUse hoist1 to load crate0 into truck0 at depot1\nUse hoist0 to lift crate2 from pallet0 at depot0\ndrive truck0 from depot1 to depot0\nUse hoist0 to load crate2 into truck0 at depot0\nUse hoist0 to unload crate0 from truck0 at depot0\ndrive truck0 from depot0 to distributor0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck0 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drive truck2 depot1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 crate1 depot0)\n",
            "gold_label": "(drive truck2 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drive truck2 depot1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 404,
            "example_instance_ids": [
                403
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot2 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate1 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck0 distributor0)\n(drive truck0 distributor0 depot0)\n(lift hoist0 crate2 crate0 depot0)\n(load hoist0 crate2 truck0 depot0)\n(unload hoist0 crate1 truck0 depot0)\n(drop hoist0 crate1 crate0 depot0)\n",
            "gold_label": "(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck0 distributor0)\n(drive truck0 distributor0 depot0)\n(lift hoist0 crate2 crate0 depot0)\n(load hoist0 crate2 truck0 depot0)\n(unload hoist0 crate1 truck0 depot0)\n(drop hoist0 crate1 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 405,
            "example_instance_ids": [
                404
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate1 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck0 at distributor0\ndrive truck0 from distributor0 to depot0\nUse hoist0 to lift crate2 from crate0 at depot0\nUse hoist0 to load crate2 into truck0 at depot0\nUse hoist0 to unload crate1 from truck0 at depot0\nUse hoist0 to drop crate1 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n",
            "gold_label": "(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 406,
            "example_instance_ids": [
                405
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck1 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to depot1\nUse hoist1 to unload crate0 from truck1 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate1 depot1)\n(drive truck1 depot0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate2 crate0 distributor0)\n",
            "gold_label": "(lift hoist1 crate2 crate1 depot1)\n(drive truck1 depot0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate2 crate0 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 407,
            "example_instance_ids": [
                406
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate1 at depot1\ndrive truck1 from depot0 to depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to unload crate1 from truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist3 to drop crate2 to crate0 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck1 distributor0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 crate1 depot1)\n",
            "gold_label": "(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck1 distributor0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 408,
            "example_instance_ids": [
                407
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\ndrive truck1 from depot1 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck1 at depot2\ndrive truck1 from depot2 to depot1\nUse hoist1 to unload crate1 from truck1 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist1 to drop crate2 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate0 depot1)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 409,
            "example_instance_ids": [
                408
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet1 and crate1 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 410,
            "example_instance_ids": [
                409
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet1 and crate1 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot0 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n",
            "gold_label": "(drive truck2 depot0 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 411,
            "example_instance_ids": [
                410
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot0 to depot2\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0, crate1 is on crate2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate1 crate2 distributor0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate1 crate2 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 412,
            "example_instance_ids": [
                411
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0, crate1 is on crate2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist3 to drop crate1 to crate2 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist3 crate2 crate1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 crate2 distributor0)\n",
            "gold_label": "(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist3 crate2 crate1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 crate2 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 413,
            "example_instance_ids": [
                412
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck1 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\nUse hoist3 to drop crate2 to crate1 at distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to crate2 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(load hoist2 crate2 truck1 depot2)\n(drive truck1 depot2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(load hoist2 crate2 truck1 depot2)\n(drive truck1 depot2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 414,
            "example_instance_ids": [
                413
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to load crate2 into truck1 at depot2\ndrive truck1 from depot2 to depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate2 from truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to crate1 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck0 depot0)\n(drive truck0 depot0 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(drive truck2 depot1 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 crate2 depot2)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck0 depot0)\n(drive truck0 depot0 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(drive truck2 depot1 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 415,
            "example_instance_ids": [
                414
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck0 at depot0\ndrive truck0 from depot0 to depot1\nUse hoist1 to unload crate0 from truck0 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 crate0 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 crate0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 crate0 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 416,
            "example_instance_ids": [
                415
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate0 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate2 from truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist3 to drop crate1 to crate0 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck0 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck0 depot0)\n(drive truck0 depot0 depot1)\n(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(unload hoist1 crate1 truck0 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 crate1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 crate0 depot1)\n",
            "gold_label": "(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck0 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck0 depot0)\n(drive truck0 depot0 depot1)\n(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(unload hoist1 crate1 truck0 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 crate1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 417,
            "example_instance_ids": [
                416
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck0 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck0 at depot0\ndrive truck0 from depot0 to depot1\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to unload crate1 from truck0 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate0 from truck0 at depot1\nUse hoist1 to drop crate0 to crate1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist1 to drop crate2 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate0 depot1)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist1 crate1 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 crate2 depot2)\n",
            "gold_label": "(lift hoist1 crate2 crate0 depot1)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist1 crate1 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 418,
            "example_instance_ids": [
                417
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate0 from truck2 at depot2\nUse hoist2 to drop crate0 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck0 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck0 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n",
            "gold_label": "(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck0 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck0 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 419,
            "example_instance_ids": [
                418
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck0 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck0 at depot1\ndrive truck0 from depot1 to distributor0\nUse hoist3 to unload crate1 from truck0 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate0 from truck0 at distributor0\nUse hoist3 to drop crate0 to crate1 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot1 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(drive truck2 depot1 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n",
            "gold_label": "(lift hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot1 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(drive truck2 depot1 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 420,
            "example_instance_ids": [
                419
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate0 from pallet3 at distributor0\ndrive truck2 from depot1 to distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate1 distributor0)\n(drive truck1 depot1 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist2 crate2 pallet2 depot2)\n",
            "gold_label": "(lift hoist3 crate2 crate1 distributor0)\n(drive truck1 depot1 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist2 crate2 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 421,
            "example_instance_ids": [
                420
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate1 at distributor0\ndrive truck1 from depot1 to distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist2 to drop crate2 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet3 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n",
            "gold_label": "(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 422,
            "example_instance_ids": [
                421
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet3 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck1 at depot2\ndrive truck1 from depot2 to depot0\nUse hoist0 to unload crate1 from truck1 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist1 crate0 crate1 depot1)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist1 crate0 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 423,
            "example_instance_ids": [
                422
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\nUse hoist1 to drop crate0 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot1 depot0)\n(lift hoist2 crate0 pallet2 depot2)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drive truck2 depot0 depot2)\n(load hoist2 crate0 truck2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(drive truck2 depot1 depot0)\n(lift hoist2 crate0 pallet2 depot2)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drive truck2 depot0 depot2)\n(load hoist2 crate0 truck2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 424,
            "example_instance_ids": [
                423
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot1 to depot0\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\ndrive truck2 from depot0 to depot2\nUse hoist2 to load crate0 into truck2 at depot2\nUse hoist2 to unload crate1 from truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 crate2 depot2)\n",
            "gold_label": "(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 425,
            "example_instance_ids": [
                424
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot1)\n(load hoist1 crate2 truck1 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot1)\n(load hoist1 crate2 truck1 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 426,
            "example_instance_ids": [
                425
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to unload crate0 from truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist2 to drop crate2 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet3.\nMy goal is to have that crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 distributor0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n",
            "gold_label": "(drive truck2 distributor0 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 427,
            "example_instance_ids": [
                426
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet3.\nMy goal is to have that crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from distributor0 to depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate0 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist2 crate2 crate0 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 428,
            "example_instance_ids": [
                427
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate0 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet2, crate1 is on crate2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 pallet2 depot2)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(load hoist2 crate2 truck1 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist0 crate1 crate2 depot0)\n",
            "gold_label": "(lift hoist2 crate2 pallet2 depot2)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(load hoist2 crate2 truck1 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist0 crate1 crate2 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 429,
            "example_instance_ids": [
                428
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet2, crate1 is on crate2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to load crate2 into truck1 at depot2\nUse hoist2 to unload crate0 from truck1 at depot2\ndrive truck1 from depot2 to depot0\nUse hoist0 to unload crate2 from truck1 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist0 to drop crate1 to crate2 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist2 crate0 crate1 depot2)\n",
            "gold_label": "(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist2 crate0 crate1 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 430,
            "example_instance_ids": [
                429
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist2 to unload crate0 from truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist2 to drop crate0 to crate1 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot2 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n",
            "gold_label": "(lift hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot2 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 431,
            "example_instance_ids": [
                430
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from pallet3 at distributor0\ndrive truck2 from depot2 to distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 pallet2 depot2)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist0 crate2 crate1 depot0)\n",
            "gold_label": "(lift hoist2 crate1 pallet2 depot2)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist0 crate2 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 432,
            "example_instance_ids": [
                431
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate0 from truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist0 to drop crate2 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot0 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot0 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 433,
            "example_instance_ids": [
                432
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist2 crate1 truck0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drive truck0 depot2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(load hoist3 crate0 truck0 distributor0)\n(drive truck0 distributor0 depot1)\n(unload hoist1 crate1 truck0 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 crate1 depot1)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist2 crate1 truck0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drive truck0 depot2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(load hoist3 crate0 truck0 distributor0)\n(drive truck0 distributor0 depot1)\n(unload hoist1 crate1 truck0 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 434,
            "example_instance_ids": [
                433
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist0 to load crate2 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist2 to load crate1 into truck0 at depot2\nUse hoist2 to unload crate2 from truck1 at depot2\ndrive truck0 from depot2 to distributor0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to load crate0 into truck0 at distributor0\ndrive truck0 from distributor0 to depot1\nUse hoist1 to unload crate1 from truck0 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate0 from truck0 at depot1\nUse hoist1 to drop crate0 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist1 crate1 crate0 depot1)\n",
            "gold_label": "(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist1 crate1 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 435,
            "example_instance_ids": [
                434
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate1 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist3 to drop crate2 to pallet3 at distributor0\nUse hoist1 to drop crate1 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 crate0 depot2)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n",
            "gold_label": "(lift hoist2 crate1 crate0 depot2)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 436,
            "example_instance_ids": [
                435
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist1 to drop crate1 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 437,
            "example_instance_ids": [
                436
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n",
            "gold_label": "(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 438,
            "example_instance_ids": [
                437
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck1 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to depot1\nUse hoist1 to unload crate1 from truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate1 depot0)\n(drive truck1 depot1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 crate1 depot0)\n(drive truck1 depot1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 439,
            "example_instance_ids": [
                438
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate1 at depot0\ndrive truck1 from depot1 to depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate0 from truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet0 and crate1 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck0 depot2)\n(drive truck0 depot2 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck0 depot2)\n(drive truck0 depot2 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 440,
            "example_instance_ids": [
                439
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet0 and crate1 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck0 at depot2\ndrive truck0 from depot2 to depot0\nUse hoist0 to unload crate0 from truck0 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 pallet0 depot0)\n(lift hoist1 crate2 pallet1 depot1)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drive truck0 distributor0 depot1)\n(load hoist0 crate1 truck2 depot0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate0 depot1)\n",
            "gold_label": "(lift hoist0 crate1 pallet0 depot0)\n(lift hoist1 crate2 pallet1 depot1)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drive truck0 distributor0 depot1)\n(load hoist0 crate1 truck2 depot0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 441,
            "example_instance_ids": [
                440
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist1 to load crate2 into truck0 at depot1\ndrive truck0 from depot1 to distributor0\nUse hoist3 to load crate0 into truck0 at distributor0\nUse hoist3 to unload crate2 from truck0 at distributor0\ndrive truck0 from distributor0 to depot1\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist3 to drop crate2 to pallet3 at distributor0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate0 from truck0 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet0.\nMy goal is to have that crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 442,
            "example_instance_ids": [
                441
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet0.\nMy goal is to have that crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\ndrive truck2 from distributor0 to depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot0 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist2 crate0 crate1 depot2)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot0 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist2 crate0 crate1 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 443,
            "example_instance_ids": [
                442
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist3 to lift crate0 from pallet3 at distributor0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to unload crate0 from truck2 at depot2\nUse hoist3 to drop crate2 to pallet3 at distributor0\nUse hoist2 to drop crate0 to crate1 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1 and crate1 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n",
            "gold_label": "(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 444,
            "example_instance_ids": [
                443
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1 and crate1 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck0 depot0 distributor0)\n(lift hoist2 crate1 pallet2 depot2)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck0 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drive truck0 distributor0 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n",
            "gold_label": "(drive truck0 depot0 distributor0)\n(lift hoist2 crate1 pallet2 depot2)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck0 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drive truck0 distributor0 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 445,
            "example_instance_ids": [
                444
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck0 from depot0 to distributor0\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck0 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck0 at distributor0\nUse hoist3 to unload crate2 from truck0 at distributor0\ndrive truck0 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck0 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist3 to drop crate2 to pallet3 at distributor0\ndrive truck2 from depot0 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on crate2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 crate0 depot1)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(drive truck1 distributor0 depot1)\n(load hoist1 crate1 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drop hoist1 crate0 crate2 depot1)\n",
            "gold_label": "(lift hoist1 crate1 crate0 depot1)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(drive truck1 distributor0 depot1)\n(load hoist1 crate1 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drop hoist1 crate0 crate2 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 446,
            "example_instance_ids": [
                445
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on crate2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\ndrive truck1 from distributor0 to depot1\nUse hoist1 to load crate1 into truck1 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist1 to unload crate0 from truck1 at depot1\nUse hoist1 to drop crate0 to crate2 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 distributor0 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate0 depot1)\n",
            "gold_label": "(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 distributor0 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 447,
            "example_instance_ids": [
                446
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate1 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck0 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck0 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck0 depot2)\n(drive truck0 depot2 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist1 crate2 crate0 depot1)\n",
            "gold_label": "(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck0 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck0 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck0 depot2)\n(drive truck0 depot2 depot1)\n(unload hoist1 crate0 truck0 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist1 crate2 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 448,
            "example_instance_ids": [
                447
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck0 at depot2\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck0 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck0 at depot2\ndrive truck0 from depot2 to depot1\nUse hoist1 to unload crate0 from truck0 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck0 at depot1\ndrive truck0 from depot1 to distributor0\nUse hoist3 to unload crate1 from truck0 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist1 to drop crate2 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drive truck1 depot1 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drive truck1 depot1 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 449,
            "example_instance_ids": [
                448
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate1 depot0)\n",
            "gold_label": "(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 450,
            "example_instance_ids": [
                449
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on pallet3.\nMy goal is to have that crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate1 pallet1 depot1)\n(drive truck2 depot2 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n(drop hoist2 crate1 crate2 depot2)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(lift hoist1 crate1 pallet1 depot1)\n(drive truck2 depot2 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n(drop hoist2 crate1 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 451,
            "example_instance_ids": [
                450
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist1 to lift crate1 from pallet1 at depot1\ndrive truck2 from depot2 to depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist3 to drop crate0 to pallet3 at distributor0\nUse hoist2 to drop crate1 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drive truck2 distributor0 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate1 depot1)\n",
            "gold_label": "(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drive truck2 distributor0 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 452,
            "example_instance_ids": [
                451
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot0 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist1 crate0 pallet1 depot1)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(drop hoist1 crate1 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 crate0 depot2)\n",
            "gold_label": "(drive truck2 depot0 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist1 crate0 pallet1 depot1)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(drop hoist1 crate1 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 crate0 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 453,
            "example_instance_ids": [
                452
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot0 to distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist1 to lift crate0 from pallet1 at depot1\ndrive truck2 from distributor0 to depot1\nUse hoist1 to load crate0 into truck2 at depot1\nUse hoist1 to unload crate1 from truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to unload crate0 from truck2 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to crate0 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drive truck1 depot2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n",
            "gold_label": "(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drive truck1 depot2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 454,
            "example_instance_ids": [
                453
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\ndrive truck1 from depot2 to depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to unload crate2 from truck1 at depot0\ndrive truck1 from depot0 to depot1\nUse hoist1 to unload crate1 from truck1 at depot1\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist1 to drop crate1 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0 and crate1 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck1 distributor0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n",
            "gold_label": "(drive truck1 distributor0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck1 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 455,
            "example_instance_ids": [
                454
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet0 and crate1 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck1 from distributor0 to depot1\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck1 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to unload crate0 from truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist2 to drop crate1 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate1 pallet3 distributor0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drive truck2 depot2 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate1 depot0)\n",
            "gold_label": "(lift hoist3 crate1 pallet3 distributor0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drive truck2 depot2 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 456,
            "example_instance_ids": [
                455
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate1 from pallet3 at distributor0\ndrive truck2 from depot0 to depot1\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate0 from truck2 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate1 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate2 crate0 depot0)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 crate1 depot0)\n",
            "gold_label": "(lift hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate2 crate0 depot0)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 457,
            "example_instance_ids": [
                456
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate1 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist0 to lift crate2 from crate0 at depot0\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot2 distributor0)\n(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist0 crate0 crate2 depot0)\n",
            "gold_label": "(drive truck2 depot2 distributor0)\n(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist0 crate0 crate2 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 458,
            "example_instance_ids": [
                457
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot2 to distributor0\nUse hoist3 to lift crate2 from crate1 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist0 to drop crate0 to crate2 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck0 depot2)\n(drive truck0 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist3 crate0 truck0 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n",
            "gold_label": "(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck0 depot2)\n(drive truck0 depot2 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot0)\n(unload hoist3 crate0 truck0 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 459,
            "example_instance_ids": [
                458
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck0 at depot2\ndrive truck0 from depot2 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot0\nUse hoist3 to unload crate0 from truck0 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(lift hoist3 crate2 crate1 distributor0)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(lift hoist3 crate2 crate1 distributor0)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 460,
            "example_instance_ids": [
                459
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist3 to lift crate2 from crate1 at distributor0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to unload crate1 from truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n",
            "gold_label": "(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 crate0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate1 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 461,
            "example_instance_ids": [
                460
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from crate0 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist1 to drop crate1 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 462,
            "example_instance_ids": [
                461
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to unload crate2 from truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck0 distributor0 depot0)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drop hoist0 crate0 crate2 depot0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck0 depot1)\n(drive truck0 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck0 distributor0)\n(unload hoist3 crate1 truck0 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck0 distributor0 depot0)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck0 depot0)\n(drop hoist0 crate0 crate2 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 463,
            "example_instance_ids": [
                462
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck0 at depot1\ndrive truck0 from depot1 to distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck0 at distributor0\nUse hoist3 to unload crate1 from truck0 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\ndrive truck0 from distributor0 to depot0\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck0 at depot0\nUse hoist0 to drop crate0 to crate2 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet2 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist0 crate1 truck0 depot0)\n(drive truck0 depot0 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(drop hoist2 crate2 crate1 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 crate2 depot2)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist0 crate1 truck0 depot0)\n(drive truck0 depot0 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(drop hoist2 crate1 pallet2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot2)\n(drop hoist2 crate2 crate1 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 464,
            "example_instance_ids": [
                463
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet2 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist1 to load crate2 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist0 to load crate1 into truck0 at depot0\ndrive truck0 from depot0 to depot2\nUse hoist2 to unload crate1 from truck0 at depot2\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to drop crate2 to crate1 at depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot2 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist0 crate0 crate1 depot0)\n",
            "gold_label": "(drive truck2 depot2 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist0 crate0 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 465,
            "example_instance_ids": [
                464
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot2, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot2 to depot1\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist0 to drop crate0 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(lift hoist2 crate1 pallet2 depot2)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(lift hoist2 crate1 pallet2 depot2)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drive truck2 depot1 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 466,
            "example_instance_ids": [
                465
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist2 to lift crate1 from pallet2 at depot2\ndrive truck1 from depot0 to distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist3 to drop crate2 to pallet3 at distributor0\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate1 pallet3 distributor0)\n(lift hoist1 crate0 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(load hoist1 crate0 truck1 depot1)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate1 depot1)\n",
            "gold_label": "(lift hoist3 crate1 pallet3 distributor0)\n(lift hoist1 crate0 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(load hoist1 crate0 truck1 depot1)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 467,
            "example_instance_ids": [
                466
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate1 is on pallet1 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist3 to load crate1 into truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist1 to load crate0 into truck1 at depot1\nUse hoist2 to load crate2 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to crate1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(load hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck1 distributor0 depot2)\n(unload hoist2 crate2 truck0 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 crate2 depot2)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(load hoist1 crate2 truck0 depot1)\n(drive truck0 depot1 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck1 distributor0 depot2)\n(unload hoist2 crate2 truck0 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 468,
            "example_instance_ids": [
                467
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist1 to load crate2 into truck0 at depot1\ndrive truck0 from depot1 to depot2\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\ndrive truck1 from distributor0 to depot2\nUse hoist2 to unload crate2 from truck0 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 469,
            "example_instance_ids": [
                468
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet1 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist1 to drop crate0 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drive truck2 depot1 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(drive truck2 depot1 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 470,
            "example_instance_ids": [
                469
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n",
            "gold_label": "(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n(drop hoist2 crate2 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 471,
            "example_instance_ids": [
                470
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\ndrive truck1 from depot0 to depot1\nUse hoist1 to unload crate0 from truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist2 to drop crate2 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 crate0 depot2)\n(drive truck2 depot1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate1 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 crate2 distributor0)\n",
            "gold_label": "(lift hoist2 crate2 crate0 depot2)\n(drive truck2 depot1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate1 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 crate2 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 472,
            "example_instance_ids": [
                471
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on crate1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from crate0 at depot2\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to crate1 at distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to crate2 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate0 pallet2 depot2)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck0 depot0)\n(drive truck0 depot0 depot2)\n(load hoist2 crate0 truck2 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(drive truck2 depot2 depot1)\n(drop hoist2 crate1 pallet2 depot2)\n(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate0 depot1)\n",
            "gold_label": "(lift hoist2 crate0 pallet2 depot2)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck0 depot0)\n(drive truck0 depot0 depot2)\n(load hoist2 crate0 truck2 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(drive truck2 depot2 depot1)\n(drop hoist2 crate1 pallet2 depot2)\n(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist1 crate2 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 473,
            "example_instance_ids": [
                472
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck0 at depot0\ndrive truck0 from depot0 to depot2\nUse hoist2 to load crate0 into truck2 at depot2\nUse hoist2 to unload crate1 from truck0 at depot2\ndrive truck2 from depot2 to depot1\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist1 to drop crate2 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot1)\n(load hoist1 crate2 truck1 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drive truck1 depot1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist1 crate0 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 474,
            "example_instance_ids": [
                473
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\ndrive truck1 from depot0 to depot1\nUse hoist1 to load crate2 into truck1 at depot1\nUse hoist1 to unload crate0 from truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to unload crate2 from truck1 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist1 to drop crate0 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate1 crate0 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate1 crate0 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 475,
            "example_instance_ids": [
                474
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to drop crate1 to crate0 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck0 depot0)\n(drive truck0 depot0 depot1)\n(unload hoist1 crate2 truck0 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck0 depot0)\n(drive truck0 depot0 depot1)\n(unload hoist1 crate2 truck0 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist3 crate1 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 476,
            "example_instance_ids": [
                475
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck0 at depot0\ndrive truck0 from depot0 to depot1\nUse hoist1 to unload crate2 from truck0 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist3 to drop crate1 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 pallet2 depot2)\n(drive truck2 depot0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n",
            "gold_label": "(lift hoist2 crate1 pallet2 depot2)\n(drive truck2 depot0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 477,
            "example_instance_ids": [
                476
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate1 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from pallet2 at depot2\ndrive truck2 from depot0 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 crate2 depot2)\n",
            "gold_label": "(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(lift hoist3 crate2 pallet3 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 crate2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 478,
            "example_instance_ids": [
                477
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet1, crate1 is on crate2 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to lift crate2 from pallet3 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to crate2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 479,
            "example_instance_ids": [
                478
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate1.\nMy goal is to have that crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate1 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist0 crate1 pallet0 depot0)\n(drive truck1 distributor0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n",
            "gold_label": "(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(lift hoist0 crate1 pallet0 depot0)\n(drive truck1 distributor0 depot0)\n(load hoist0 crate1 truck1 depot0)\n(unload hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 480,
            "example_instance_ids": [
                479
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\nUse hoist0 to lift crate1 from pallet0 at depot0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to load crate1 into truck1 at depot0\nUse hoist0 to unload crate2 from truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to crate1 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(lift hoist1 crate1 pallet1 depot1)\n(drive truck1 depot2 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist0 crate0 crate1 depot0)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(lift hoist1 crate1 pallet1 depot1)\n(drive truck1 depot2 depot1)\n(load hoist1 crate1 truck1 depot1)\n(drive truck1 depot1 depot0)\n(load hoist0 crate2 truck1 depot0)\n(unload hoist0 crate1 truck1 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n(drop hoist0 crate0 crate1 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 481,
            "example_instance_ids": [
                480
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet0.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\nUse hoist1 to lift crate1 from pallet1 at depot1\ndrive truck1 from depot2 to depot1\nUse hoist1 to load crate1 into truck1 at depot1\ndrive truck1 from depot1 to depot0\nUse hoist0 to load crate2 into truck1 at depot0\nUse hoist0 to unload crate1 from truck1 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\nUse hoist0 to drop crate0 to crate1 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate1 pallet2 depot2)\n(lift hoist1 crate2 pallet1 depot1)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(load hoist1 crate2 truck1 depot1)\n(drive truck1 depot1 depot2)\n(drive truck2 depot0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist2 crate2 crate0 depot2)\n",
            "gold_label": "(lift hoist2 crate1 pallet2 depot2)\n(lift hoist1 crate2 pallet1 depot1)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(load hoist1 crate2 truck1 depot1)\n(drive truck1 depot1 depot2)\n(drive truck2 depot0 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist2 crate0 pallet2 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist3 crate1 pallet3 distributor0)\n(drop hoist2 crate2 crate0 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 482,
            "example_instance_ids": [
                481
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet3 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist1 to load crate2 into truck1 at depot1\ndrive truck1 from depot1 to depot2\ndrive truck2 from depot0 to depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate0 from truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist2 to drop crate2 to crate0 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate1 crate0 distributor0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate1 crate0 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 483,
            "example_instance_ids": [
                482
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to unload crate2 from truck2 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to drop crate1 to crate0 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 484,
            "example_instance_ids": [
                483
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet1.\nMy goal is to have that crate0 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot0 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n",
            "gold_label": "(drive truck2 depot0 depot2)\n(lift hoist2 crate2 crate1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist3 crate0 crate1 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 485,
            "example_instance_ids": [
                484
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot2, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet1 is clear, crate0 is on pallet3, crate1 is on pallet2 and crate2 is on crate1.\nMy goal is to have that crate0 is on crate1, crate1 is on pallet3 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot0 to depot2\nUse hoist2 to lift crate2 from crate1 at depot2\nUse hoist2 to load crate2 into truck2 at depot2\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\nUse hoist2 to unload crate2 from truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist3 to drop crate0 to crate1 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet3 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate1 pallet1 depot1)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n",
            "gold_label": "(lift hoist1 crate1 pallet1 depot1)\n(drive truck2 distributor0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 pallet0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 486,
            "example_instance_ids": [
                485
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot1, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet0 is clear, crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet3 and crate1 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate1 from pallet1 at depot1\ndrive truck2 from distributor0 to depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to pallet0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n(drive truck2 depot1 distributor0)\n(lift hoist3 crate2 crate0 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drive truck2 distributor0 depot2)\n(unload hoist2 crate0 truck2 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 487,
            "example_instance_ids": [
                486
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet2, crate1 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\ndrive truck2 from depot1 to distributor0\nUse hoist3 to lift crate2 from crate0 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\ndrive truck2 from distributor0 to depot2\nUse hoist2 to unload crate0 from truck2 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck0 depot1)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(drive truck0 depot1 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate2 truck0 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 crate2 depot0)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck0 depot1)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(drive truck0 depot1 depot0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(unload hoist3 crate1 truck1 distributor0)\n(drop hoist3 crate1 pallet3 distributor0)\n(drive truck1 distributor0 depot0)\n(unload hoist0 crate2 truck0 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck1 depot0)\n(drop hoist0 crate0 crate2 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 488,
            "example_instance_ids": [
                487
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet1.\nMy goal is to have that crate0 is on crate2, crate1 is on pallet3 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist1 to load crate2 into truck0 at depot1\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\ndrive truck0 from depot1 to depot0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\nUse hoist3 to unload crate1 from truck1 at distributor0\nUse hoist3 to drop crate1 to pallet3 at distributor0\ndrive truck1 from distributor0 to depot0\nUse hoist0 to unload crate2 from truck0 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck1 at depot0\nUse hoist0 to drop crate0 to crate2 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate2, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate2 pallet2 depot2)\n(drive truck2 distributor0 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 crate2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 crate0 depot0)\n",
            "gold_label": "(lift hoist2 crate2 pallet2 depot2)\n(drive truck2 distributor0 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(load hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 depot0)\n(lift hoist0 crate1 pallet0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 pallet0 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 crate2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drop hoist0 crate1 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 489,
            "example_instance_ids": [
                488
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet0 and crate2 is on pallet2.\nMy goal is to have that crate0 is on crate2, crate1 is on crate0 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate2 from pallet2 at depot2\ndrive truck2 from distributor0 to depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to load crate2 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to lift crate1 from pallet0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to crate2 at depot0\nUse hoist0 to unload crate1 from truck2 at depot0\nUse hoist0 to drop crate1 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot0 depot1)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n",
            "gold_label": "(drive truck2 depot0 depot1)\n(lift hoist1 crate1 crate0 depot1)\n(load hoist1 crate1 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(drop hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drop hoist0 crate2 crate0 depot0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 490,
            "example_instance_ids": [
                489
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot1, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet0, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot0 to depot1\nUse hoist1 to lift crate1 from crate0 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate1 from truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\nUse hoist0 to drop crate2 to crate0 at depot0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot1 depot2)\n(lift hoist0 crate2 pallet0 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist1 crate2 crate0 depot1)\n",
            "gold_label": "(drive truck2 depot1 depot2)\n(lift hoist0 crate2 pallet0 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(load hoist2 crate1 truck2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate2 truck2 depot0)\n(unload hoist0 crate1 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drop hoist0 crate1 pallet0 depot0)\n(drop hoist1 crate2 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 491,
            "example_instance_ids": [
                490
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet0 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot1 to depot2\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist2 to load crate1 into truck2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to unload crate1 from truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate2 from truck2 at depot1\nUse hoist0 to drop crate1 to pallet0 at depot0\nUse hoist1 to drop crate2 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 depot0 distributor0)\n(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate0 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 crate2 distributor0)\n",
            "gold_label": "(drive truck2 depot0 distributor0)\n(lift hoist3 crate2 crate1 distributor0)\n(load hoist3 crate2 truck2 distributor0)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(unload hoist3 crate2 truck2 distributor0)\n(drop hoist3 crate2 crate0 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 crate2 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 492,
            "example_instance_ids": [
                491
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot0, truck1 is at depot1, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet0 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from depot0 to distributor0\nUse hoist3 to lift crate2 from crate1 at distributor0\nUse hoist3 to load crate2 into truck2 at distributor0\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck2 at distributor0\nUse hoist3 to drop crate2 to crate0 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to crate2 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate0 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drive truck2 depot2 depot0)\n(load hoist0 crate0 truck2 depot0)\n(unload hoist0 crate2 truck2 depot0)\n(drive truck2 depot0 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist0 crate2 pallet0 depot0)\n(drop hoist3 crate0 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 493,
            "example_instance_ids": [
                492
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\ndrive truck2 from depot2 to depot0\nUse hoist0 to load crate0 into truck2 at depot0\nUse hoist0 to unload crate2 from truck2 at depot0\ndrive truck2 from depot0 to distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist0 to drop crate2 to pallet0 at depot0\nUse hoist3 to drop crate0 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (drive truck2 distributor0 depot0)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 crate0 distributor0)\n",
            "gold_label": "(drive truck2 distributor0 depot0)\n(lift hoist0 crate2 crate1 depot0)\n(load hoist0 crate2 truck2 depot0)\n(lift hoist0 crate1 crate0 depot0)\n(load hoist0 crate1 truck2 depot0)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot2)\n(unload hoist2 crate2 truck2 depot2)\n(drive truck2 depot2 distributor0)\n(unload hoist3 crate0 truck2 distributor0)\n(drop hoist2 crate2 pallet2 depot2)\n(drop hoist3 crate0 pallet3 distributor0)\n(unload hoist3 crate1 truck2 distributor0)\n(drop hoist3 crate1 crate0 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 494,
            "example_instance_ids": [
                493
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at distributor0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate2 is clear, pallet1 is clear, pallet2 is clear, pallet3 is clear, crate0 is on pallet0, crate1 is on crate0 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\ndrive truck2 from distributor0 to depot0\nUse hoist0 to lift crate2 from crate1 at depot0\nUse hoist0 to load crate2 into truck2 at depot0\nUse hoist0 to lift crate1 from crate0 at depot0\nUse hoist0 to load crate1 into truck2 at depot0\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to depot2\nUse hoist2 to unload crate2 from truck2 at depot2\ndrive truck2 from depot2 to distributor0\nUse hoist3 to unload crate0 from truck2 at distributor0\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to drop crate0 to pallet3 at distributor0\nUse hoist3 to unload crate1 from truck2 at distributor0\nUse hoist3 to drop crate1 to crate0 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck0 depot2)\n(drive truck0 depot2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck2 depot0)\n(drive truck2 depot0 depot1)\n(unload hoist1 crate0 truck2 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(lift hoist2 crate2 pallet2 depot2)\n(load hoist2 crate2 truck0 depot2)\n(drive truck0 depot2 distributor0)\n(lift hoist3 crate1 pallet3 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 495,
            "example_instance_ids": [
                494
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at distributor0, crate2 is at depot2, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet3 and crate2 is on pallet2.\nMy goal is to have that crate0 is on pallet1 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck2 at depot0\ndrive truck2 from depot0 to depot1\nUse hoist1 to unload crate0 from truck2 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist2 to lift crate2 from pallet2 at depot2\nUse hoist2 to load crate2 into truck0 at depot2\ndrive truck0 from depot2 to distributor0\nUse hoist3 to lift crate1 from pallet3 at distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to unload crate2 from truck0 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet2, crate1 is on crate2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate2 pallet3 distributor0)\n(drive truck1 depot2 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drive truck1 depot2 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(drive truck1 distributor0 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist1 crate1 crate2 depot1)\n",
            "gold_label": "(lift hoist3 crate2 pallet3 distributor0)\n(drive truck1 depot2 depot0)\n(lift hoist2 crate1 pallet2 depot2)\n(lift hoist0 crate0 pallet0 depot0)\n(load hoist0 crate0 truck1 depot0)\n(drive truck1 depot0 depot2)\n(load hoist2 crate1 truck1 depot2)\n(unload hoist2 crate0 truck1 depot2)\n(drop hoist2 crate0 pallet2 depot2)\n(drive truck1 depot2 distributor0)\n(load hoist3 crate2 truck1 distributor0)\n(drive truck1 distributor0 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drop hoist1 crate2 pallet1 depot1)\n(unload hoist1 crate1 truck1 depot1)\n(drop hoist1 crate1 crate2 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 496,
            "example_instance_ids": [
                495
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot0, crate1 is at depot2, crate2 is at distributor0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet1 is clear, crate0 is on pallet0, crate1 is on pallet2 and crate2 is on pallet3.\nMy goal is to have that crate0 is on pallet2, crate1 is on crate2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate2 from pallet3 at distributor0\ndrive truck1 from depot2 to depot0\nUse hoist2 to lift crate1 from pallet2 at depot2\nUse hoist0 to lift crate0 from pallet0 at depot0\nUse hoist0 to load crate0 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to load crate1 into truck1 at depot2\nUse hoist2 to unload crate0 from truck1 at depot2\nUse hoist2 to drop crate0 to pallet2 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to load crate2 into truck1 at distributor0\ndrive truck1 from distributor0 to depot1\nUse hoist1 to unload crate2 from truck1 at depot1\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist1 to unload crate1 from truck1 at depot1\nUse hoist1 to drop crate1 to crate2 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist2 crate1 pallet2 depot2)\n",
            "gold_label": "(lift hoist2 crate0 pallet2 depot2)\n(load hoist2 crate0 truck1 depot2)\n(drive truck1 depot2 distributor0)\n(unload hoist3 crate0 truck1 distributor0)\n(drop hoist3 crate0 pallet3 distributor0)\n(drive truck2 depot0 depot1)\n(lift hoist1 crate2 crate1 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate1 pallet1 depot1)\n(load hoist1 crate1 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot2)\n(unload hoist2 crate1 truck2 depot2)\n(drop hoist1 crate2 pallet1 depot1)\n(drop hoist2 crate1 pallet2 depot2)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 497,
            "example_instance_ids": [
                496
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot2, crate1 is at depot1, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet2, crate1 is on pallet1 and crate2 is on crate1.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet2 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist2 to lift crate0 from pallet2 at depot2\nUse hoist2 to load crate0 into truck1 at depot2\ndrive truck1 from depot2 to distributor0\nUse hoist3 to unload crate0 from truck1 at distributor0\nUse hoist3 to drop crate0 to pallet3 at distributor0\ndrive truck2 from depot0 to depot1\nUse hoist1 to lift crate2 from crate1 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate1 from pallet1 at depot1\nUse hoist1 to load crate1 into truck2 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\ndrive truck2 from depot1 to depot2\nUse hoist2 to unload crate1 from truck2 at depot2\nUse hoist1 to drop crate2 to pallet1 at depot1\nUse hoist2 to drop crate1 to pallet2 at depot2\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist1 crate2 pallet1 depot1)\n",
            "gold_label": "(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck2 depot1)\n(lift hoist1 crate0 pallet1 depot1)\n(load hoist1 crate0 truck2 depot1)\n(unload hoist1 crate2 truck2 depot1)\n(drive truck2 depot1 depot0)\n(unload hoist0 crate0 truck2 depot0)\n(drop hoist0 crate0 pallet0 depot0)\n(drop hoist1 crate2 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 498,
            "example_instance_ids": [
                497
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at depot2, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at distributor0, truck2 is at depot1, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet3 is clear, crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\nMy goal is to have that crate0 is on pallet0 and crate2 is on pallet1.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from crate0 at depot1\nUse hoist1 to load crate2 into truck2 at depot1\nUse hoist1 to lift crate0 from pallet1 at depot1\nUse hoist1 to load crate0 into truck2 at depot1\nUse hoist1 to unload crate2 from truck2 at depot1\ndrive truck2 from depot1 to depot0\nUse hoist0 to unload crate0 from truck2 at depot0\nUse hoist0 to drop crate0 to pallet0 at depot0\nUse hoist1 to drop crate2 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n",
            "gold_label": "(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 depot2)\n(unload hoist2 crate2 truck1 depot2)\n(drop hoist2 crate2 pallet2 depot2)\n(lift hoist3 crate1 crate0 distributor0)\n(load hoist3 crate1 truck2 distributor0)\n(drive truck2 distributor0 depot1)\n(unload hoist1 crate1 truck2 depot1)\n(drop hoist1 crate1 pallet1 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 499,
            "example_instance_ids": [
                498
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot0, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet3, crate1 is on pallet1 and crate2 is on pallet2.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\ndrive truck1 from depot0 to depot2\nUse hoist2 to unload crate2 from truck1 at depot2\nUse hoist2 to drop crate2 to pallet2 at depot2\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist3 to load crate1 into truck2 at distributor0\ndrive truck2 from distributor0 to depot1\nUse hoist1 to unload crate1 from truck2 at depot1\nUse hoist1 to drop crate1 to pallet1 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist3 crate1 crate0 distributor0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist1 crate2 crate0 depot1)\n",
            "gold_label": "(lift hoist3 crate1 crate0 distributor0)\n(lift hoist0 crate2 pallet0 depot0)\n(load hoist0 crate2 truck1 depot0)\n(drive truck1 depot0 distributor0)\n(load hoist3 crate1 truck1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck1 distributor0)\n(drive truck1 distributor0 depot1)\n(unload hoist1 crate0 truck1 depot1)\n(drop hoist1 crate0 pallet1 depot1)\n(unload hoist1 crate2 truck1 depot1)\n(drive truck1 depot1 depot2)\n(unload hoist2 crate1 truck1 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist1 crate2 crate0 depot1)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 500,
            "example_instance_ids": [
                499
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at distributor0, crate2 is at depot0, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot2, truck1 is at depot0, truck2 is at depot2, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet1 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on crate0 and crate2 is on pallet0.\nMy goal is to have that crate0 is on pallet1, crate1 is on pallet2 and crate2 is on crate0.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist3 to lift crate1 from crate0 at distributor0\nUse hoist0 to lift crate2 from pallet0 at depot0\nUse hoist0 to load crate2 into truck1 at depot0\ndrive truck1 from depot0 to distributor0\nUse hoist3 to load crate1 into truck1 at distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck1 at distributor0\ndrive truck1 from distributor0 to depot1\nUse hoist1 to unload crate0 from truck1 at depot1\nUse hoist1 to drop crate0 to pallet1 at depot1\nUse hoist1 to unload crate2 from truck1 at depot1\ndrive truck1 from depot1 to depot2\nUse hoist2 to unload crate1 from truck1 at depot2\nUse hoist2 to drop crate1 to pallet2 at depot2\nUse hoist1 to drop crate2 to crate0 at depot1\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate2 pallet1 depot1)\n(load hoist1 crate2 truck1 depot1)\n(drive truck1 depot1 distributor0)\n(lift hoist3 crate0 pallet3 distributor0)\n(load hoist3 crate0 truck2 distributor0)\n(unload hoist3 crate2 truck1 distributor0)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        },
        {
            "task": "task_1_plan_generation",
            "prompt_type": "oneshot",
            "domain": "depots",
            "instance_id": 501,
            "example_instance_ids": [
                500
            ],
            "question": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\n\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\n\nHere are the actions that can be performed:\n\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\n\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place, \nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at distributor0, crate1 is at depot0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at distributor0, truck1 is at depot1, truck2 is at distributor0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate0 is clear, crate1 is clear, crate2 is clear, pallet2 is clear, crate0 is on pallet3, crate1 is on pallet0 and crate2 is on pallet1.\nMy goal is to have that crate1 is on pallet0 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]\nUse hoist1 to lift crate2 from pallet1 at depot1\nUse hoist1 to load crate2 into truck1 at depot1\ndrive truck1 from depot1 to distributor0\nUse hoist3 to lift crate0 from pallet3 at distributor0\nUse hoist3 to load crate0 into truck2 at distributor0\nUse hoist3 to unload crate2 from truck1 at distributor0\nUse hoist3 to drop crate2 to pallet3 at distributor0\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, crate0 is at depot1, crate1 is at distributor0, crate2 is at depot1, hoist0 is at depot0, hoist1 is at depot1, hoist2 is at depot2, hoist3 is at distributor0, pallet0 is at depot0, pallet1 is at depot1, pallet2 is at depot2, pallet3 is at distributor0, truck0 is at depot1, truck1 is at depot2, truck2 is at depot0, hoist0 is available, hoist1 is available, hoist2 is available, hoist3 is available, crate1 is clear, crate2 is clear, pallet0 is clear, pallet2 is clear, crate0 is on pallet1, crate1 is on pallet3 and crate2 is on crate0.\nMy goal is to have that crate1 is on pallet2 and crate2 is on pallet3.\n\nMy plan is as follows:\n\n[PLAN]",
            "input": "",
            "answer": "Final Answer: (lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck0 depot1)\n(lift hoist3 crate1 pallet3 distributor0)\n(drive truck0 depot1 distributor0)\n(load hoist3 crate1 truck0 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drive truck0 distributor0 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n",
            "gold_label": "(lift hoist1 crate2 crate0 depot1)\n(load hoist1 crate2 truck0 depot1)\n(lift hoist3 crate1 pallet3 distributor0)\n(drive truck0 depot1 distributor0)\n(load hoist3 crate1 truck0 distributor0)\n(unload hoist3 crate2 truck0 distributor0)\n(drive truck0 distributor0 depot2)\n(unload hoist2 crate1 truck0 depot2)\n(drop hoist2 crate1 pallet2 depot2)\n(drop hoist3 crate2 pallet3 distributor0)\n"
        }
    ]
]