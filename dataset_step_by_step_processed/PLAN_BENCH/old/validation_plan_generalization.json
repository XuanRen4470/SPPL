[
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "logistics",
        "instance_id": 3,
        "example_instance_ids": [
            2
        ],
        "question": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\n\nLoad a package into a truck. For example, load package_1 into truck_1 at location_1_1.\nLoad a package into an airplane. For example, load package_1 into airplane_1 at location_1_1.\nUnload a package from a truck. For example, unload package_1 from truck_1 at location_1_1.\nUnload a package from an airplane. For example, unload package_1 from airplane_1 at location_1_1.\nDrive a truck from one location to another location. For example, drive truck_1 from location_1_1 to location_1_2 in city_1.\nFly an airplane from one city to another city. For example, fly airplane_1 from location_1_1 to location_2_1. Here location_1_1 is the airport in city_1 and location_2_1 is the airport in city_2.\n\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.   \nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.   \nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.\n\n[STATEMENT]\nAs initial conditions I have that, location_0_5 is an airport, location_1_5 is an airport, location_2_5 is an airport, airplane_0 is at location_0_5, airplane_1 is at location_1_5, airplane_2 is at location_2_5, package_0 is at location_0_9, package_1 is at location_0_3, package_1 is at location_1_2, package_1 is at location_1_8, package_1 is at location_1_1, package_1 is at location_1_4, package_1 is at location_2_9, package_1 is at location_2_3, package_1 is at location_2_7, package_1 is at location_2_2, package_1 is at location_2_8, package_1 is at location_2_1, package_2 is at location_0_7, package_2 is at location_2_4, package_3 is at location_0_2, package_4 is at location_0_8, package_5 is at location_0_1, package_6 is at location_0_4, package_7 is at location_1_9, package_8 is at location_1_3, package_9 is at location_1_7, truck_0 is at location_0_8, truck_1 is at location_1_8, truck_2 is at location_2_8, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_0_3 is in the city city_0, location_0_4 is in the city city_0, location_0_5 is in the city city_0, location_0_6 is in the city city_0, location_0_7 is in the city city_0, location_0_8 is in the city city_0, location_0_9 is in the city city_0, location_1_0 is in the city city_1, location_1_1 is in the city city_1, location_1_2 is in the city city_1, location_1_3 is in the city city_1, location_1_4 is in the city city_1, location_1_5 is in the city city_1, location_1_6 is in the city city_1, location_1_7 is in the city city_1, location_1_8 is in the city city_1, location_1_9 is in the city city_1, location_2_0 is in the city city_2, location_2_1 is in the city city_2, location_2_2 is in the city city_2, location_2_3 is in the city city_2, location_2_4 is in the city city_2, location_2_5 is in the city city_2, location_2_6 is in the city city_2, location_2_7 is in the city city_2, location_2_8 is in the city city_2 and location_2_9 is in the city city_2.\nMy goal is to have that package_0 is at location_0_2, package_1 is at location_0_9, package_1 is at location_1_4, package_1 is at location_1_3, package_1 is at location_1_7, package_1 is at location_1_1, package_1 is at location_2_2, package_1 is at location_2_9, package_1 is at location_1_5, package_1 is at location_2_4, package_1 is at location_2_3, package_1 is at location_2_7, package_2 is at location_2_5, package_2 is at location_2_1, package_3 is at location_0_4, package_4 is at location_0_3, package_5 is at location_0_7, package_6 is at location_0_1, package_7 is at location_1_2, package_8 is at location_1_9 and package_9 is at location_0_5.\n\nMy plan is as follows:\n\n[PLAN]\nload package_1 into truck_2 at location_2_8\ndrive truck_2 from location_2_8 to location_2_3 in city_2\nunload package_1 from truck_2 at location_2_3\nload package_1 into truck_2 at location_2_3\ndrive truck_2 from location_2_3 to location_2_9 in city_2\nunload package_1 from truck_2 at location_2_9\nload package_1 into truck_2 at location_2_9\ndrive truck_2 from location_2_9 to location_2_2 in city_2\nload package_1 into truck_2 at location_2_2\nunload package_1 from truck_2 at location_2_2\ndrive truck_2 from location_2_2 to location_2_4 in city_2\nload package_2 into truck_2 at location_2_4\nunload package_1 from truck_2 at location_2_4\ndrive truck_2 from location_2_4 to location_2_1 in city_2\nunload package_2 from truck_2 at location_2_1\nload package_1 into truck_2 at location_2_1\ndrive truck_2 from location_2_1 to location_2_7 in city_2\nunload package_1 from truck_2 at location_2_7\nload package_1 into truck_2 at location_2_7\ndrive truck_2 from location_2_7 to location_2_5 in city_2\nunload package_1 from truck_2 at location_2_5\nload package_1 into truck_1 at location_1_8\ndrive truck_1 from location_1_8 to location_1_3 in city_1\nload package_8 into truck_1 at location_1_3\nunload package_1 from truck_1 at location_1_3\ndrive truck_1 from location_1_3 to location_1_9 in city_1\nunload package_8 from truck_1 at location_1_9\nload package_7 into truck_1 at location_1_9\ndrive truck_1 from location_1_9 to location_1_2 in city_1\nunload package_7 from truck_1 at location_1_2\nload package_1 into truck_1 at location_1_2\ndrive truck_1 from location_1_2 to location_1_4 in city_1\nload package_1 into truck_1 at location_1_4\nunload package_1 from truck_1 at location_1_4\ndrive truck_1 from location_1_4 to location_1_1 in city_1\nunload package_1 from truck_1 at location_1_1\nload package_1 into truck_1 at location_1_1\ndrive truck_1 from location_1_1 to location_1_7 in city_1\nload package_9 into truck_1 at location_1_7\nunload package_1 from truck_1 at location_1_7\ndrive truck_1 from location_1_7 to location_1_5 in city_1\nload package_4 into truck_0 at location_0_8\ndrive truck_0 from location_0_8 to location_0_3 in city_0\nunload package_4 from truck_0 at location_0_3\nload package_1 into truck_0 at location_0_3\ndrive truck_0 from location_0_3 to location_0_9 in city_0\nunload package_1 from truck_0 at location_0_9\nload package_0 into truck_0 at location_0_9\ndrive truck_0 from location_0_9 to location_0_2 in city_0\nload package_3 into truck_0 at location_0_2\nunload package_0 from truck_0 at location_0_2\ndrive truck_0 from location_0_2 to location_0_4 in city_0\nload package_6 into truck_0 at location_0_4\nunload package_3 from truck_0 at location_0_4\ndrive truck_0 from location_0_4 to location_0_1 in city_0\nunload package_6 from truck_0 at location_0_1\nload package_5 into truck_0 at location_0_1\ndrive truck_0 from location_0_1 to location_0_7 in city_0\nunload package_5 from truck_0 at location_0_7\nload package_2 into truck_0 at location_0_7\ndrive truck_0 from location_0_7 to location_0_5 in city_0\nunload package_2 from truck_0 at location_0_5\nload package_2 into airplane_0 at location_0_5\nunload package_9 from truck_1 at location_1_5\nload package_1 into airplane_2 at location_2_5\nfly airplane_0 from location_0_5 to location_2_5\nunload package_2 from airplane_0 at location_2_5\nfly airplane_2 from location_2_5 to location_1_5\nload package_9 into airplane_2 at location_1_5\nunload package_1 from airplane_2 at location_1_5\nfly airplane_2 from location_1_5 to location_0_5\nunload package_9 from airplane_2 at location_0_5\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, location_0_0 is an airport, airplane_0 is at location_0_0, package_0 is at location_0_2, package_1 is at location_0_7, package_2 is at location_0_4, package_3 is at location_0_1, package_4 is at location_0_5, package_5 is at location_0_8, package_6 is at location_0_6, package_7 is at location_0_3, truck_0 is at location_0_7, location_0_0 is in the city city_0, location_0_1 is in the city city_0, location_0_2 is in the city city_0, location_0_3 is in the city city_0, location_0_4 is in the city city_0, location_0_5 is in the city city_0, location_0_6 is in the city city_0, location_0_7 is in the city city_0, location_0_8 is in the city city_0 and location_0_9 is in the city city_0.\nMy goal is to have that package_0 is at location_0_6, package_1 is at location_0_5, package_2 is at location_0_2, package_3 is at location_0_3, package_4 is at location_0_8, package_5 is at location_0_4 and package_6 is at location_0_1.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (load-truck p1 t0 l0-7)\n(drive-truck t0 l0-7 l0-5 c0)\n(load-truck p4 t0 l0-5)\n(unload-truck p1 t0 l0-5)\n(drive-truck t0 l0-5 l0-8 c0)\n(load-truck p5 t0 l0-8)\n(unload-truck p4 t0 l0-8)\n(drive-truck t0 l0-8 l0-4 c0)\n(unload-truck p5 t0 l0-4)\n(load-truck p2 t0 l0-4)\n(drive-truck t0 l0-4 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-6 c0)\n(load-truck p6 t0 l0-6)\n(unload-truck p0 t0 l0-6)\n(drive-truck t0 l0-6 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-3 c0)\n(unload-truck p3 t0 l0-3)\n",
        "gold_label": "(load-truck p1 t0 l0-7)\n(drive-truck t0 l0-7 l0-5 c0)\n(load-truck p4 t0 l0-5)\n(unload-truck p1 t0 l0-5)\n(drive-truck t0 l0-5 l0-8 c0)\n(load-truck p5 t0 l0-8)\n(unload-truck p4 t0 l0-8)\n(drive-truck t0 l0-8 l0-4 c0)\n(unload-truck p5 t0 l0-4)\n(load-truck p2 t0 l0-4)\n(drive-truck t0 l0-4 l0-2 c0)\n(unload-truck p2 t0 l0-2)\n(load-truck p0 t0 l0-2)\n(drive-truck t0 l0-2 l0-6 c0)\n(load-truck p6 t0 l0-6)\n(unload-truck p0 t0 l0-6)\n(drive-truck t0 l0-6 l0-1 c0)\n(unload-truck p6 t0 l0-1)\n(load-truck p3 t0 l0-1)\n(drive-truck t0 l0-1 l0-3 c0)\n(unload-truck p3 t0 l0-3)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 419,
        "example_instance_ids": [
            418
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object d, planet object e, planet object f, planet object i, planet object j, planet object k, planet object l, province object b, province object d, province object e, province object f, province object i, province object j, province object k and province object l.\nMy goal is to have that object d craves object e, object e craves object k, object f craves object i, object i craves object j, object j craves object b, object k craves object l and object l craves object f.\n\nMy plan is as follows:\n\n[PLAN]\nattack object j\novercome object j from object b\nattack object i\novercome object i from object j\nattack object f\novercome object f from object i\nattack object l\novercome object l from object f\nattack object k\novercome object k from object l\nattack object e\novercome object e from object k\nattack object d\novercome object d from object e\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object d, planet object f, planet object g, planet object i, planet object j, planet object k, planet object l, province object a, province object b, province object d, province object f, province object g, province object i, province object j, province object k and province object l.\nMy goal is to have that object a craves object i, object b craves object a, object f craves object g, object g craves object b, object i craves object k, object j craves object f, object k craves object l and object l craves object d.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack l)\n(overcome l d)\n(attack k)\n(overcome k l)\n(attack i)\n(overcome i k)\n(attack a)\n(overcome a i)\n(attack b)\n(overcome b a)\n(attack g)\n(overcome g b)\n(attack f)\n(overcome f g)\n(attack j)\n(overcome j f)\n",
        "gold_label": "(attack l)\n(overcome l d)\n(attack k)\n(overcome k l)\n(attack i)\n(overcome i k)\n(attack a)\n(overcome a i)\n(attack b)\n(overcome b a)\n(attack g)\n(overcome g b)\n(attack f)\n(overcome f g)\n(attack j)\n(overcome j f)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 408,
        "example_instance_ids": [
            407
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object c, planet object d, planet object e, planet object h, planet object k, planet object l, province object c, province object d, province object e, province object h, province object k and province object l.\nMy goal is to have that object c craves object h, object e craves object c, object h craves object l, object k craves object d and object l craves object k.\n\nMy plan is as follows:\n\n[PLAN]\nattack object k\novercome object k from object d\nattack object l\novercome object l from object k\nattack object h\novercome object h from object l\nattack object c\novercome object c from object h\nattack object e\novercome object e from object c\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object d, planet object g, planet object h, planet object j, planet object l, province object a, province object b, province object c, province object d, province object g, province object h, province object j and province object l.\nMy goal is to have that object a craves object l, object c craves object g, object d craves object c, object g craves object j, object h craves object d, object j craves object b and object l craves object h.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack j)\n(overcome j b)\n(attack g)\n(overcome g j)\n(attack c)\n(overcome c g)\n(attack d)\n(overcome d c)\n(attack h)\n(overcome h d)\n(attack l)\n(overcome l h)\n(attack a)\n(overcome a l)\n",
        "gold_label": "(attack j)\n(overcome j b)\n(attack g)\n(overcome g j)\n(attack c)\n(overcome c g)\n(attack d)\n(overcome d c)\n(attack h)\n(overcome h d)\n(attack l)\n(overcome l h)\n(attack a)\n(overcome a l)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 444,
        "example_instance_ids": [
            443
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object d, planet object f, planet object k, province object a, province object c, province object d, province object f and province object k.\nMy goal is to have that object a craves object d, object c craves object a, object d craves object k and object k craves object f.\n\nMy plan is as follows:\n\n[PLAN]\nattack object k\novercome object k from object f\nattack object d\novercome object d from object k\nattack object a\novercome object a from object d\nattack object c\novercome object c from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object e, planet object h, planet object i, planet object k, province object a, province object c, province object e, province object h, province object i and province object k.\nMy goal is to have that object a craves object i, object c craves object e, object e craves object k, object i craves object h and object k craves object a.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack i)\n(overcome i h)\n(attack a)\n(overcome a i)\n(attack k)\n(overcome k a)\n(attack e)\n(overcome e k)\n(attack c)\n(overcome c e)\n",
        "gold_label": "(attack i)\n(overcome i h)\n(attack a)\n(overcome a i)\n(attack k)\n(overcome k a)\n(attack e)\n(overcome e k)\n(attack c)\n(overcome c e)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 472,
        "example_instance_ids": [
            471
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object e, planet object f, planet object g, planet object i, planet object j, planet object k, planet object l, province object b, province object c, province object d, province object e, province object f, province object g, province object i, province object j, province object k and province object l.\nMy goal is to have that object b craves object f, object c craves object k, object d craves object i, object e craves object b, object f craves object d, object g craves object j, object j craves object c, object k craves object l and object l craves object e.\n\nMy plan is as follows:\n\n[PLAN]\nattack object d\novercome object d from object i\nattack object f\novercome object f from object d\nattack object b\novercome object b from object f\nattack object e\novercome object e from object b\nattack object l\novercome object l from object e\nattack object k\novercome object k from object l\nattack object c\novercome object c from object k\nattack object j\novercome object j from object c\nattack object g\novercome object g from object j\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object e, planet object h, planet object i, planet object l, province object a, province object c, province object e, province object h, province object i and province object l.\nMy goal is to have that object a craves object c, object c craves object h, object e craves object a, object h craves object l and object i craves object e.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack h)\n(overcome h l)\n(attack c)\n(overcome c h)\n(attack a)\n(overcome a c)\n(attack e)\n(overcome e a)\n(attack i)\n(overcome i e)\n",
        "gold_label": "(attack h)\n(overcome h l)\n(attack c)\n(overcome c h)\n(attack a)\n(overcome a c)\n(attack e)\n(overcome e a)\n(attack i)\n(overcome i e)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 469,
        "example_instance_ids": [
            468
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object f, planet object h, planet object j, province object b, province object c, province object f, province object h and province object j.\nMy goal is to have that object b craves object c, object c craves object h, object f craves object b and object h craves object j.\n\nMy plan is as follows:\n\n[PLAN]\nattack object h\novercome object h from object j\nattack object c\novercome object c from object h\nattack object b\novercome object b from object c\nattack object f\novercome object f from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object d, planet object e, planet object f, planet object h, planet object i, planet object j, planet object k, province object a, province object b, province object c, province object d, province object e, province object f, province object h, province object i, province object j and province object k.\nMy goal is to have that object a craves object e, object b craves object f, object c craves object j, object d craves object i, object e craves object c, object h craves object d, object i craves object k, object j craves object h and object k craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack b)\n(overcome b f)\n(attack k)\n(overcome k b)\n(attack i)\n(overcome i k)\n(attack d)\n(overcome d i)\n(attack h)\n(overcome h d)\n(attack j)\n(overcome j h)\n(attack c)\n(overcome c j)\n(attack e)\n(overcome e c)\n(attack a)\n(overcome a e)\n",
        "gold_label": "(attack b)\n(overcome b f)\n(attack k)\n(overcome k b)\n(attack i)\n(overcome i k)\n(attack d)\n(overcome d i)\n(attack h)\n(overcome h d)\n(attack j)\n(overcome j h)\n(attack c)\n(overcome c j)\n(attack e)\n(overcome e c)\n(attack a)\n(overcome a e)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 461,
        "example_instance_ids": [
            460
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object f, planet object g, planet object h, planet object k, planet object l, province object b, province object c, province object d, province object f, province object g, province object h, province object k and province object l.\nMy goal is to have that object b craves object h, object c craves object d, object d craves object b, object f craves object k, object g craves object f, object h craves object l and object l craves object g.\n\nMy plan is as follows:\n\n[PLAN]\nattack object f\novercome object f from object k\nattack object g\novercome object g from object f\nattack object l\novercome object l from object g\nattack object h\novercome object h from object l\nattack object b\novercome object b from object h\nattack object d\novercome object d from object b\nattack object c\novercome object c from object d\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object c, planet object d, planet object h, province object c, province object d and province object h.\nMy goal is to have that object c craves object d and object h craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack c)\n(overcome c d)\n(attack h)\n(overcome h c)\n",
        "gold_label": "(attack c)\n(overcome c d)\n(attack h)\n(overcome h c)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 423,
        "example_instance_ids": [
            422
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object d, planet object e, planet object f, planet object g, planet object h, planet object i, planet object j, planet object k, planet object l, province object a, province object b, province object c, province object d, province object e, province object f, province object g, province object h, province object i, province object j, province object k and province object l.\nMy goal is to have that object a craves object f, object b craves object j, object c craves object k, object d craves object h, object e craves object l, object f craves object i, object g craves object b, object h craves object c, object i craves object d, object k craves object e and object l craves object g.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object j\nattack object g\novercome object g from object b\nattack object l\novercome object l from object g\nattack object e\novercome object e from object l\nattack object k\novercome object k from object e\nattack object c\novercome object c from object k\nattack object h\novercome object h from object c\nattack object d\novercome object d from object h\nattack object i\novercome object i from object d\nattack object f\novercome object f from object i\nattack object a\novercome object a from object f\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object e, planet object g, planet object h, planet object k, planet object l, province object b, province object c, province object d, province object e, province object g, province object h, province object k and province object l.\nMy goal is to have that object b craves object g, object c craves object k, object d craves object h, object g craves object e, object h craves object c, object k craves object l and object l craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack g)\n(overcome g e)\n(attack b)\n(overcome b g)\n(attack l)\n(overcome l b)\n(attack k)\n(overcome k l)\n(attack c)\n(overcome c k)\n(attack h)\n(overcome h c)\n(attack d)\n(overcome d h)\n",
        "gold_label": "(attack g)\n(overcome g e)\n(attack b)\n(overcome b g)\n(attack l)\n(overcome l b)\n(attack k)\n(overcome k l)\n(attack c)\n(overcome c k)\n(attack h)\n(overcome h c)\n(attack d)\n(overcome d h)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 415,
        "example_instance_ids": [
            414
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object d, planet object e, planet object f, planet object g, planet object i, planet object j, planet object k, planet object l, province object a, province object b, province object d, province object e, province object f, province object g, province object i, province object j, province object k and province object l.\nMy goal is to have that object a craves object e, object b craves object k, object d craves object i, object e craves object j, object g craves object b, object i craves object l, object j craves object f, object k craves object d and object l craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object j\novercome object j from object f\nattack object e\novercome object e from object j\nattack object a\novercome object a from object e\nattack object l\novercome object l from object a\nattack object i\novercome object i from object l\nattack object d\novercome object d from object i\nattack object k\novercome object k from object d\nattack object b\novercome object b from object k\nattack object g\novercome object g from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object e, planet object g, planet object h, planet object i, planet object j, planet object l, province object a, province object e, province object g, province object h, province object i, province object j and province object l.\nMy goal is to have that object a craves object g, object e craves object a, object g craves object j, object h craves object e, object i craves object h and object j craves object l.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack j)\n(overcome j l)\n(attack g)\n(overcome g j)\n(attack a)\n(overcome a g)\n(attack e)\n(overcome e a)\n(attack h)\n(overcome h e)\n(attack i)\n(overcome i h)\n",
        "gold_label": "(attack j)\n(overcome j l)\n(attack g)\n(overcome g j)\n(attack a)\n(overcome a g)\n(attack e)\n(overcome e a)\n(attack h)\n(overcome h e)\n(attack i)\n(overcome i h)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 473,
        "example_instance_ids": [
            472
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object e, planet object h, planet object i, planet object l, province object a, province object c, province object e, province object h, province object i and province object l.\nMy goal is to have that object a craves object c, object c craves object h, object e craves object a, object h craves object l and object i craves object e.\n\nMy plan is as follows:\n\n[PLAN]\nattack object h\novercome object h from object l\nattack object c\novercome object c from object h\nattack object a\novercome object a from object c\nattack object e\novercome object e from object a\nattack object i\novercome object i from object e\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object e, planet object f, planet object g, planet object h, planet object i, planet object j, planet object k, planet object l, province object b, province object c, province object d, province object e, province object f, province object g, province object h, province object i, province object j, province object k and province object l.\nMy goal is to have that object b craves object j, object c craves object b, object d craves object c, object e craves object l, object f craves object g, object g craves object e, object i craves object k, object j craves object i, object k craves object h and object l craves object d.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack k)\n(overcome k h)\n(attack i)\n(overcome i k)\n(attack j)\n(overcome j i)\n(attack b)\n(overcome b j)\n(attack c)\n(overcome c b)\n(attack d)\n(overcome d c)\n(attack l)\n(overcome l d)\n(attack e)\n(overcome e l)\n(attack g)\n(overcome g e)\n(attack f)\n(overcome f g)\n",
        "gold_label": "(attack k)\n(overcome k h)\n(attack i)\n(overcome i k)\n(attack j)\n(overcome j i)\n(attack b)\n(overcome b j)\n(attack c)\n(overcome c b)\n(attack d)\n(overcome d c)\n(attack l)\n(overcome l d)\n(attack e)\n(overcome e l)\n(attack g)\n(overcome g e)\n(attack f)\n(overcome f g)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 404,
        "example_instance_ids": [
            403
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object e, planet object f, planet object i, planet object k, province object a, province object c, province object e, province object f, province object i and province object k.\nMy goal is to have that object a craves object e, object c craves object a, object e craves object k, object f craves object c and object i craves object f.\n\nMy plan is as follows:\n\n[PLAN]\nattack object e\novercome object e from object k\nattack object a\novercome object a from object e\nattack object c\novercome object c from object a\nattack object f\novercome object f from object c\nattack object i\novercome object i from object f\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object e, planet object f, planet object g, planet object h, planet object i, planet object j, planet object l, province object a, province object b, province object c, province object e, province object f, province object g, province object h, province object i, province object j and province object l.\nMy goal is to have that object a craves object c, object b craves object e, object e craves object a, object f craves object i, object g craves object f, object h craves object j, object i craves object l, object j craves object b and object l craves object h.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack a)\n(overcome a c)\n(attack e)\n(overcome e a)\n(attack b)\n(overcome b e)\n(attack j)\n(overcome j b)\n(attack h)\n(overcome h j)\n(attack l)\n(overcome l h)\n(attack i)\n(overcome i l)\n(attack f)\n(overcome f i)\n(attack g)\n(overcome g f)\n",
        "gold_label": "(attack a)\n(overcome a c)\n(attack e)\n(overcome e a)\n(attack b)\n(overcome b e)\n(attack j)\n(overcome j b)\n(attack h)\n(overcome h j)\n(attack l)\n(overcome l h)\n(attack i)\n(overcome i l)\n(attack f)\n(overcome f i)\n(attack g)\n(overcome g f)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 492,
        "example_instance_ids": [
            491
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object e, planet object h, planet object i, planet object j, province object a, province object b, province object c, province object e, province object h, province object i and province object j.\nMy goal is to have that object a craves object e, object b craves object h, object c craves object b, object e craves object i, object i craves object c and object j craves object a.\n\nMy plan is as follows:\n\n[PLAN]\nattack object b\novercome object b from object h\nattack object c\novercome object c from object b\nattack object i\novercome object i from object c\nattack object e\novercome object e from object i\nattack object a\novercome object a from object e\nattack object j\novercome object j from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object c, planet object d, planet object g, planet object h, planet object i, planet object j, province object c, province object d, province object g, province object h, province object i and province object j.\nMy goal is to have that object c craves object h, object d craves object i, object g craves object j, object h craves object d and object i craves object g.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack g)\n(overcome g j)\n(attack i)\n(overcome i g)\n(attack d)\n(overcome d i)\n(attack h)\n(overcome h d)\n(attack c)\n(overcome c h)\n",
        "gold_label": "(attack g)\n(overcome g j)\n(attack i)\n(overcome i g)\n(attack d)\n(overcome d i)\n(attack h)\n(overcome h d)\n(attack c)\n(overcome c h)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 457,
        "example_instance_ids": [
            456
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object e, planet object g, planet object i, planet object j, province object a, province object e, province object g, province object i and province object j.\nMy goal is to have that object e craves object j, object g craves object a, object i craves object e and object j craves object g.\n\nMy plan is as follows:\n\n[PLAN]\nattack object g\novercome object g from object a\nattack object j\novercome object j from object g\nattack object e\novercome object e from object j\nattack object i\novercome object i from object e\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object g, planet object i, planet object j, planet object k, planet object l, province object a, province object c, province object g, province object i, province object j, province object k and province object l.\nMy goal is to have that object a craves object k, object c craves object j, object g craves object i, object j craves object l, object k craves object c and object l craves object g.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack g)\n(overcome g i)\n(attack l)\n(overcome l g)\n(attack j)\n(overcome j l)\n(attack c)\n(overcome c j)\n(attack k)\n(overcome k c)\n(attack a)\n(overcome a k)\n",
        "gold_label": "(attack g)\n(overcome g i)\n(attack l)\n(overcome l g)\n(attack j)\n(overcome j l)\n(attack c)\n(overcome c j)\n(attack k)\n(overcome k c)\n(attack a)\n(overcome a k)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 456,
        "example_instance_ids": [
            455
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object d, planet object e, planet object f, planet object g, planet object h, planet object i, planet object j, planet object l, province object a, province object d, province object e, province object f, province object g, province object h, province object i, province object j and province object l.\nMy goal is to have that object a craves object l, object e craves object i, object f craves object a, object g craves object f, object h craves object j, object i craves object g, object j craves object d and object l craves object h.\n\nMy plan is as follows:\n\n[PLAN]\nattack object j\novercome object j from object d\nattack object h\novercome object h from object j\nattack object l\novercome object l from object h\nattack object a\novercome object a from object l\nattack object f\novercome object f from object a\nattack object g\novercome object g from object f\nattack object i\novercome object i from object g\nattack object e\novercome object e from object i\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object e, planet object g, planet object i, planet object j, province object a, province object e, province object g, province object i and province object j.\nMy goal is to have that object e craves object j, object g craves object a, object i craves object e and object j craves object g.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack g)\n(overcome g a)\n(attack j)\n(overcome j g)\n(attack e)\n(overcome e j)\n(attack i)\n(overcome i e)\n",
        "gold_label": "(attack g)\n(overcome g a)\n(attack j)\n(overcome j g)\n(attack e)\n(overcome e j)\n(attack i)\n(overcome i e)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 500,
        "example_instance_ids": [
            499
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object g, planet object h, planet object k, province object a, province object g, province object h and province object k.\nMy goal is to have that object a craves object g, object g craves object h and object h craves object k.\n\nMy plan is as follows:\n\n[PLAN]\nattack object h\novercome object h from object k\nattack object g\novercome object g from object h\nattack object a\novercome object a from object g\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object e, planet object g, planet object h, planet object l, province object a, province object c, province object e, province object g, province object h and province object l.\nMy goal is to have that object a craves object e, object e craves object g, object g craves object h, object h craves object l and object l craves object c.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack l)\n(overcome l c)\n(attack h)\n(overcome h l)\n(attack g)\n(overcome g h)\n(attack e)\n(overcome e g)\n(attack a)\n(overcome a e)\n",
        "gold_label": "(attack l)\n(overcome l c)\n(attack h)\n(overcome h l)\n(attack g)\n(overcome g h)\n(attack e)\n(overcome e g)\n(attack a)\n(overcome a e)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 458,
        "example_instance_ids": [
            457
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object c, planet object g, planet object i, planet object j, planet object k, planet object l, province object a, province object c, province object g, province object i, province object j, province object k and province object l.\nMy goal is to have that object a craves object k, object c craves object j, object g craves object i, object j craves object l, object k craves object c and object l craves object g.\n\nMy plan is as follows:\n\n[PLAN]\nattack object g\novercome object g from object i\nattack object l\novercome object l from object g\nattack object j\novercome object j from object l\nattack object c\novercome object c from object j\nattack object k\novercome object k from object c\nattack object a\novercome object a from object k\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object e, planet object f, planet object g, planet object i, planet object j, planet object k, planet object l, province object a, province object b, province object e, province object f, province object g, province object i, province object j, province object k and province object l.\nMy goal is to have that object a craves object g, object b craves object k, object e craves object j, object f craves object a, object g craves object b, object i craves object f, object j craves object i and object l craves object e.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack b)\n(overcome b k)\n(attack g)\n(overcome g b)\n(attack a)\n(overcome a g)\n(attack f)\n(overcome f a)\n(attack i)\n(overcome i f)\n(attack j)\n(overcome j i)\n(attack e)\n(overcome e j)\n(attack l)\n(overcome l e)\n",
        "gold_label": "(attack b)\n(overcome b k)\n(attack g)\n(overcome g b)\n(attack a)\n(overcome a g)\n(attack f)\n(overcome f a)\n(attack i)\n(overcome i f)\n(attack j)\n(overcome j i)\n(attack e)\n(overcome e j)\n(attack l)\n(overcome l e)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 498,
        "example_instance_ids": [
            497
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object e, planet object i, planet object j, province object e, province object i and province object j.\nMy goal is to have that object e craves object j and object j craves object i.\n\nMy plan is as follows:\n\n[PLAN]\nattack object j\novercome object j from object i\nattack object e\novercome object e from object j\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object f, planet object j, planet object l, province object b, province object c, province object d, province object f, province object j and province object l.\nMy goal is to have that object c craves object d, object d craves object l, object f craves object j, object j craves object c and object l craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack l)\n(overcome l b)\n(attack d)\n(overcome d l)\n(attack c)\n(overcome c d)\n(attack j)\n(overcome j c)\n(attack f)\n(overcome f j)\n",
        "gold_label": "(attack l)\n(overcome l b)\n(attack d)\n(overcome d l)\n(attack c)\n(overcome c d)\n(attack j)\n(overcome j c)\n(attack f)\n(overcome f j)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 431,
        "example_instance_ids": [
            430
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object d, planet object e, planet object f, planet object g, planet object i, planet object j, planet object k, province object a, province object b, province object d, province object e, province object f, province object g, province object i, province object j and province object k.\nMy goal is to have that object a craves object f, object b craves object j, object d craves object a, object e craves object g, object f craves object i, object g craves object k, object i craves object b and object j craves object e.\n\nMy plan is as follows:\n\n[PLAN]\nattack object g\novercome object g from object k\nattack object e\novercome object e from object g\nattack object j\novercome object j from object e\nattack object b\novercome object b from object j\nattack object i\novercome object i from object b\nattack object f\novercome object f from object i\nattack object a\novercome object a from object f\nattack object d\novercome object d from object a\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object d, planet object e, planet object g, planet object j, planet object k, province object d, province object e, province object g, province object j and province object k.\nMy goal is to have that object d craves object g, object g craves object k, object j craves object d and object k craves object e.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack k)\n(overcome k e)\n(attack g)\n(overcome g k)\n(attack d)\n(overcome d g)\n(attack j)\n(overcome j d)\n",
        "gold_label": "(attack k)\n(overcome k e)\n(attack g)\n(overcome g k)\n(attack d)\n(overcome d g)\n(attack j)\n(overcome j d)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 460,
        "example_instance_ids": [
            459
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object d, planet object f, planet object g, planet object h, planet object i, planet object k, planet object l, province object a, province object b, province object d, province object f, province object g, province object h, province object i, province object k and province object l.\nMy goal is to have that object a craves object k, object b craves object d, object d craves object a, object g craves object i, object h craves object l, object i craves object h, object k craves object g and object l craves object f.\n\nMy plan is as follows:\n\n[PLAN]\nattack object l\novercome object l from object f\nattack object h\novercome object h from object l\nattack object i\novercome object i from object h\nattack object g\novercome object g from object i\nattack object k\novercome object k from object g\nattack object a\novercome object a from object k\nattack object d\novercome object d from object a\nattack object b\novercome object b from object d\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object f, planet object g, planet object h, planet object k, planet object l, province object b, province object c, province object d, province object f, province object g, province object h, province object k and province object l.\nMy goal is to have that object b craves object h, object c craves object d, object d craves object b, object f craves object k, object g craves object f, object h craves object l and object l craves object g.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack f)\n(overcome f k)\n(attack g)\n(overcome g f)\n(attack l)\n(overcome l g)\n(attack h)\n(overcome h l)\n(attack b)\n(overcome b h)\n(attack d)\n(overcome d b)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(attack f)\n(overcome f k)\n(attack g)\n(overcome g f)\n(attack l)\n(overcome l g)\n(attack h)\n(overcome h l)\n(attack b)\n(overcome b h)\n(attack d)\n(overcome d b)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 495,
        "example_instance_ids": [
            494
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object e, planet object g, planet object i, planet object j, planet object l, province object a, province object b, province object c, province object e, province object g, province object i, province object j and province object l.\nMy goal is to have that object a craves object b, object b craves object j, object e craves object g, object g craves object c, object i craves object l, object j craves object i and object l craves object e.\n\nMy plan is as follows:\n\n[PLAN]\nattack object g\novercome object g from object c\nattack object e\novercome object e from object g\nattack object l\novercome object l from object e\nattack object i\novercome object i from object l\nattack object j\novercome object j from object i\nattack object b\novercome object b from object j\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object c, planet object e, planet object h, planet object i, planet object l, province object c, province object e, province object h, province object i and province object l.\nMy goal is to have that object c craves object l, object e craves object h, object i craves object e and object l craves object i.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack e)\n(overcome e h)\n(attack i)\n(overcome i e)\n(attack l)\n(overcome l i)\n(attack c)\n(overcome c l)\n",
        "gold_label": "(attack e)\n(overcome e h)\n(attack i)\n(overcome i e)\n(attack l)\n(overcome l i)\n(attack c)\n(overcome c l)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 424,
        "example_instance_ids": [
            423
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object e, planet object g, planet object h, planet object k, planet object l, province object b, province object c, province object d, province object e, province object g, province object h, province object k and province object l.\nMy goal is to have that object b craves object g, object c craves object k, object d craves object h, object g craves object e, object h craves object c, object k craves object l and object l craves object b.\n\nMy plan is as follows:\n\n[PLAN]\nattack object g\novercome object g from object e\nattack object b\novercome object b from object g\nattack object l\novercome object l from object b\nattack object k\novercome object k from object l\nattack object c\novercome object c from object k\nattack object h\novercome object h from object c\nattack object d\novercome object d from object h\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object d, planet object g, planet object j, planet object l, province object b, province object d, province object g, province object j and province object l.\nMy goal is to have that object b craves object g, object d craves object j, object g craves object l and object j craves object b.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack g)\n(overcome g l)\n(attack b)\n(overcome b g)\n(attack j)\n(overcome j b)\n(attack d)\n(overcome d j)\n",
        "gold_label": "(attack g)\n(overcome g l)\n(attack b)\n(overcome b g)\n(attack j)\n(overcome j b)\n(attack d)\n(overcome d j)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 446,
        "example_instance_ids": [
            445
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object a, planet object b, planet object c, planet object g, planet object j, planet object l, province object a, province object b, province object c, province object g, province object j and province object l.\nMy goal is to have that object a craves object b, object b craves object l, object g craves object c, object j craves object g and object l craves object j.\n\nMy plan is as follows:\n\n[PLAN]\nattack object g\novercome object g from object c\nattack object j\novercome object j from object g\nattack object l\novercome object l from object j\nattack object b\novercome object b from object l\nattack object a\novercome object a from object b\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object c, planet object d, planet object g, planet object h, planet object l, province object c, province object d, province object g, province object h and province object l.\nMy goal is to have that object c craves object d, object d craves object g, object g craves object l and object l craves object h.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack l)\n(overcome l h)\n(attack g)\n(overcome g l)\n(attack d)\n(overcome d g)\n(attack c)\n(overcome c d)\n",
        "gold_label": "(attack l)\n(overcome l h)\n(attack g)\n(overcome g l)\n(attack d)\n(overcome d g)\n(attack c)\n(overcome c d)\n"
    },
    {
        "task": "task_5_plan_generalization",
        "prompt_type": "oneshot",
        "domain": "mystery_blocksworld",
        "instance_id": 478,
        "example_instance_ids": [
            477
        ],
        "question": "I am playing with a set of objects. Here are the actions I can do\n\n   Attack object\n   Feast object from another object\n   Succumb object\n   Overcome object from another object\n\nI have the following restrictions on my actions:\n    To perform Attack action, the following facts need to be true: Province object, Planet object, Harmony.\n    Once Attack action is performed the following facts will be true: Pain object.\n    Once Attack action is performed the following facts will be false: Province object, Planet object, Harmony.\n    To perform Succumb action, the following facts need to be true: Pain object.\n    Once Succumb action is performed the following facts will be true: Province object, Planet object, Harmony.    \n    Once Succumb action is performed the following facts will be false: Pain object.\n    To perform Overcome action, the following needs to be true: Province other object, Pain object.\n    Once Overcome action is performed the following will be true: Harmony, Province object, Object Craves other object.\n    Once Overcome action is performed the following will be false: Province other object, Pain object.\n    To perform Feast action, the following needs to be true: Object Craves other object, Province object, Harmony.\n    Once Feast action is performed the following will be true: Pain object, Province other object.\n    Once Feast action is performed the following will be false:, Object Craves other object, Province object, Harmony.\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object b, planet object c, planet object d, planet object e, planet object f, planet object g, planet object h, planet object i, planet object k, planet object l, province object b, province object c, province object d, province object e, province object f, province object g, province object h, province object i, province object k and province object l.\nMy goal is to have that object b craves object d, object c craves object g, object d craves object l, object e craves object c, object f craves object k, object g craves object b, object i craves object e, object k craves object i and object l craves object h.\n\nMy plan is as follows:\n\n[PLAN]\nattack object l\novercome object l from object h\nattack object d\novercome object d from object l\nattack object b\novercome object b from object d\nattack object g\novercome object g from object b\nattack object c\novercome object c from object g\nattack object e\novercome object e from object c\nattack object i\novercome object i from object e\nattack object k\novercome object k from object i\nattack object f\novercome object f from object k\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, harmony, planet object c, planet object h, planet object j, province object c, province object h and province object j.\nMy goal is to have that object c craves object h and object h craves object j.\n\nMy plan is as follows:\n\n[PLAN]",
        "input": "",
        "answer": "Final Answer: (attack h)\n(overcome h j)\n(attack c)\n(overcome c h)\n",
        "gold_label": "(attack h)\n(overcome h j)\n(attack c)\n(overcome c h)\n"
    }
]