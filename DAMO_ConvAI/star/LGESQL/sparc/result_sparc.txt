easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation LIKE "1"
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

hard pred: SELECT * FROM flights JOIN airports WHERE airports.City = "1"
hard gold: SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

hard pred: SELECT COUNT(*) FROM flights JOIN airports WHERE airports.City = "1"
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

easy pred: SELECT * FROM flights JOIN airlines WHERE airlines.Airline = "1"
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

easy pred: SELECT COUNT(*) FROM airlines JOIN flights WHERE airlines.Airline = "1"
easy gold: SELECT count(*) FROM AIRLINES WHERE Airline  =  "United Airlines"

medium pred: SELECT COUNT(*) FROM flights JOIN airports WHERE airports.AirportName = "1" AND flights.DestAirport = "1"
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

easy pred: SELECT * FROM flights JOIN airlines WHERE airlines.Airline = "1"
easy gold: SELECT * FROM AIRLINES WHERE Airline  =  "United Airlines"

hard pred: SELECT COUNT(*) FROM airlines JOIN flights JOIN airports JOIN flights WHERE airlines.Airline = "1" AND airports.City = "1"
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

easy pred: SELECT airports.City FROM airports
easy gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

hard pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) ASC
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC

hard pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) ASC
hard gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC

easy pred: SELECT flights.DestAirport FROM flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: SELECT airports.AirportCode FROM airports UNION SELECT flights.DestAirport FROM flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

easy pred: SELECT flights.DestAirport FROM flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport

easy pred: SELECT airports.AirportCode FROM airports UNION SELECT flights.DestAirport FROM flights
easy gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport

medium pred: SELECT flights.Airline , COUNT(*) FROM flights GROUP BY flights.Airline
medium gold: SELECT count(*) ,  T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline

extra pred: SELECT flights.Airline FROM flights GROUP BY flights.Airline ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT airlines.Abbreviation , airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC
hard gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*)

extra pred: SELECT airlines.Abbreviation , airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

easy pred: SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "1"
easy gold: SELECT * FROM FLIGHTS WHERE DestAirport  =  "AHD"

easy pred: SELECT * FROM airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: SELECT * FROM flights GROUP BY flights.Airline HAVING COUNT(*) > "1"
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

easy pred: SELECT * FROM airlines
easy gold: SELECT DISTINCT Airline FROM AIRLINES

medium pred: SELECT flights.Airline FROM flights GROUP BY flights.Airline HAVING COUNT(*) < "1"
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

easy pred: SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "1" OR flights.DestAirport = "1"
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

easy pred: SELECT flights.FlightNo FROM flights
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode

easy pred: SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "1"
easy gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode

medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = "1"
medium gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen"

hard pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = "1" OR airports.City = "1"
hard gold: SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

hard pred: SELECT flights.SourceAirport , flights.DestAirport FROM flights
hard gold: SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights

hard pred: SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

easy pred: SELECT Pets.weight , Pets.pet_age FROM Pets ORDER BY Pets.pet_age ASC
easy gold: SELECT weight FROM pets ORDER BY pet_age

medium pred: SELECT * FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > "1"
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: SELECT COUNT(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Age > "1"
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

hard pred: SELECT COUNT(*) FROM Student JOIN Has_Pet JOIN Pets WHERE Student.Sex = "1" AND Student.Sex = "1"
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

hard pred: SELECT * FROM Pets WHERE Pets.PetType = "1"
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

hard pred: SELECT * FROM Pets JOIN Has_Pet WHERE Pets.PetType = "1"
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

hard pred: SELECT Student.Major FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "1"
hard gold: SELECT major FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

extra pred: SELECT Student.Major , Student.Age FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "1"
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

hard pred: SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "1" )
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

hard pred: SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "1"
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

extra pred: SELECT Has_Pet.StuID FROM Pets JOIN Has_Pet WHERE Pets.PetType = "1" EXCEPT SELECT Has_Pet.StuID FROM Pets JOIN Has_Pet WHERE Pets.PetType = "1"
extra gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

extra pred: SELECT Student.Fname , Student.Age FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "1" EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "1" )
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' EXCEPT SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

easy pred: SELECT Pets.PetID FROM Pets GROUP BY Pets.PetID
easy gold: SELECT petid FROM pets

medium pred: SELECT AVG(Pets.pet_age) FROM Pets
medium gold: SELECT avg(pet_age) ,  pettype FROM pets GROUP BY pettype

easy pred: SELECT Student.StuID FROM Student JOIN Has_Pet
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets
easy gold: SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: SELECT Student.Fname , Student.Age FROM Student JOIN Has_Pet JOIN Pets
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

easy pred: SELECT Student.StuID FROM Student JOIN Has_Pet
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: SELECT Student.StuID FROM Student JOIN Has_Pet JOIN Pets WHERE Student.LName = "1"
medium gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

easy pred: SELECT * FROM Student JOIN Has_Pet JOIN Pets
easy gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

medium pred: SELECT COUNT(*) , Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

hard pred: SELECT Student.LName FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = "1" AND Pets.pet_age = "1"
hard gold: SELECT * FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

hard pred: SELECT * FROM Student EXCEPT SELECT * FROM Student JOIN Has_Pet
hard gold: SELECT * FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

extra pred: SELECT AVG(Student.Age) FROM Student EXCEPT SELECT Student.Age FROM Student JOIN Has_Pet JOIN Pets
extra gold: SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)

easy pred: SELECT country.Name FROM country WHERE country.Region = "1"
easy gold: SELECT * FROM country WHERE Region  =  "Caribbean"

easy pred: SELECT country.Name , country.SurfaceArea FROM country WHERE country.Region = "1"
easy gold: SELECT SurfaceArea FROM country WHERE Region  =  "Caribbean"

easy pred: SELECT SUM(country.SurfaceArea) FROM country WHERE country.Region = "1" OR country.Region = "1"
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "1" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

easy pred: SELECT COUNT(*) FROM country WHERE country.Continent = "1"
easy gold: SELECT sum(Population) FROM country WHERE Continent  =  "Asia"

easy pred: SELECT COUNT(*) FROM country WHERE country.Continent = "1"
easy gold: SELECT max(GNP) FROM country WHERE Continent  =  "Asia"

easy pred: SELECT country.Name FROM country WHERE country.Continent = "1"
easy gold: SELECT * FROM country WHERE Continent  =  "Africa"

medium pred: SELECT country.Name FROM country WHERE country.Continent = "1" AND country.GovernmentForm = "1"
medium gold: SELECT * FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

medium pred: SELECT AVG(country.GNP) , AVG(country.Population) FROM country WHERE country.GovernmentForm = "1"
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

medium pred: SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "1" AND countrylanguage.IsOfficial = "1"
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

easy pred: SELECT COUNT(*) FROM ( SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1" INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1" )
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

medium pred: SELECT countrylanguage.Language FROM countrylanguage
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

medium pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T"

extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1" INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

medium pred: SELECT * FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
medium gold: SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

medium pred: SELECT countrylanguage.Language FROM countrylanguage
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE IsOfficial  =  "T"

extra pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1" OR countrylanguage.Language = "1"
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = "1" ORDER BY city.Population DESC LIMIT 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

medium pred: SELECT countrylanguage.Language FROM countrylanguage
medium gold: SELECT T2.Language ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  "T"

hard pred: SELECT * FROM country JOIN countrylanguage WHERE countrylanguage.Language != "1"
hard gold: SELECT * FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

extra pred: SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage WHERE countrylanguage.Language != "1"
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

hard pred: SELECT country.Name FROM country EXCEPT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
hard gold: SELECT Name FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

extra pred: SELECT COUNT(*) FROM country WHERE country.Name != ( SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1" )
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

medium pred: SELECT * FROM country WHERE country.HeadOfState = "1"
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix"

medium pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE countrylanguage.IsOfficial = ( SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.HeadOfState = "1" )
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

easy pred: SELECT country.Name FROM country WHERE country.IndepYear > "1"
easy gold: SELECT T1.Name FROM country AS t1 WHERE  IndepYear  <  1930

medium pred: SELECT COUNT(countrylanguage.Language) FROM country JOIN countrylanguage WHERE country.IndepYear > "1"
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

easy pred: SELECT * FROM country WHERE country.Region = "1"
easy gold: SELECT * FROM country WHERE Continent  =  "Europe"

easy pred: SELECT MIN(country.SurfaceArea) FROM country WHERE country.Region = "1"
easy gold: SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe"

hard pred: SELECT * FROM country WHERE country.SurfaceArea > ( SELECT MIN(country.SurfaceArea) FROM country WHERE country.Region = "1" )
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

easy pred: SELECT MAX(country.Population) FROM country WHERE country.Continent = "1"
easy gold: SELECT min(population) FROM country WHERE Continent  =  "Asia"

extra pred: SELECT country.Population FROM country WHERE country.Population < ( SELECT MAX(country.Population) FROM country WHERE country.Continent = "1" )
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

extra pred: SELECT * FROM country WHERE country.Population > ( SELECT MIN(country.Population) FROM country WHERE country.Continent = "1" )
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

easy pred: SELECT country.Code FROM country
easy gold: SELECT CountryCode FROM countrylanguage

hard pred: SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "1"
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

easy pred: SELECT country.Code FROM country
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage

easy pred: SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "1"
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE ! =  "English"

hard pred: SELECT country.Code FROM country EXCEPT SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
hard gold: SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

medium pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English'

extra pred: SELECT country.Name FROM country EXCEPT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "1"
extra gold: SELECT Name FROM country WHERE Continent  =  'Europe' AND Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'English')

extra pred: SELECT city.Name FROM city WHERE city.Name = "1" EXCEPT SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.Language = "1"
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

medium pred: SELECT country.Name FROM country JOIN countrylanguage WHERE country.Continent = "1"
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: SELECT country.Name FROM country JOIN countrylanguage WHERE country.Continent = "1" AND countrylanguage.IsOfficial = "1"
medium gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

hard pred: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.IsOfficial = "1" AND countrylanguage.Language = "1"
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

medium pred: SELECT country.Name FROM country JOIN countrylanguage GROUP BY country.Name HAVING COUNT(*) >= "1"
medium gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

medium pred: SELECT COUNT(*) , country.Name FROM country JOIN countrylanguage GROUP BY country.Name HAVING COUNT(*) >= "1"
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

easy pred: SELECT AVG(city.Population) , MAX(city.Population) FROM city
easy gold: SELECT avg(Population) FROM city

easy pred: SELECT country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > "1"
easy gold: SELECT * FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: SELECT AVG(country.LifeExpectancy) , country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > "1"
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

medium pred: SELECT AVG(country.LifeExpectancy) , AVG(country.Population) FROM country GROUP BY country.Continent HAVING AVG(country.LifeExpectancy) < "1"
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

medium pred: SELECT country.Name FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
medium gold: SELECT * FROM country ORDER BY SurfaceArea DESC LIMIT 5

medium pred: SELECT country.Name FROM country ORDER BY country.Population ASC LIMIT 1
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

easy pred: SELECT country.Name FROM country WHERE country.Continent = "1"
easy gold: SELECT * FROM country WHERE continent  =  "Europe"

medium pred: SELECT country.Name FROM country WHERE country.Continent = "1" AND country.Population LIKE "1"
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

easy pred: SELECT country.Name FROM country WHERE country.Continent = "1"
easy gold: SELECT * FROM country WHERE Continent  =  "North America"

medium pred: SELECT country.Name FROM country WHERE country.Continent = "1" AND country.SurfaceArea > "1"
medium gold: SELECT * FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

hard pred: SELECT AVG(country.Population) , country.SurfaceArea FROM country WHERE country.Continent = "1" AND country.SurfaceArea > "1"
hard gold: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000

easy pred: SELECT * FROM TV_Channel WHERE TV_Channel.Language = "1"
easy gold: SELECT * FROM TV_Channel WHERE Country = "Italy"

easy pred: SELECT * FROM TV_Channel WHERE TV_Channel.Language = "1"
easy gold: SELECT * FROM TV_Channel WHERE Country = "Poland"

hard pred: SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon WHERE Cartoon.Title = "1"
hard gold: SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = "The Eyes of Despero!")

medium pred: SELECT COUNT(TV_Channel.series_name) , TV_Channel.Content FROM TV_Channel
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel

medium pred: SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Title = "1"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"

medium pred: SELECT Cartoon.Production_code , Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date DESC LIMIT 1
medium gold: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1

extra pred: SELECT TV_Channel.series_name , TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "1" OR Cartoon.Directed_by = "1"
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

easy pred: SELECT COUNT(*) FROM TV_Channel WHERE TV_Channel.Language = "1"
easy gold: SELECT COUNT(*) FROM TV_Channel WHERE Country = "Italy"

easy pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Money_Rank DESC
easy gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC

medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Money_Rank DESC LIMIT 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

easy pred: SELECT COUNT(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < "1"
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

easy pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > "1"
easy gold: SELECT * FROM poker_player WHERE Earnings  >  300000

hard pred: SELECT people.Name FROM poker_player JOIN people ORDER BY people.Height DESC LIMIT 1
hard gold: SELECT * FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

easy pred: SELECT COUNT(*) FROM people GROUP BY people.Nationality
easy gold: SELECT * FROM people GROUP BY Nationality

easy pred: SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

easy pred: SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality
easy gold: SELECT COUNT(*) FROM people GROUP BY Nationality

hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN ( SELECT poker_player.People_ID FROM poker_player )
hard gold: SELECT * FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

easy pred: SELECT death.killed , death.killed FROM death
easy gold: SELECT killed FROM death

easy pred: SELECT death.killed FROM death
easy gold: SELECT * FROM death as T1 JOIN ship as T2 ON T1.caused_by_ship_id  =  T2.id

medium pred: SELECT death.killed FROM death JOIN ship WHERE ship.tonnage = "1"
medium gold: SELECT * FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

easy pred: SELECT battle.id , battle.name FROM battle JOIN ship
easy gold: SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle

hard pred: SELECT death.killed , death.injured FROM death
hard gold: SELECT T1.id ,  T1.name, sum(T3.killed), sum(T3.injured) FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id

hard pred: SELECT death.killed FROM death WHERE death.killed >= "1"
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

medium pred: SELECT ship.id , ship.name FROM death JOIN ship
medium gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id

hard pred: SELECT ship.id , ship.name FROM death JOIN ship ORDER BY death.injured DESC
hard gold: SELECT T2.id ,  T2.name, sum(T1.injured) FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.injured)

medium pred: SELECT battle.name FROM battle WHERE battle.latin_commander = "1"
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

extra pred: SELECT COUNT(*) , battle.id FROM battle WHERE battle.id NOT IN ( SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = "1" )
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

extra pred: SELECT battle.id , battle.name FROM battle JOIN ship WHERE ship.location != "1"
extra gold: SELECT T1.id, T1.name FROM battle EXCEPT SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

medium pred: SELECT continents.Continent , countries.CountryName FROM countries JOIN continents
medium gold: SELECT T1.ContId ,  T1.Continent , * FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent;

medium pred: SELECT continents.Continent , COUNT(*) FROM continents JOIN countries GROUP BY continents.Continent
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

hard pred: SELECT MAX(cars_data.Horsepower) FROM cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower DESC LIMIT 1;

hard pred: SELECT MIN(cars_data.Horsepower) FROM cars_data
hard gold: SELECT T2.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

hard pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Horsepower = ( SELECT MAX(cars_data.Horsepower) FROM cars_data )
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

extra pred: SELECT * FROM cars_data WHERE cars_data.Weight > ( SELECT AVG(cars_data.Weight) FROM cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  >  (SELECT avg(Weight) FROM CARS_DATA)

extra pred: SELECT * FROM cars_data WHERE cars_data.Weight < ( SELECT AVG(cars_data.Weight) FROM cars_data )
extra gold: SELECT * FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

medium pred: SELECT cars_data.Id , cars_data.Horsepower , cars_data.MPG FROM cars_data JOIN car_names WHERE cars_data.Year = "1"
medium gold: Select T1.horsepower, T1.mpg, T1.id, T2.model from cars_data as T1 join car_names as T2 on T1.id = T2.MakeId where T1.year = '1970';

extra pred: SELECT cars_data.Id , car_makers.FullName , cars_data.Horsepower , cars_data.MPG FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Year = "1"
extra gold: SELECT T1.Maker, T4.horsepower, T4.mpg, T4.id, T2.model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

extra pred: SELECT car_makers.Maker , car_makers.FullName , cars_data.Horsepower , cars_data.MPG FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Year = "1"
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

extra pred: SELECT car_names.Make , car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.Year ASC LIMIT 1
extra gold: SELECT T2.Make , T2.Model, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

extra pred: SELECT car_names.Make , cars_data.Year FROM car_names JOIN cars_data ORDER BY cars_data.Year ASC LIMIT 1
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

easy pred: SELECT car_names.Model FROM car_names
easy gold: SELECT DISTINCT model FROM MODEL_LIST;

medium pred: SELECT car_names.Model , car_names.Make , cars_data.Year FROM car_names JOIN cars_data
medium gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id;

hard pred: SELECT car_names.Model , car_names.Make , cars_data.Year FROM car_names JOIN cars_data WHERE cars_data.Year > "1"
hard gold: SELECT T1.model, T2.Make, T3.Year FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

hard pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Year > "1"
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

medium pred: SELECT car_makers.FullName , countries.CountryName FROM countries JOIN car_makers
medium gold: Select T1.Maker, T2.CountryName from Car_Makers as T1 JOIN Countries as T2 on T1.Country = T2.CountryId;

medium pred: SELECT car_makers.FullName , continents.Continent , countries.CountryName FROM countries JOIN continents JOIN car_makers
medium gold: SELECT T1.Continent,  T3.Maker, T2.CountryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country;

hard pred: SELECT continents.Continent , countries.CountryName , COUNT(*) FROM countries JOIN continents JOIN car_makers GROUP BY continents.Continent
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

medium pred: SELECT countries.CountryName , COUNT(*) FROM countries JOIN car_makers GROUP BY countries.CountryName
medium gold: SELECT *, count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country;

extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY COUNT(*) ASC LIMIT 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) ASC LIMIT 1;

extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

medium pred: SELECT car_makers.FullName , car_makers.Id , COUNT(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id
medium gold: SELECT T1.Model ,  T2.FullName, T2.id  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id;

medium pred: SELECT car_names.MakeId FROM car_names WHERE car_names.Make = "1"
medium gold: SELECT T1.ID FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

easy pred: SELECT * FROM car_makers
easy gold: SELECT distinct Maker FROM CAR_MAKERS;

medium pred: SELECT countries.CountryName FROM car_makers JOIN countries
medium gold: SELECT T1.Maker, T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId;

medium pred: SELECT countries.CountryName FROM car_makers JOIN countries WHERE countries.CountryName = "1"
medium gold: SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

hard pred: SELECT COUNT(*) FROM countries JOIN car_makers WHERE countries.CountryName = "1"
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'Germany';

hard pred: SELECT COUNT(*) FROM countries JOIN car_makers WHERE countries.CountryName = "1"
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'japan';

hard pred: SELECT COUNT(*) FROM countries JOIN car_makers WHERE countries.CountryName = "1"
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

hard pred: SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Year = "1" AND cars_data.Cylinders = "1"
hard gold: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  8 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;

medium pred: SELECT countries.CountryName FROM countries JOIN car_makers
medium gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

medium pred: SELECT * , countries.CountryName FROM countries JOIN car_makers
medium gold: SELECT T3.Maker, T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country;

hard pred: SELECT countries.CountryName , COUNT(*) FROM countries JOIN car_makers GROUP BY countries.CountryName
hard gold: SELECT T1.CountryName, count(*) FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country GROUP BY T1.CountryName;

medium pred: SELECT car_names.Make , AVG(cars_data.Edispl) FROM cars_data JOIN car_names GROUP BY car_names.Make
medium gold: SELECT T1.Model, avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id group by T1.Model;

medium pred: SELECT AVG(cars_data.Edispl) , car_names.Model FROM cars_data JOIN car_names WHERE car_names.Make = "1" GROUP BY car_names.Model
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

hard pred: SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers WHERE car_makers.FullName = "1"
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id WHERE T3.FullName  =  'General Motors';

hard pred: SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers JOIN car_makers WHERE car_makers.FullName > "1"
hard gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T1.MakeId  =  T3.Id WHERE T3.weight > 3500;

extra pred: SELECT COUNT(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = "1" OR model_list.Model > "1"
extra gold: SELECT count(DISTINCT T2.Model) FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

extra pred: SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "1" OR model_list.Model > "1"
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

medium pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > "1" INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < "1"
medium gold: SELECT DISTINCT Year FROM CARS_DATA WHERE Weight  >  3000 AND Weight  <  4000;

medium pred: SELECT MIN(cars_data.Accelerate) FROM cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate ASC LIMIT 1;

medium pred: SELECT MAX(cars_data.Accelerate) FROM cars_data
medium gold: SELECT accelerate FROM CARS_DATA ORDER BY accelerate DESC LIMIT 1;

medium pred: SELECT MAX(cars_data.Horsepower) FROM cars_data
medium gold: SELECT horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

medium pred: SELECT cars_data.Accelerate FROM cars_data WHERE cars_data.Horsepower = ( SELECT MAX(cars_data.Horsepower) FROM cars_data )
medium gold: SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

hard pred: SELECT cars_data.Id FROM cars_data WHERE cars_data.Accelerate > ( SELECT MAX(cars_data.Accelerate) FROM cars_data WHERE cars_data.Horsepower > ( SELECT MAX(cars_data.Accelerate) FROM cars_data ) )
hard gold: SELECT id FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > ( SELECT MAX(cars_data.Accelerate) FROM cars_data WHERE cars_data.Horsepower < "1" )
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

hard pred: SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers
hard gold: SELECT CountryName FROM COUNTRIES where CountryId not in (SELECT T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country);

easy pred: SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers
easy gold: SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country;

easy pred: SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName HAVING COUNT(*) > "1" )
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  1 );

easy pred: SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName HAVING COUNT(*) > "1" )
easy gold: SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );

extra pred: SELECT car_names.MakeId , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Horsepower > ( SELECT AVG(cars_data.Horsepower) FROM cars_data )
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA);

extra pred: SELECT car_names.MakeId , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders <= "1"
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 5;

extra pred: SELECT car_names.MakeId , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders <= "1"
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <= 3;

extra pred: SELECT MAX(cars_data.Horsepower) , MIN(cars_data.Horsepower) , AVG(cars_data.Accelerate) FROM cars_data WHERE cars_data.Cylinders = "1" OR cars_data.Year < "1"
extra gold: SELECT accelerate FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY accelerate DESC LIMIT 1;

extra pred: SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = "1" OR cars_data.Year < "1"
extra gold: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;

medium pred: SELECT model_list.Model FROM model_list EXCEPT SELECT model_list.Model FROM car_makers JOIN model_list WHERE car_makers.FullName = "1"
medium gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id where T2.FullName != 'Ford Motor Company';

extra pred: SELECT model_list.Model , cars_data.Weight FROM car_names JOIN car_makers WHERE car_makers.FullName = "1" EXCEPT SELECT model_list.Model , cars_data.Weight FROM car_names JOIN model_list JOIN car_makers WHERE car_makers.FullName = "1"
extra gold: SELECT T1.model, T2.Make, T3.weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'

extra pred: SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "1" EXCEPT SELECT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Weight < "1"
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

medium pred: SELECT car_makers.Id , car_makers.FullName , model_list.Model , car_names.Make FROM model_list JOIN car_names JOIN car_makers
medium gold: SELECT T1.Id ,  T1.Maker, T2.Model FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker;

extra pred: SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "1"
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

medium pred: SELECT matches.loser_age FROM matches
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

easy pred: SELECT COUNT(matches.winner_name) FROM matches WHERE matches.year = "1"
easy gold: SELECT count(*) FROM (SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016)

medium pred: SELECT COUNT(*) FROM matches WHERE matches.loser_hand = "1" OR matches.year = "1"
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

medium pred: SELECT players.player_id , players.last_name FROM players ORDER BY players.birth_date DESC LIMIT 1
medium gold: SELECT player_id ,  last_name FROM players ORDER BY birth_date LIMIT 1

medium pred: SELECT players.first_name , players.country_code FROM players ORDER BY players.birth_date DESC LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

hard pred: SELECT rankings.tours FROM rankings ORDER BY rankings.tours ASC LIMIT 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours ASC LIMIT 1

hard pred: SELECT rankings.tours FROM rankings ORDER BY rankings.tours DESC LIMIT 1
hard gold: SELECT T2.tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

hard pred: SELECT matches.loser_name , matches.loser_rank_points FROM matches GROUP BY matches.loser_name , matches.loser_rank_points ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT loser_name, loser_rank_points FROM matches GROUP BY loser_name ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT matches.loser_name , matches.loser_rank_points FROM matches GROUP BY matches.loser_name , matches.loser_rank_points ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = "1" ORDER BY matches.loser_rank_points DESC LIMIT 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

medium pred: SELECT MIN(matches.minutes) FROM matches
medium gold: SELECT minutes FROM matches ORDER BY minutes ASC LIMIT 1

medium pred: SELECT MAX(matches.minutes) FROM matches
medium gold: SELECT minutes FROM matches ORDER BY minutes DESC LIMIT 1

medium pred: SELECT rankings.tours , players.first_name FROM players JOIN rankings
medium gold: SELECT T2.tours, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: SELECT AVG(rankings.ranking) FROM rankings
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: SELECT rankings.tours FROM rankings
medium gold: SELECT tours FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: SELECT AVG(rankings.ranking_points) , players.first_name FROM rankings JOIN players
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

medium pred: SELECT SUM(rankings.ranking_points) FROM rankings
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

easy pred: SELECT COUNT(*) , players.country_code FROM players GROUP BY players.country_code
easy gold: SELECT count(*) FROM players GROUP BY country_code

medium pred: SELECT players.country_code , players.hand , COUNT(*) FROM players GROUP BY players.country_code
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code

medium pred: SELECT players.hand , COUNT(*) FROM players GROUP BY players.country_code HAVING COUNT(*) > "1"
medium gold: SELECT count(*), country_code FROM players GROUP BY country_code HAVING count(*) > 50

medium pred: SELECT matches.loser_name FROM matches ORDER BY matches.loser_age DESC LIMIT 1
medium gold: SELECT DISTINCT winner_name FROM matches ORDER BY winner_age DESC LIMIT 3

medium pred: SELECT matches.loser_name , matches.winner_rank FROM matches ORDER BY matches.loser_age ASC LIMIT 1
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

medium pred: SELECT COUNT(matches.winner_name) FROM players JOIN matches WHERE players.hand = "1" AND matches.tourney_name = "1"
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

easy pred: SELECT * FROM orchestra
easy gold: SELECT Record_Company FROM orchestra

medium pred: SELECT orchestra.Year_of_Founded FROM orchestra
medium gold: SELECT Record_Company, Year_of_Founded FROM orchestra

easy pred: SELECT orchestra.Record_Company FROM orchestra EXCEPT SELECT orchestra.Record_Company FROM orchestra
easy gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company

easy pred: SELECT * FROM orchestra
easy gold: SELECT Record_Company FROM orchestra

easy pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "1" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "1"
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003

easy pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "1" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "1"
easy gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

medium pred: SELECT Documents.Document_Name , Documents.Document_Description FROM Documents WHERE Documents.Document_Description LIKE "1"
medium gold: SELECT document_name FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: SELECT Documents.Document_ID , Documents.Template_ID , Templates.Template_Type_Code FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = "1"
medium gold: SELECT T1.document_id FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID where T2.Template_Type_Code  =  'PPT'

hard pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_ID NOT IN ( SELECT Documents.Template_ID FROM Documents )
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

easy pred: SELECT Documents.Template_ID FROM Documents
easy gold: SELECT template_id FROM Templates

easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

medium pred: SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates JOIN Documents GROUP BY Documents.Template_ID
medium gold: SELECT T1.template_type_code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

hard pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY COUNT(*) DESC
hard gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC

extra pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
easy gold: SELECT template_type_code FROM Templates

easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates
easy gold: SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code NOT IN ( SELECT Templates.Template_Type_Code FROM Templates )
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

medium pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates
medium gold: SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

medium pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

easy pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE "1"
easy gold: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'

medium pred: SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

medium pred: SELECT singer.Song_Name , singer.Song_release_year FROM singer ORDER BY singer.Age DESC LIMIT 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

easy pred: SELECT AVG(stadium.Average) FROM stadium
easy gold: SELECT avg(capacity) FROM stadium

medium pred: SELECT AVG(stadium.Average) , MAX(stadium.Capacity) FROM stadium
medium gold: SELECT avg(capacity) ,  max(capacity) FROM stadium

extra pred: SELECT stadium.Name , stadium.Capacity FROM concert JOIN stadium WHERE concert.Year <= "1" GROUP BY stadium.Name ORDER BY COUNT(*) DESC
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC

extra pred: SELECT stadium.Name , stadium.Capacity FROM concert JOIN stadium WHERE concert.Year >= "1" GROUP BY stadium.Name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

easy pred: SELECT singer.Name , singer.Net_Worth_Millions FROM singer ORDER BY singer.Net_Worth_Millions ASC
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC

medium pred: SELECT singer.Citizenship , COUNT(*) FROM singer GROUP BY singer.Citizenship ORDER BY COUNT(*) ASC
medium gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC

hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship HAVING COUNT(*) = "1" ORDER BY COUNT(*) ASC
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

medium pred: SELECT singer.Name , COUNT(*) FROM singer JOIN song GROUP BY song.Singer_ID
medium gold: SELECT T1.Name, COUNT(*) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

medium pred: SELECT singer.Name FROM singer JOIN song GROUP BY song.Singer_ID HAVING COUNT(*) > "1"
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

medium pred: SELECT employee.City FROM employee GROUP BY employee.City HAVING COUNT(*) > "1"
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY employee.Name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

hard pred: SELECT employee.Name FROM employee EXCEPT SELECT employee.Name FROM employee JOIN evaluation WHERE evaluation.Year_awarded = "1"
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

easy pred: SELECT COUNT(*) FROM hiring JOIN shop
easy gold: SELECT count(distinct Shop_ID) FROM hiring

medium pred: SELECT shop.Name , COUNT(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership <= "1"
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

easy pred: SELECT visitor.Name FROM visitor JOIN visit INTERSECT SELECT visitor.Name FROM visitor JOIN visit
easy gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id

medium pred: SELECT visitor.Name FROM visitor JOIN visit GROUP BY visitor.Name HAVING COUNT(*) > "1" INTERSECT SELECT visitor.Name FROM visitor JOIN visit GROUP BY visitor.Name HAVING COUNT(*) > "1"
medium gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

medium pred: SELECT visitor.ID , visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING COUNT(*) > "1" INTERSECT SELECT visitor.ID , visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING COUNT(*) > "1"
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

extra pred: SELECT visitor.Name FROM visitor JOIN visit GROUP BY visitor.Name ORDER BY SUM(visit.Total_spent) DESC LIMIT 1
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

extra pred: SELECT visitor.ID , visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visitor.ID ORDER BY SUM(visit.Total_spent) DESC LIMIT 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

medium pred: SELECT museum.Museum_ID , museum.Name , COUNT(visit.Num_of_Ticket) FROM visit JOIN museum GROUP BY visit.Museum_ID
medium gold: SELECT t2.Museum_ID ,  t1.name, count(*) FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID

medium pred: SELECT visit.visitor_ID FROM visit GROUP BY visit.visitor_ID ORDER BY SUM(visit.Num_of_Ticket) DESC LIMIT 1
medium gold: SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1

hard pred: SELECT visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visit.visitor_ID ORDER BY SUM(visit.Num_of_Ticket) DESC LIMIT 1
hard gold: SELECT t1.name,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

easy pred: SELECT visit.Total_spent FROM visit ORDER BY visit.Num_of_Ticket DESC LIMIT 1
easy gold: SELECT max(Total_spent) FROM visit

easy pred: SELECT visitor.Level_of_membership FROM visitor ORDER BY visitor.Level_of_membership ASC LIMIT 1
easy gold: SELECT min(Level_of_membership) FROM visitor

medium pred: SELECT visit.Num_of_Ticket FROM visitor JOIN visit WHERE visitor.Level_of_membership = "1"
medium gold: SELECT t2.Total_spent FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

extra pred: SELECT visitor.Name FROM visit JOIN visitor JOIN museum WHERE museum.Open_Year > "1" INTERSECT SELECT visitor.Name FROM visit JOIN visitor JOIN museum WHERE museum.Open_Year < "1"
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

extra pred: SELECT COUNT(*) FROM visitor WHERE visitor.ID NOT IN ( SELECT visit.visitor_ID FROM visit JOIN museum WHERE museum.Open_Year > "1" )
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

medium pred: SELECT Highschooler.name , Highschooler.name FROM Highschooler JOIN Friend
medium gold: SELECT T2.name, T3.name FROM friend as T1 join highschooler as T2  on friend_id = T2.ID join highschooler as T3 on student_id = T3.ID

easy pred: SELECT COUNT(*) FROM ( SELECT COUNT(*) FROM Friend JOIN Highschooler GROUP BY Friend.student_id HAVING COUNT(*) > "1" )
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  > 5)

easy pred: SELECT COUNT(*) FROM Friend JOIN Highschooler GROUP BY Friend.student_id HAVING COUNT(*) >= "1"
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 3)

hard pred: SELECT COUNT(*) FROM Friend JOIN Highschooler WHERE Highschooler.name = "1"
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.name = "1"
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

hard pred: SELECT COUNT(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = "1"
hard gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

medium pred: SELECT Friend.student_id , COUNT(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id
medium gold: SELECT student_id, count(*) FROM friend group by student_id

easy pred: SELECT Friend.student_id FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "1"
easy gold: SELECT student_id FROM Friend

hard pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

easy pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "1"
easy gold: SELECT count(*) FROM (SELECT * FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >= 5)

easy pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "1"
easy gold: SELECT distinct T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) < "1"
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

medium pred: SELECT Likes.student_id , Friend.student_id , Friend.student_id FROM Highschooler JOIN Likes JOIN Friend
medium gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id

extra pred: SELECT Likes.student_id FROM Highschooler JOIN Likes
extra gold: SELECT distinct T1.student_id, T2.liked_id FROM Friend as T1 JOIN Likes as T2 ON T1.student_id = T2.student_id where T1.student_id in (SELECT liked_id FROM Likes)

hard pred: SELECT Highschooler.ID FROM Highschooler JOIN Likes
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

easy pred: SELECT COUNT(*) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Likes.student_id FROM Likes )
easy gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

easy pred: SELECT COUNT(*) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
easy gold: SELECT count (*) FROM (SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id)

hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

hard pred: SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Likes
hard gold: SELECT name FROM Highschooler where ID not in (SELECT student_id FROM Likes)

easy pred: SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Likes
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

medium pred: SELECT Highschooler.name , COUNT(*) FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Likes
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

easy pred: SELECT COUNT(*) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
easy gold: SELECT count(distinct student_id) FROM likes

easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
easy gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  1

medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

extra pred: SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )
extra gold: SELECT avg(grade) FROM Highschooler WHERE id not IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

hard pred: SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend )
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

easy pred: SELECT teacher.Age FROM teacher
easy gold: SELECT Hometown FROM teacher

easy pred: SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

easy pred: SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown
easy gold: SELECT COUNT(*) FROM teacher GROUP BY Hometown

medium pred: SELECT course.Course FROM course_arrange JOIN course
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

medium pred: SELECT teacher.Name , COUNT(*) FROM teacher JOIN course_arrange GROUP BY course_arrange.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: SELECT teacher.Name , COUNT(*) FROM teacher JOIN course_arrange GROUP BY course_arrange.Teacher_ID
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING COUNT(*) >= "1"
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

easy pred: SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types
easy gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code

medium pred: SELECT Ref_Property_Types.property_type_description , Ref_Property_Types.property_type_code FROM Ref_Property_Types JOIN Properties GROUP BY Ref_Property_Types.property_type_code
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

easy pred: SELECT AREA_CODE_STATE.area_code , AREA_CODE_STATE.state FROM AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

easy pred: SELECT COUNT(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
easy gold: SELECT count(*) FROM area_code_state

easy pred: SELECT * FROM VOTES
easy gold: SELECT state FROM votes

medium pred: SELECT * , VOTES.vote_id FROM VOTES
medium gold: SELECT vote_id,  state FROM votes

medium pred: SELECT VOTES.vote_id , VOTES.phone_number FROM VOTES
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

easy pred: SELECT VOTES.created FROM VOTES WHERE VOTES.state = "1" ORDER BY VOTES.created DESC LIMIT 1
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

medium pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number HAVING COUNT(*) >= "1"
medium gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

extra pred: SELECT CONTESTANTS.contestant_name , CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number ORDER BY COUNT(*) ASC LIMIT 1
extra gold: SELECT * FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

hard pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN ( SELECT VOTES.contestant_number FROM VOTES )
hard gold: SELECT * FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

easy pred: SELECT AREA_CODE_STATE.area_code , AREA_CODE_STATE.state FROM AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

medium pred: SELECT AREA_CODE_STATE.area_code , COUNT(*) FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code
medium gold: SELECT count(*) FROM AREA_CODE_STATE AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code

easy pred: SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE
easy gold: SELECT * FROM area_code_state

extra pred: SELECT Departments.department_description FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T2.department_description ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT Departments.department_name FROM Departments JOIN Degree_Programs WHERE Departments.department_name = "1"
medium gold: SELECT * FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

medium pred: SELECT Departments.department_name FROM Departments WHERE Departments.department_name LIKE "1"
medium gold: SELECT * FROM Departments WHERE department_name LIKE '%computer%'

medium pred: SELECT COUNT(*) FROM Student_Enrolment GROUP BY Student_Enrolment.semester_id HAVING Student_Enrolment.semester_id = "1"
medium gold: SELECT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

medium pred: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.semester_id HAVING COUNT(Student_Enrolment.semester_id) = "1"
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

hard pred: SELECT COUNT(*) FROM Degree_Programs JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = "1"
hard gold: SELECT DISTINCT count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

extra pred: SELECT Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 3

extra pred: SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT Courses.course_description FROM Courses JOIN Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) ASC LIMIT 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) ASC LIMIT 1

extra pred: SELECT Courses.course_description FROM Courses JOIN Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT Student_Enrolment.degree_program_id , Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT Student_Enrolment.student_id , Students.first_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 3

extra pred: SELECT Student_Enrolment.student_id , Students.first_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT Courses.course_name , COUNT(*) FROM Courses GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT Courses.course_name FROM Courses GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT COUNT(*) FROM Students WHERE Students.student_id NOT IN ( SELECT Student_Enrolment.student_id FROM Student_Enrolment JOIN Addresses WHERE Addresses.state_province_county = "1" )
extra gold: SELECT count(*) FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

extra pred: SELECT Students.last_name FROM Students WHERE Students.student_id NOT IN ( SELECT Student_Enrolment.student_id FROM Student_Enrolment JOIN Addresses WHERE Addresses.state_province_county = "1" )
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

medium pred: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_first_registered DESC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

medium pred: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.last_name ASC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left DESC LIMIT 1

medium pred: SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.last_name ASC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

extra pred: SELECT Students.current_address_id FROM Students GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.address_id FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT COUNT(*) FROM Students WHERE Students.current_address_id IN ( SELECT Students.current_address_id FROM Students JOIN Addresses GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1 )
extra gold: SELECT count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT Addresses.line_1 , Addresses.line_3 FROM Addresses JOIN Students GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT COUNT(*) FROM Student_Enrolment_Courses JOIN Transcript_Contents JOIN Transcripts GROUP BY Student_Enrolment_Courses.course_id HAVING COUNT(*) <= "1"
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) ASC LIMIT 1

hard pred: SELECT COUNT(*) FROM Student_Enrolment_Courses JOIN Transcript_Contents JOIN Transcripts GROUP BY Student_Enrolment_Courses.course_id HAVING COUNT(*) <= "1"
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.semester_id = "1"
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master'

medium pred: SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.semester_id = "1"
medium gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

extra pred: SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Degree_Programs.degree_summary_name = "1" INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Degree_Programs.degree_summary_name = "1"
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

hard pred: SELECT Dogs.age FROM Dogs JOIN Treatments
hard gold: SELECT * FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

hard pred: SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

easy pred: SELECT COUNT(*) FROM Professionals WHERE Professionals.role_code = "1" AND Professionals.state = "1"
easy gold: SELECT count(*) FROM Professionals WHERE state  =  'Connecticut'

extra pred: SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Professionals JOIN Treatments WHERE Professionals.state = "1" UNION SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) > "1"
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

medium pred: SELECT Dogs.name , Treatments.cost_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) > "1"
medium gold: SELECT name FROM Treatments  AS T1 JOIN dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 500

hard pred: SELECT Dogs.name , Treatments.cost_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) > "1"
hard gold: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )

hard pred: SELECT Professionals.first_name , Professionals.last_name , Owners.last_name FROM Professionals
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners

easy pred: SELECT Dogs.name FROM Professionals JOIN Dogs
easy gold: SELECT name FROM Dogs

hard pred: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

medium pred: SELECT Professionals.professional_id , Professionals.first_name , Professionals.email_address , Treatments.treatment_type_code FROM Professionals JOIN Treatments
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.email_address, T2.treatment_type_code  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

medium pred: SELECT Owners.owner_id FROM Owners JOIN Dogs GROUP BY Dogs.owner_id HAVING COUNT(*) = "1"
medium gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name, count(*) FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id Having count(*) = 2

extra pred: SELECT Owners.owner_id FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT Professionals.last_name , COUNT(*) FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id
medium gold: SELECT T1.professional_id , count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 2

medium pred: SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
medium gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code limit 1

extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT Owners.first_name , Owners.last_name , SUM(Treatments.cost_of_treatment) FROM Owners JOIN Dogs JOIN Treatments
hard gold: SELECT T1.owner_id, T3.cost_of_treatment  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id

extra pred: SELECT Owners.owner_id , Owners.first_name , Owners.last_name FROM Dogs JOIN Owners JOIN Treatments GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

easy pred: SELECT Treatment_Types.treatment_type_code , Treatment_Types.treatment_type_description FROM Treatment_Types
easy gold: SELECT * FROM Treatment_Types

extra pred: SELECT Treatment_Types.treatment_type_code , Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) DESC
extra gold: SELECT treatment_type_code, sum(cost_of_treatment) FROM Treatments group by treatment_type_code order by sum(cost_of_treatment) desc

extra pred: SELECT Treatment_Types.treatment_type_code , Treatment_Types.treatment_type_description , COUNT(Treatments.cost_of_treatment) FROM Treatment_Types JOIN Treatments GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) DESC
extra gold: SELECT T2.treatment_type_code, T1.treatment_type_description,  sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

medium pred: SELECT COUNT(*) FROM ( SELECT COUNT(*) FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING COUNT(Treatments.cost_of_treatment) > "1" )
medium gold: SELECT count(name) FROM Treatments AS T1 JOIN DOGS AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id Having sum(cost_of_treatment) > 700

hard pred: SELECT Owners.owner_id , Owners.last_name FROM Dogs JOIN Owners JOIN Treatments GROUP BY Owners.owner_id HAVING COUNT(Treatments.cost_of_treatment) > "1"
hard gold: SELECT T1.owner_id ,T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id Having sum(T3.cost_of_treatment) > 400

extra pred: SELECT Owners.owner_id , Owners.last_name FROM Owners JOIN Dogs JOIN Treatments GROUP BY Owners.owner_id ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

medium pred: SELECT Professionals.first_name , Treatments.treatment_type_code FROM Professionals JOIN Treatments
medium gold: SELECT T1.first_name, T2.treatment_type_code FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: SELECT Professionals.first_name , Treatments.treatment_type_code , COUNT(*) FROM Professionals JOIN Treatments GROUP BY Treatments.treatment_type_code
medium gold: SELECT T1.first_name, T2.treatment_type_code, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id

medium pred: SELECT Professionals.first_name , Professionals.cell_number , COUNT(*) FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING COUNT(*) = "1"
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  = 1

medium pred: SELECT Treatments.professional_id , Professionals.first_name , COUNT(*) FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING COUNT(*) >= "1"
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

extra pred: SELECT Professionals.first_name , Professionals.last_name FROM Treatments JOIN Professionals ORDER BY Treatments.cost_of_treatment ASC LIMIT 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT min(cost_of_treatment) FROM Treatments )

extra pred: SELECT Professionals.first_name , Professionals.last_name FROM Treatments JOIN Professionals ORDER BY Treatments.cost_of_treatment DESC LIMIT 1
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  = ( SELECT max(cost_of_treatment) FROM Treatments )

hard pred: SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) DESC LIMIT 1

hard pred: SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
hard gold: SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code Order BY count(*) ASC LIMIT 1

extra pred: SELECT Dogs.breed_code , Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

medium pred: SELECT * FROM Dogs ORDER BY Dogs.age DESC LIMIT 1
medium gold: SELECT * FROM Dogs order by age asc limit 1

extra pred: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age DESC LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

extra pred: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age ASC LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT min(age) FROM Dogs )

medium pred: SELECT Professionals.role_code , Professionals.street , Professionals.city FROM Professionals WHERE Professionals.state = "1"
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE state = 'Wisconsin'

medium pred: SELECT Professionals.role_code , Professionals.city , Professionals.street FROM Professionals WHERE Professionals.city LIKE "1"
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

easy pred: SELECT Dogs.age FROM Dogs ORDER BY Dogs.age DESC
easy gold: SELECT age FROM Dogs ORDER BY age

easy pred: SELECT * FROM Treatments ORDER BY Treatments.cost_of_treatment ASC
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment ASC

easy pred: SELECT * FROM Treatments ORDER BY Treatments.cost_of_treatment DESC
easy gold: SELECT cost_of_treatment FROM Treatments ORDER BY cost_of_treatment DESC

medium pred: SELECT * FROM Treatments ORDER BY Treatments.cost_of_treatment DESC LIMIT 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: SELECT * FROM Dogs
easy gold: SELECT count(*) FROM Dogs

extra pred: SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN ( SELECT Dogs.owner_id FROM Dogs WHERE Dogs.dog_id = "1" )
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

extra pred: SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN ( SELECT Dogs.owner_id FROM Dogs JOIN Owners WHERE Owners.state = "1" )
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

extra pred: SELECT COUNT(*) FROM Professionals WHERE Professionals.professional_id NOT IN ( SELECT Treatments.professional_id FROM Treatments JOIN Professionals WHERE Professionals.city = "1" )
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

                     easy                 medium               hard                 extra                all                  joint_all           
count                483                  441                  145                  134                  1203                 422                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.787                0.689                0.455                0.410                0.669                0.469               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.899                0.823                0.821                0.761                0.846                0.000               
select(no AGG)       0.913                0.839                0.848                0.776                0.863                0.000               
where                0.883                0.898                0.737                0.588                0.822                0.000               
where(no OP)         0.903                0.910                0.789                0.706                0.858                0.000               
group(no Having)     0.800                0.844                0.778                0.806                0.819                0.000               
group                0.800                0.798                0.694                0.774                0.776                0.000               
order                0.727                0.719                0.860                0.873                0.805                0.000               
and/or               1.000                0.984                0.986                0.925                0.984                0.000               
IUEN                 0.000                0.000                0.471                0.591                0.396                0.000               
keywords             0.855                0.931                0.787                0.797                0.865                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.899                0.823                0.821                0.761                0.846                0.000               
select(no AGG)       0.913                0.839                0.848                0.776                0.863                0.000               
where                0.919                0.877                0.709                0.526                0.806                0.000               
where(no OP)         0.939                0.889                0.759                0.632                0.842                0.000               
group(no Having)     0.952                0.773                0.757                0.820                0.798                0.000               
group                0.952                0.731                0.676                0.787                0.756                0.000               
order                0.842                0.667                0.755                0.925                0.789                0.000               
and/or               0.994                1.000                1.000                0.984                0.996                0.000               
IUEN                 0.000                0.000                0.400                0.542                0.477                0.000               
keywords             0.941                0.880                0.738                0.791                0.854                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.899                0.823                0.821                0.761                0.846                1.000               
select(no AGG)       0.913                0.839                0.848                0.776                0.863                1.000               
where                0.901                0.888                0.723                0.556                0.814                1.000               
where(no OP)         0.921                0.899                0.774                0.667                0.850                1.000               
group(no Having)     0.870                0.807                0.767                0.813                0.809                1.000               
group                0.870                0.763                0.685                0.780                0.766                1.000               
order                0.780                0.692                0.804                0.899                0.797                1.000               
and/or               0.997                0.992                0.993                0.953                0.990                1.000               
IUEN                 1.000                1.000                0.432                0.565                0.433                1.000               
keywords             0.896                0.905                0.762                0.794                0.860                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                422                  422                  270                  88                   1                   

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.765                0.649                0.585                0.568                0.000               
